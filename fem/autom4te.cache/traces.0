m4trace:acx_mpi.m4:108: -1- AC_DEFUN([ACX_MPI], [
AC_PREREQ(2.50) dnl for AC_LANG_CASE

AC_LANG_CASE(
[C], [
	AC_REQUIRE([AC_PROG_CC])
	AC_CHECK_PROGS(MPICC, mpicc hcc mpcc mpcc_r mpxlc, $CC)
	acx_mpi_save_CC="$CC"
	CC="$MPICC"
	AC_SUBST(MPICC)
],
[C++], [
	AC_REQUIRE([AC_PROG_CXX])
	AC_CHECK_PROGS(MPICXX, mpiCC mpCC, $CXX)
	acx_mpi_save_CXX="$CXX"
	CXX="$MPICXX"
	AC_SUBST(MPICXX)
],
[Fortran 77], [
	AC_REQUIRE([AC_PROG_F77])
	AC_CHECK_PROGS(MPIF77, mpif77 hf77 mpxlf mpf77 mpif90 mpf90 mpxlf90 mpxlf95 mpxlf_r, $F77)
	acx_mpi_save_F77="$F77"
	F77="$MPIF77"
	AC_SUBST(MPIF77)
],
[Fortran 90], [
	AC_REQUIRE([AC_PROG_FC])
	AC_CHECK_PROGS(MPIF90, mpf90 mpf95, $FC)
	acx_mpi_save_FC="$FC"
	FC="$MPIFC"
	AC_SUBST(MPIFC)])

if test x = x"$MPILIBS"; then
	AC_LANG_CASE(
	        [C], [AC_CHECK_FUNC(MPI_Init, [MPILIBS=" "])],
		[C++], [AC_CHECK_FUNC(MPI_Init, [MPILIBS=" "])],
		[Fortran 77], [AC_MSG_CHECKING([for MPI_Init])
			       AC_TRY_LINK([],[call MPI_Init], [MPILIBS=" " AC_MSG_RESULT(yes)], [AC_MSG_RESULT(no)])],
		[Fortran 90], [AC_MSG_CHECKING([for MPI_Init])
			       AC_TRY_LINK([],[call MPI_Init], [MPILIBS=" " AC_MSG_RESULT(yes)], [AC_MSG_RESULT(no)])])

fi
if test x = x"$MPILIBS"; then
	AC_CHECK_LIB(mpi, MPI_Init, [MPILIBS="-lmpi"])
fi
if test x = x"$MPILIBS"; then
	AC_CHECK_LIB(mpich, MPI_Init, [MPILIBS="-lmpich"])
fi

dnl We have to use AC_TRY_COMPILE and not AC_CHECK_HEADER because the
dnl latter uses $CPP, not $CC (which may be mpicc).
AC_LANG_CASE([C], [if test x != x"$MPILIBS"; then
	AC_MSG_CHECKING([for mpi.h])
	AC_TRY_COMPILE([#include <mpi.h>],[],[AC_MSG_RESULT(yes)], [MPILIBS=""
		AC_MSG_RESULT(no)])
fi],
[C++], [if test x != x"$MPILIBS"; then
	AC_MSG_CHECKING([for mpi.h])
	AC_TRY_COMPILE([#include <mpi.h>],[],[AC_MSG_RESULT(yes)], [MPILIBS=""
		AC_MSG_RESULT(no)])
fi])

AC_LANG_CASE([C], [CC="$acx_mpi_save_CC"],
	[C++], [CXX="$acx_mpi_save_CXX"],
	[Fortran 77], [F77="$acx_mpi_save_F77"],
	[Fortran 90], [FC="$acx_mpi_save_FC"])

AC_SUBST(MPILIBS)

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x = x"$MPILIBS"; then
        $2
	HAVE_MPI="No MPI found"
        :
else
        ifelse([$1],,[AC_DEFINE(HAVE_MPI,1,[Define if you have the MPI library.]) HAVE_MPI="Using MPI"],[$1])
        :
fi
])
m4trace:acx_blas.m4:149: -1- AC_DEFUN([ACX_BLAS], [
AC_PREREQ(2.50)
AC_REQUIRE([AC_F77_LIBRARY_LDFLAGS])
acx_blas_ok=no

AC_ARG_WITH(blas,
	[AC_HELP_STRING([--with-blas=<lib>], [use BLAS library <lib>])])
case $with_blas in
	yes | "") ;;
	no) acx_blas_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) BLAS_LIBS="$with_blas" ;;
	*) BLAS_LIBS="-l$with_blas" ;;
esac

# Get fortran linker names of BLAS functions to check for.
AC_F77_FUNC(sgemm)
AC_F77_FUNC(dgemm)

acx_blas_save_LIBS="$LIBS"
LIBS="$LIBS $FLIBS"

# First, check BLAS_LIBS environment variable
if test $acx_blas_ok = no; then
if test "x$BLAS_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
	AC_MSG_CHECKING([for $sgemm in $BLAS_LIBS])
	AC_TRY_LINK_FUNC($sgemm, [acx_blas_ok=yes], [BLAS_LIBS=""])
	AC_MSG_RESULT($acx_blas_ok)
	LIBS="$save_LIBS"
fi
fi

# BLAS linked to by default?  (happens on some supercomputers)
if test $acx_blas_ok = no; then
	save_LIBS="$LIBS"; LIBS="$LIBS"
	AC_CHECK_FUNC($sgemm, [acx_blas_ok=yes])
	LIBS="$save_LIBS"
fi

# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(atlas, ATL_xerbla,
		[AC_CHECK_LIB(f77blas, $sgemm,
		[AC_CHECK_LIB(cblas, cblas_dgemm,
			[acx_blas_ok=yes
			 BLAS_LIBS="-lcblas -lf77blas -latlas"],
			[], [-lf77blas -latlas])],
			[], [-latlas])])
fi

# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(blas, $sgemm,
		[AC_CHECK_LIB(dgemm, $dgemm,
		[AC_CHECK_LIB(sgemm, $sgemm,
			[acx_blas_ok=yes; BLAS_LIBS="-lsgemm -ldgemm -lblas"],
			[], [-lblas])],
			[], [-lblas])])
fi

# BLAS in Alpha CXML library?
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(cxml, $sgemm, [acx_blas_ok=yes;BLAS_LIBS="-lcxml"])
fi

# BLAS in Alpha DXML library? (now called CXML, see above)
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(dxml, $sgemm, [acx_blas_ok=yes;BLAS_LIBS="-ldxml"])
fi

# BLAS in Sun Performance library?
if test $acx_blas_ok = no; then
	if test "x$GCC" != xyes; then # only works with Sun CC
		AC_CHECK_LIB(sunmath, acosp,
			[AC_CHECK_LIB(sunperf, $sgemm,
        			[BLAS_LIBS="-xlic_lib=sunperf -lsunmath"
                                 acx_blas_ok=yes],[],[-lsunmath])])
	fi
fi

# BLAS in SCSL library?  (SGI/Cray Scientific Library)
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(scs, $sgemm, [acx_blas_ok=yes; BLAS_LIBS="-lscs"])
fi

# BLAS in SGIMATH library?
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(complib.sgimath, $sgemm,
		     [acx_blas_ok=yes; BLAS_LIBS="-lcomplib.sgimath"])
fi

# BLAS in IBM ESSL library? (requires generic BLAS lib, too)
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(blas, $sgemm,
		[AC_CHECK_LIB(essl, $sgemm,
			[acx_blas_ok=yes; BLAS_LIBS="-lessl -lblas"],
			[], [-lblas $FLIBS])])
fi

# Generic BLAS library?
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(blas, $sgemm, [acx_blas_ok=yes; BLAS_LIBS="-lblas"])
fi

AC_SUBST(BLAS_LIBS)

LIBS="$acx_blas_save_LIBS"

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_blas_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_BLAS,1,[Define if you have a BLAS library.]),[$1])
        :
else
        acx_blas_ok=no
        $2
fi
])
m4trace:acx_lapack.m4:91: -1- AC_DEFUN([ACX_LAPACK], [
AC_REQUIRE([ACX_BLAS])
acx_lapack_ok=no

AC_ARG_WITH(lapack,
	[AC_HELP_STRING([--with-lapack=<lib>], [use LAPACK library <lib>])])
case $with_lapack in
	yes | "") ;;
	no) acx_lapack_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) LAPACK_LIBS="$with_lapack" ;;
	*) LAPACK_LIBS="-l$with_lapack" ;;
esac

# Get fortran linker name of LAPACK function to check for.
AC_F77_FUNC(cheev)

# We cannot use LAPACK if BLAS is not found
if test "x$acx_blas_ok" != xyes; then
	acx_lapack_ok=noblas
fi

# First, check LAPACK_LIBS environment variable
if test "x$LAPACK_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$LAPACK_LIBS $BLAS_LIBS $LIBS $FLIBS"
	AC_MSG_CHECKING([for $cheev in $LAPACK_LIBS])
	AC_TRY_LINK_FUNC($cheev, [acx_lapack_ok=yes], [LAPACK_LIBS=""])
	AC_MSG_RESULT($acx_lapack_ok)
	LIBS="$save_LIBS"
	if test acx_lapack_ok = no; then
		LAPACK_LIBS=""
	fi
fi

# LAPACK linked to by default?  (is sometimes included in BLAS lib)
if test $acx_lapack_ok = no; then
	save_LIBS="$LIBS"; LIBS="$LIBS $BLAS_LIBS $FLIBS"
	AC_CHECK_FUNC($cheev, [acx_lapack_ok=yes])
	LIBS="$save_LIBS"
fi

# Generic LAPACK library?
for lapack in lapack lapack_rs6k; do
	if test $acx_lapack_ok = no; then
		save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
		AC_CHECK_LIB($lapack, $cheev,
		    [acx_lapack_ok=yes; LAPACK_LIBS="-l$lapack"], [], [$FLIBS])
		LIBS="$save_LIBS"
	fi
done

AC_SUBST(LAPACK_LIBS)

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_lapack_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_LAPACK,1,[Define if you have LAPACK library.]),[$1])
        :
else
        acx_lapack_ok=no
        $2
fi
])
m4trace:acx_elmer.m4:22: -1- AC_DEFUN([ACX_PROG_AR], [if test -z "$AR"; then
  AR=ar
fi
AC_SUBST(AR)

if test -z "$ARFLAGS"; then
  ARFLAGS="rc"
fi
AC_SUBST(ARFLAGS)
])
m4trace:acx_elmer.m4:78: -1- AC_DEFUN([ACX_HUTI], [
AC_PREREQ(2.50)
AC_REQUIRE([AC_FC_LIBRARY_LDFLAGS])
acx_huti_ok=no

AC_ARG_WITH(huti,
	[AC_HELP_STRING([--with-huti=<lib>], [use HUTI library <lib>])])
case $with_huti in
	yes | "") ;;
	no) acx_huti_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) HUTI_LIBS="$with_huti" ;;
	*) HUTI_LIBS="-l$with_huti" ;;
esac

# Get fortran linker names of BLAS functions to check for.
AC_FC_FUNC(huti_d_gmres)
AC_FC_FUNC(huti_d_cgs)

acx_huti_save_LIBS="$LIBS"
LIBS="$BLAS_LIBS $LAPACK_LIBS $LIBS $FCLIBS $FLIBS"

# First, check HUTI_LIBS environment variable
if test $acx_huti_ok = no; then
if test "x$HUTI_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$HUTI_LIBS $LIBS"
	AC_MSG_CHECKING([for $huti_d_gmres in $HUTI_LIBS])
	AC_TRY_LINK_FUNC($huti_d_gmres, [acx_huti_ok=yes], [HUTI_LIBS=""])
	AC_MSG_RESULT($acx_huti_ok)
	LIBS="$save_LIBS"
fi
fi

# Generic HUTI library?
if test $acx_huti_ok = no; then
	AC_CHECK_LIB(huti, $huti_d_gmres, [acx_huti_ok=yes; HUTI_LIBS="-lhuti"])
fi

AC_SUBST(HUTI_LIBS)

LIBS="$acx_huti_save_LIBS"

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_huti_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_HUTI,1,[Define if you have a HUTI library.]),[$1])
        :
else
        acx_huti_ok=no
        $2
fi
])
m4trace:acx_elmer.m4:134: -1- AC_DEFUN([ACX_EIOF], [
AC_PREREQ(2.50)
acx_eiof_ok=no

AC_ARG_WITH(eiof,
	[AC_HELP_STRING([--with-eiof=<lib>], [use EIOF library <lib>])])
case $with_eiof in
	yes | "") ;;
	no) acx_eiof_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) EIOF_LIBS="$with_eiof" ;;
	*) EIOF_LIBS="-l$with_eiof" ;;
esac

# Get fortran linker names of EIO functions to check for.
AC_FC_FUNC(eio_init)

acx_eiof_save_LIBS="$LIBS"

LIBS="$LIBS"

# First, check EIO_LIBS environment variable
if test $acx_eiof_ok = no; then
if test "x$EIOF_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$EIOF_LIBS $LIBS"
	AC_MSG_CHECKING([for $eio_init in $EIOF_LIBS])
	AC_TRY_LINK_FUNC($eio_init, [acx_eiof_ok=yes], [EIOF_LIBS=""])
	AC_MSG_RESULT($acx_eiof_ok)
	LIBS="$save_LIBS"
fi
fi

# Generic EIO library?
if test "$acx_eiof_ok" = no; then
	AC_CHECK_LIB(eiof, $eio_init, [acx_eiof_ok=yes; EIOF_LIBS="-leiof"])
fi

AC_SUBST(EIOF_LIBS)

LIBS="$acx_eiof_save_LIBS"

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_eiof_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_EIOF,1,[Define if you have a EIOF library.]),[$1])
        :
else
        acx_eiof_ok=no
        $2
fi
])
m4trace:acx_elmer.m4:189: -1- AC_DEFUN([ACX_EIOC], [
AC_PREREQ(2.50)
acx_eioc_ok=no

AC_ARG_WITH(eioc,
	[AC_HELP_STRING([--with-eioc=<lib>], [use EIOC library <lib>])])
case $with_eioc in
	yes | "") ;;
	no) acx_eioc_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) EIOC_LIBS="$with_eioc" ;;
	*) EIOC_LIBS="-l$with_eioc" ;;
esac

acx_eioc_save_LIBS="$LIBS"

LIBS="-leioc $LIBS"

# First, check EIO_LIBS environment variable
if test $acx_eioc_ok = no; then
if test "x$EIOC_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$LIBS $EIOC_LIBS"
	AC_MSG_CHECKING([for eio_init in $EIOC_LIBS])
	AC_TRY_LINK_FUNC(eio_init, [acx_eioc_ok=yes], [EIOC_LIBS=""])
	AC_MSG_RESULT($acx_eioc_ok)
	LIBS="$save_LIBS"
fi
fi

# Generic EIO library?
if test "$acx_eioc_ok" = no; then
	AC_CHECK_LIB(eioc, eio_init, [acx_eioc_ok=yes; EIOC_LIBS="-leioc"])
fi

AC_SUBST(EIOC_LIBS)

LIBS="$acx_eioc_save_LIBS"

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_eioc_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_EIOC,1,[Define if you have a EIOC library.]),[$1])
        :
else
        acx_eioc_ok=no
        $2
fi
])
m4trace:acx_elmer.m4:246: -1- AC_DEFUN([ACX_ARPACK], [
AC_PREREQ(2.50)
AC_REQUIRE([AC_FC_LIBRARY_LDFLAGS])
acx_arpack_ok=no

AC_ARG_WITH(arpack,
	[AC_HELP_STRING([--with-arpack=<lib>], [Specify location of ARPACK])])
case $with_arpack in
	yes | "") ;;
	no) acx_arpack_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) ARPACK_LIBS="$with_arpack" ;;
	*) ARPACK_LIBS="-l$with_arpack" ;;
esac

# Get fortran linker names of ARPACK functions to check for.
AC_FC_FUNC(dseupd)

acx_arpack_save_LIBS="$LIBS"

LIBS="$BLAS_LIBS $LAPACK_LIBS $LIBS $FCLIBS $FLIBS"

# First, check ARPACK_LIBS environment variable
if test $acx_arpack_ok = no; then
if test "x$ARPACK_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$ARPACK_LIBS $LIBS"
	AC_MSG_CHECKING([for $dseupd in $ARPACK_LIBS])
	AC_TRY_LINK_FUNC($dseupd, [acx_arpack_ok=yes], [ARPACK_LIBS=""])
	AC_MSG_RESULT($acx_arpack_ok)
	LIBS="$save_LIBS"
fi
fi

# Generic ARPACK library?
if test $acx_arpack_ok = no; then
	AC_CHECK_LIB(arpack, $dseupd, [acx_arpack_ok=yes; ARPACK_LIBS="-larpack"])
fi

AC_SUBST(ARPACK_LIBS)

LIBS="$acx_arpack_save_LIBS"

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_arpack_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_ARPACK,1,[Define if you have a ARPACK library.]),[$1])
        :
else
        acx_arpack_ok=no
        $2
fi
])
m4trace:acx_elmer.m4:304: -1- AC_DEFUN([ACX_UMFPACK], [
AC_PREREQ(2.50)
AC_REQUIRE([AC_FC_LIBRARY_LDFLAGS])
acx_umfpack_ok=no

AC_ARG_WITH(umfpack,
	[AC_HELP_STRING([--with-umfpack=<lib>], [Specify location of UMFPACK])])
case $with_umfpack in
	yes | "") ;;
	no) acx_umfpack_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) UMFPACK_LIBS="$with_umfpack" ;;
	*) UMFPACK_LIBS="-l$with_umfpack" ;;
esac

# Get fortran linker names of UMFPACK functions to check for.
AC_FC_FUNC(umf4def)

acx_umfpack_save_LIBS="$LIBS"

LIBS="$BLAS_LIBS $LAPACK_LIBS $LIBS $FCLIBS $FLIBS"

# First, check UMFPACK_LIBS environment variable
if test $acx_umfpack_ok = no; then
if test "x$UMFPACK_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$UMFPACK_LIBS $LIBS"
	AC_MSG_CHECKING([for $umf4def in $UMFPACK_LIBS])
	AC_TRY_LINK_FUNC($umf4def, [acx_umfpack_ok=yes], [UMFPACK_LIBS=""])
	AC_MSG_RESULT($acx_umfpack_ok)
	LIBS="$save_LIBS"
fi
fi

# Generic UMFPACK library?
if test $acx_umfpack_ok = no; then
	AC_CHECK_LIB(umfpack, $umf4def, [acx_umfpack_ok=yes; UMFPACK_LIBS="-lumfpack -lamd"],,[-lamd])
fi

AC_SUBST(UMFPACK_LIBS)

LIBS="$acx_umfpack_save_LIBS"

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_umfpack_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_UMFPACK,1,[Define if you have a UMFPACK library.]),[$1])
        :
else
        acx_umfpack_ok=no
        $2
fi
])
m4trace:acx_elmer.m4:355: -1- AC_DEFUN([ACX_MATC], [
AC_PREREQ(2.50)
acx_matc_ok=no

AC_ARG_WITH(matc,
	[AC_HELP_STRING([--with-matc=<lib>], [use MATC library <lib>])])
case $with_matc in
	yes | "") ;;
	no) acx_matc_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) MATC_LIBS="$with_matc" ;;
	*) MATC_LIBS="-l$with_matc" ;;
esac

acx_matc_save_LIBS="$LIBS"

# First, check EIO_LIBS environment variable
if test $acx_matc_ok = no; then
if test "x$MATC_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$MATC_LIBS $LIBS"
	AC_MSG_CHECKING([for mtc_init in $MATC_LIBS])
	AC_TRY_LINK_FUNC(mtc_init, [acx_matc_ok=yes], [MATC_LIBS=""])
	AC_MSG_RESULT($acx_matc_ok)
	LIBS="$save_LIBS"
fi
fi

# Generic MATC library?
if test "$acx_matc_ok" = no; then
	AC_CHECK_LIB(matc, mtc_init, [acx_matc_ok=yes; MATC_LIBS="-lmatc"],,[-lm])
fi

AC_SUBST(MATC_LIBS)

LIBS="$acx_matc_save_LIBS"

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_matc_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_MATC,1,[Define if you have a MATC library.]),[$1])
        :
else
        acx_matc_ok=no
        $2
fi
])
m4trace:configure.ac:18: -1- AC_INIT([src/Solver.f90])
m4trace:configure.ac:18: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:18: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:18: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:18: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:18: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:18: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:18: -1- AC_SUBST([SHELL], [${CONFIG_SHELL-/bin/sh}])
m4trace:configure.ac:18: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:18: -1- AC_SUBST([PATH_SEPARATOR])
m4trace:configure.ac:18: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:18: -1- AC_SUBST([PACKAGE_NAME], [m4_ifdef([AC_PACKAGE_NAME],      ['AC_PACKAGE_NAME'])])
m4trace:configure.ac:18: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:18: -1- AC_SUBST([PACKAGE_TARNAME], [m4_ifdef([AC_PACKAGE_TARNAME],   ['AC_PACKAGE_TARNAME'])])
m4trace:configure.ac:18: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:18: -1- AC_SUBST([PACKAGE_VERSION], [m4_ifdef([AC_PACKAGE_VERSION],   ['AC_PACKAGE_VERSION'])])
m4trace:configure.ac:18: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:18: -1- AC_SUBST([PACKAGE_STRING], [m4_ifdef([AC_PACKAGE_STRING],    ['AC_PACKAGE_STRING'])])
m4trace:configure.ac:18: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:18: -1- AC_SUBST([PACKAGE_BUGREPORT], [m4_ifdef([AC_PACKAGE_BUGREPORT], ['AC_PACKAGE_BUGREPORT'])])
m4trace:configure.ac:18: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:18: -1- AC_SUBST([exec_prefix], [NONE])
m4trace:configure.ac:18: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:18: -1- AC_SUBST([prefix], [NONE])
m4trace:configure.ac:18: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:18: -1- AC_SUBST([program_transform_name], [s,x,x,])
m4trace:configure.ac:18: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:18: -1- AC_SUBST([bindir], ['${exec_prefix}/bin'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:18: -1- AC_SUBST([sbindir], ['${exec_prefix}/sbin'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:18: -1- AC_SUBST([libexecdir], ['${exec_prefix}/libexec'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:18: -1- AC_SUBST([datarootdir], ['${prefix}/share'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:18: -1- AC_SUBST([datadir], ['${datarootdir}'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:18: -1- AC_SUBST([sysconfdir], ['${prefix}/etc'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:18: -1- AC_SUBST([sharedstatedir], ['${prefix}/com'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:18: -1- AC_SUBST([localstatedir], ['${prefix}/var'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:18: -1- AC_SUBST([includedir], ['${prefix}/include'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:18: -1- AC_SUBST([oldincludedir], ['/usr/include'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:18: -1- AC_SUBST([docdir], [m4_ifset([AC_PACKAGE_TARNAME],
                                     ['${datarootdir}/doc/${PACKAGE_TARNAME}'],
                                     ['${datarootdir}/doc/${PACKAGE}'])])
m4trace:configure.ac:18: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:18: -1- AC_SUBST([infodir], ['${datarootdir}/info'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:18: -1- AC_SUBST([htmldir], ['${docdir}'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:18: -1- AC_SUBST([dvidir], ['${docdir}'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:18: -1- AC_SUBST([pdfdir], ['${docdir}'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:18: -1- AC_SUBST([psdir], ['${docdir}'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:18: -1- AC_SUBST([libdir], ['${exec_prefix}/lib'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:18: -1- AC_SUBST([localedir], ['${datarootdir}/locale'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:18: -1- AC_SUBST([mandir], ['${datarootdir}/man'])
m4trace:configure.ac:18: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:18: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_NAME])
m4trace:configure.ac:18: -1- AH_OUTPUT([PACKAGE_NAME], [/* Define to the full name of this package. */
#undef PACKAGE_NAME])
m4trace:configure.ac:18: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_TARNAME])
m4trace:configure.ac:18: -1- AH_OUTPUT([PACKAGE_TARNAME], [/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME])
m4trace:configure.ac:18: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_VERSION])
m4trace:configure.ac:18: -1- AH_OUTPUT([PACKAGE_VERSION], [/* Define to the version of this package. */
#undef PACKAGE_VERSION])
m4trace:configure.ac:18: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_STRING])
m4trace:configure.ac:18: -1- AH_OUTPUT([PACKAGE_STRING], [/* Define to the full name and version of this package. */
#undef PACKAGE_STRING])
m4trace:configure.ac:18: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_BUGREPORT])
m4trace:configure.ac:18: -1- AH_OUTPUT([PACKAGE_BUGREPORT], [/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT])
m4trace:configure.ac:18: -1- AC_SUBST([build_alias])
m4trace:configure.ac:18: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:18: -1- AC_SUBST([host_alias])
m4trace:configure.ac:18: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:18: -1- AC_SUBST([target_alias])
m4trace:configure.ac:18: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:18: -1- AC_SUBST([DEFS])
m4trace:configure.ac:18: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:18: -1- AC_SUBST([ECHO_C])
m4trace:configure.ac:18: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:18: -1- AC_SUBST([ECHO_N])
m4trace:configure.ac:18: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:18: -1- AC_SUBST([ECHO_T])
m4trace:configure.ac:18: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:18: -1- AC_SUBST([LIBS])
m4trace:configure.ac:18: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:21: -1- AC_CANONICAL_HOST
m4trace:configure.ac:21: -1- AC_CANONICAL_BUILD
m4trace:configure.ac:21: -1- AC_REQUIRE_AUX_FILE([config.sub])
m4trace:configure.ac:21: -1- AC_REQUIRE_AUX_FILE([config.guess])
m4trace:configure.ac:21: -1- AC_SUBST([build], [$ac_cv_build])
m4trace:configure.ac:21: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:21: -1- AC_SUBST([build_cpu], [`echo $ac_cv_build | sed 's/^\([[^-]]*\)-\([[^-]]*\)-\(.*\)$/\1/'`])
m4trace:configure.ac:21: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:21: -1- AC_SUBST([build_vendor], [`echo $ac_cv_build | sed 's/^\([[^-]]*\)-\([[^-]]*\)-\(.*\)$/\2/'`])
m4trace:configure.ac:21: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:21: -1- AC_SUBST([build_os], [`echo $ac_cv_build | sed 's/^\([[^-]]*\)-\([[^-]]*\)-\(.*\)$/\3/'`])
m4trace:configure.ac:21: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:21: -1- AC_SUBST([host], [$ac_cv_host])
m4trace:configure.ac:21: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:21: -1- AC_SUBST([host_cpu], [`echo $ac_cv_host | sed 's/^\([[^-]]*\)-\([[^-]]*\)-\(.*\)$/\1/'`])
m4trace:configure.ac:21: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:21: -1- AC_SUBST([host_vendor], [`echo $ac_cv_host | sed 's/^\([[^-]]*\)-\([[^-]]*\)-\(.*\)$/\2/'`])
m4trace:configure.ac:21: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:21: -1- AC_SUBST([host_os], [`echo $ac_cv_host | sed 's/^\([[^-]]*\)-\([[^-]]*\)-\(.*\)$/\3/'`])
m4trace:configure.ac:21: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:22: -1- AC_CANONICAL_TARGET
m4trace:configure.ac:22: -1- AC_SUBST([target], [$ac_cv_target])
m4trace:configure.ac:22: -1- m4_pattern_allow([^target$])
m4trace:configure.ac:22: -1- AC_SUBST([target_cpu], [`echo $ac_cv_target | sed 's/^\([[^-]]*\)-\([[^-]]*\)-\(.*\)$/\1/'`])
m4trace:configure.ac:22: -1- m4_pattern_allow([^target_cpu$])
m4trace:configure.ac:22: -1- AC_SUBST([target_vendor], [`echo $ac_cv_target | sed 's/^\([[^-]]*\)-\([[^-]]*\)-\(.*\)$/\2/'`])
m4trace:configure.ac:22: -1- m4_pattern_allow([^target_vendor$])
m4trace:configure.ac:22: -1- AC_SUBST([target_os], [`echo $ac_cv_target | sed 's/^\([[^-]]*\)-\([[^-]]*\)-\(.*\)$/\3/'`])
m4trace:configure.ac:22: -1- m4_pattern_allow([^target_os$])
m4trace:configure.ac:31: -1- AC_SUBST([canonical_host_type])
m4trace:configure.ac:31: -1- m4_pattern_allow([^canonical_host_type$])
m4trace:configure.ac:33: -1- AC_PROG_CC
m4trace:configure.ac:33: -1- AC_SUBST([CC])
m4trace:configure.ac:33: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:33: -1- AC_SUBST([CFLAGS])
m4trace:configure.ac:33: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:33: -1- AC_SUBST([LDFLAGS])
m4trace:configure.ac:33: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:33: -1- AC_SUBST([CPPFLAGS])
m4trace:configure.ac:33: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:33: -1- AC_SUBST([CC])
m4trace:configure.ac:33: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:33: -1- AC_SUBST([ac_ct_CC])
m4trace:configure.ac:33: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:33: -1- AC_SUBST([CC])
m4trace:configure.ac:33: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:33: -1- AC_SUBST([CC])
m4trace:configure.ac:33: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:33: -1- AC_SUBST([CC])
m4trace:configure.ac:33: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:33: -1- AC_SUBST([ac_ct_CC])
m4trace:configure.ac:33: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:33: -1- AC_SUBST([EXEEXT], [$ac_cv_exeext])
m4trace:configure.ac:33: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:33: -1- AC_SUBST([OBJEXT], [$ac_cv_objext])
m4trace:configure.ac:33: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:34: -1- AC_PROG_RANLIB
m4trace:configure.ac:34: -1- AC_SUBST([RANLIB])
m4trace:configure.ac:34: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:34: -1- AC_SUBST([ac_ct_RANLIB])
m4trace:configure.ac:34: -1- m4_pattern_allow([^ac_ct_RANLIB$])
m4trace:configure.ac:35: -1- sinclude([acx_elmer.m4])
m4trace:acx_elmer.m4:22: -1- AC_DEFUN([ACX_PROG_AR], [if test -z "$AR"; then
  AR=ar
fi
AC_SUBST(AR)

if test -z "$ARFLAGS"; then
  ARFLAGS="rc"
fi
AC_SUBST(ARFLAGS)
])
m4trace:acx_elmer.m4:78: -1- AC_DEFUN([ACX_HUTI], [
AC_PREREQ(2.50)
AC_REQUIRE([AC_FC_LIBRARY_LDFLAGS])
acx_huti_ok=no

AC_ARG_WITH(huti,
	[AC_HELP_STRING([--with-huti=<lib>], [use HUTI library <lib>])])
case $with_huti in
	yes | "") ;;
	no) acx_huti_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) HUTI_LIBS="$with_huti" ;;
	*) HUTI_LIBS="-l$with_huti" ;;
esac

# Get fortran linker names of BLAS functions to check for.
AC_FC_FUNC(huti_d_gmres)
AC_FC_FUNC(huti_d_cgs)

acx_huti_save_LIBS="$LIBS"
LIBS="$BLAS_LIBS $LAPACK_LIBS $LIBS $FCLIBS $FLIBS"

# First, check HUTI_LIBS environment variable
if test $acx_huti_ok = no; then
if test "x$HUTI_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$HUTI_LIBS $LIBS"
	AC_MSG_CHECKING([for $huti_d_gmres in $HUTI_LIBS])
	AC_TRY_LINK_FUNC($huti_d_gmres, [acx_huti_ok=yes], [HUTI_LIBS=""])
	AC_MSG_RESULT($acx_huti_ok)
	LIBS="$save_LIBS"
fi
fi

# Generic HUTI library?
if test $acx_huti_ok = no; then
	AC_CHECK_LIB(huti, $huti_d_gmres, [acx_huti_ok=yes; HUTI_LIBS="-lhuti"])
fi

AC_SUBST(HUTI_LIBS)

LIBS="$acx_huti_save_LIBS"

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_huti_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_HUTI,1,[Define if you have a HUTI library.]),[$1])
        :
else
        acx_huti_ok=no
        $2
fi
])
m4trace:acx_elmer.m4:134: -1- AC_DEFUN([ACX_EIOF], [
AC_PREREQ(2.50)
acx_eiof_ok=no

AC_ARG_WITH(eiof,
	[AC_HELP_STRING([--with-eiof=<lib>], [use EIOF library <lib>])])
case $with_eiof in
	yes | "") ;;
	no) acx_eiof_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) EIOF_LIBS="$with_eiof" ;;
	*) EIOF_LIBS="-l$with_eiof" ;;
esac

# Get fortran linker names of EIO functions to check for.
AC_FC_FUNC(eio_init)

acx_eiof_save_LIBS="$LIBS"

LIBS="$LIBS"

# First, check EIO_LIBS environment variable
if test $acx_eiof_ok = no; then
if test "x$EIOF_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$EIOF_LIBS $LIBS"
	AC_MSG_CHECKING([for $eio_init in $EIOF_LIBS])
	AC_TRY_LINK_FUNC($eio_init, [acx_eiof_ok=yes], [EIOF_LIBS=""])
	AC_MSG_RESULT($acx_eiof_ok)
	LIBS="$save_LIBS"
fi
fi

# Generic EIO library?
if test "$acx_eiof_ok" = no; then
	AC_CHECK_LIB(eiof, $eio_init, [acx_eiof_ok=yes; EIOF_LIBS="-leiof"])
fi

AC_SUBST(EIOF_LIBS)

LIBS="$acx_eiof_save_LIBS"

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_eiof_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_EIOF,1,[Define if you have a EIOF library.]),[$1])
        :
else
        acx_eiof_ok=no
        $2
fi
])
m4trace:acx_elmer.m4:189: -1- AC_DEFUN([ACX_EIOC], [
AC_PREREQ(2.50)
acx_eioc_ok=no

AC_ARG_WITH(eioc,
	[AC_HELP_STRING([--with-eioc=<lib>], [use EIOC library <lib>])])
case $with_eioc in
	yes | "") ;;
	no) acx_eioc_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) EIOC_LIBS="$with_eioc" ;;
	*) EIOC_LIBS="-l$with_eioc" ;;
esac

acx_eioc_save_LIBS="$LIBS"

LIBS="-leioc $LIBS"

# First, check EIO_LIBS environment variable
if test $acx_eioc_ok = no; then
if test "x$EIOC_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$LIBS $EIOC_LIBS"
	AC_MSG_CHECKING([for eio_init in $EIOC_LIBS])
	AC_TRY_LINK_FUNC(eio_init, [acx_eioc_ok=yes], [EIOC_LIBS=""])
	AC_MSG_RESULT($acx_eioc_ok)
	LIBS="$save_LIBS"
fi
fi

# Generic EIO library?
if test "$acx_eioc_ok" = no; then
	AC_CHECK_LIB(eioc, eio_init, [acx_eioc_ok=yes; EIOC_LIBS="-leioc"])
fi

AC_SUBST(EIOC_LIBS)

LIBS="$acx_eioc_save_LIBS"

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_eioc_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_EIOC,1,[Define if you have a EIOC library.]),[$1])
        :
else
        acx_eioc_ok=no
        $2
fi
])
m4trace:acx_elmer.m4:246: -1- AC_DEFUN([ACX_ARPACK], [
AC_PREREQ(2.50)
AC_REQUIRE([AC_FC_LIBRARY_LDFLAGS])
acx_arpack_ok=no

AC_ARG_WITH(arpack,
	[AC_HELP_STRING([--with-arpack=<lib>], [Specify location of ARPACK])])
case $with_arpack in
	yes | "") ;;
	no) acx_arpack_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) ARPACK_LIBS="$with_arpack" ;;
	*) ARPACK_LIBS="-l$with_arpack" ;;
esac

# Get fortran linker names of ARPACK functions to check for.
AC_FC_FUNC(dseupd)

acx_arpack_save_LIBS="$LIBS"

LIBS="$BLAS_LIBS $LAPACK_LIBS $LIBS $FCLIBS $FLIBS"

# First, check ARPACK_LIBS environment variable
if test $acx_arpack_ok = no; then
if test "x$ARPACK_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$ARPACK_LIBS $LIBS"
	AC_MSG_CHECKING([for $dseupd in $ARPACK_LIBS])
	AC_TRY_LINK_FUNC($dseupd, [acx_arpack_ok=yes], [ARPACK_LIBS=""])
	AC_MSG_RESULT($acx_arpack_ok)
	LIBS="$save_LIBS"
fi
fi

# Generic ARPACK library?
if test $acx_arpack_ok = no; then
	AC_CHECK_LIB(arpack, $dseupd, [acx_arpack_ok=yes; ARPACK_LIBS="-larpack"])
fi

AC_SUBST(ARPACK_LIBS)

LIBS="$acx_arpack_save_LIBS"

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_arpack_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_ARPACK,1,[Define if you have a ARPACK library.]),[$1])
        :
else
        acx_arpack_ok=no
        $2
fi
])
m4trace:acx_elmer.m4:304: -1- AC_DEFUN([ACX_UMFPACK], [
AC_PREREQ(2.50)
AC_REQUIRE([AC_FC_LIBRARY_LDFLAGS])
acx_umfpack_ok=no

AC_ARG_WITH(umfpack,
	[AC_HELP_STRING([--with-umfpack=<lib>], [Specify location of UMFPACK])])
case $with_umfpack in
	yes | "") ;;
	no) acx_umfpack_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) UMFPACK_LIBS="$with_umfpack" ;;
	*) UMFPACK_LIBS="-l$with_umfpack" ;;
esac

# Get fortran linker names of UMFPACK functions to check for.
AC_FC_FUNC(umf4def)

acx_umfpack_save_LIBS="$LIBS"

LIBS="$BLAS_LIBS $LAPACK_LIBS $LIBS $FCLIBS $FLIBS"

# First, check UMFPACK_LIBS environment variable
if test $acx_umfpack_ok = no; then
if test "x$UMFPACK_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$UMFPACK_LIBS $LIBS"
	AC_MSG_CHECKING([for $umf4def in $UMFPACK_LIBS])
	AC_TRY_LINK_FUNC($umf4def, [acx_umfpack_ok=yes], [UMFPACK_LIBS=""])
	AC_MSG_RESULT($acx_umfpack_ok)
	LIBS="$save_LIBS"
fi
fi

# Generic UMFPACK library?
if test $acx_umfpack_ok = no; then
	AC_CHECK_LIB(umfpack, $umf4def, [acx_umfpack_ok=yes; UMFPACK_LIBS="-lumfpack -lamd"],,[-lamd])
fi

AC_SUBST(UMFPACK_LIBS)

LIBS="$acx_umfpack_save_LIBS"

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_umfpack_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_UMFPACK,1,[Define if you have a UMFPACK library.]),[$1])
        :
else
        acx_umfpack_ok=no
        $2
fi
])
m4trace:acx_elmer.m4:355: -1- AC_DEFUN([ACX_MATC], [
AC_PREREQ(2.50)
acx_matc_ok=no

AC_ARG_WITH(matc,
	[AC_HELP_STRING([--with-matc=<lib>], [use MATC library <lib>])])
case $with_matc in
	yes | "") ;;
	no) acx_matc_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) MATC_LIBS="$with_matc" ;;
	*) MATC_LIBS="-l$with_matc" ;;
esac

acx_matc_save_LIBS="$LIBS"

# First, check EIO_LIBS environment variable
if test $acx_matc_ok = no; then
if test "x$MATC_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$MATC_LIBS $LIBS"
	AC_MSG_CHECKING([for mtc_init in $MATC_LIBS])
	AC_TRY_LINK_FUNC(mtc_init, [acx_matc_ok=yes], [MATC_LIBS=""])
	AC_MSG_RESULT($acx_matc_ok)
	LIBS="$save_LIBS"
fi
fi

# Generic MATC library?
if test "$acx_matc_ok" = no; then
	AC_CHECK_LIB(matc, mtc_init, [acx_matc_ok=yes; MATC_LIBS="-lmatc"],,[-lm])
fi

AC_SUBST(MATC_LIBS)

LIBS="$acx_matc_save_LIBS"

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_matc_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_MATC,1,[Define if you have a MATC library.]),[$1])
        :
else
        acx_matc_ok=no
        $2
fi
])
m4trace:configure.ac:37: -1- ACX_PROG_AR
m4trace:configure.ac:37: -1- AC_SUBST([AR])
m4trace:configure.ac:37: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:37: -1- AC_SUBST([ARFLAGS])
m4trace:configure.ac:37: -1- m4_pattern_allow([^ARFLAGS$])
m4trace:configure.ac:40: -1- AC_PROG_INSTALL
m4trace:configure.ac:40: -1- AC_REQUIRE_AUX_FILE([install-sh])
m4trace:configure.ac:40: -1- AC_SUBST([INSTALL_PROGRAM])
m4trace:configure.ac:40: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:40: -1- AC_SUBST([INSTALL_SCRIPT])
m4trace:configure.ac:40: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:40: -1- AC_SUBST([INSTALL_DATA])
m4trace:configure.ac:40: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:41: -1- AC_PROG_MAKE_SET
m4trace:configure.ac:41: -1- AC_SUBST([SET_MAKE])
m4trace:configure.ac:41: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:42: -1- AC_HEADER_STDC
m4trace:configure.ac:42: -1- AC_PROG_CPP
m4trace:configure.ac:42: -1- AC_SUBST([CPP])
m4trace:configure.ac:42: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:42: -1- AC_SUBST([CPPFLAGS])
m4trace:configure.ac:42: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:42: -1- AC_SUBST([CPP])
m4trace:configure.ac:42: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:42: -1- AC_SUBST([GREP])
m4trace:configure.ac:42: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:42: -1- AC_SUBST([GREP])
m4trace:configure.ac:42: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:42: -1- AC_SUBST([EGREP])
m4trace:configure.ac:42: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:42: -1- AC_SUBST([EGREP])
m4trace:configure.ac:42: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:42: -1- AC_DEFINE_TRACE_LITERAL([STDC_HEADERS])
m4trace:configure.ac:42: -1- AH_OUTPUT([STDC_HEADERS], [/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS])
m4trace:configure.ac:43: -1- AC_CHECK_HEADERS([sys/types.h sys/stat.h stdlib.h string.h memory.h strings.h \
		  inttypes.h stdint.h unistd.h], [], [], [$ac_includes_default])
m4trace:configure.ac:43: -1- AH_OUTPUT([HAVE_SYS_TYPES_H], [/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H])
m4trace:configure.ac:43: -1- AH_OUTPUT([HAVE_SYS_STAT_H], [/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H])
m4trace:configure.ac:43: -1- AH_OUTPUT([HAVE_STDLIB_H], [/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H])
m4trace:configure.ac:43: -1- AH_OUTPUT([HAVE_STRING_H], [/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H])
m4trace:configure.ac:43: -1- AH_OUTPUT([HAVE_MEMORY_H], [/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H])
m4trace:configure.ac:43: -1- AH_OUTPUT([HAVE_STRINGS_H], [/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H])
m4trace:configure.ac:43: -1- AH_OUTPUT([HAVE_INTTYPES_H], [/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H])
m4trace:configure.ac:43: -1- AH_OUTPUT([HAVE_STDINT_H], [/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H])
m4trace:configure.ac:43: -1- AH_OUTPUT([HAVE_UNISTD_H], [/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H])
m4trace:configure.ac:43: -1- AC_DEFINE_TRACE_LITERAL([WORDS_BIGENDIAN])
m4trace:configure.ac:43: -1- AH_OUTPUT([WORDS_BIGENDIAN], [/* Define to 1 if your processor stores words with the most significant byte
   first (like Motorola and SPARC, unlike Intel and VAX). */
#undef WORDS_BIGENDIAN])
m4trace:configure.ac:45: -1- AC_PROG_CC
m4trace:configure.ac:45: -1- AC_SUBST([CC])
m4trace:configure.ac:45: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:45: -1- AC_SUBST([CFLAGS])
m4trace:configure.ac:45: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:45: -1- AC_SUBST([LDFLAGS])
m4trace:configure.ac:45: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:45: -1- AC_SUBST([CPPFLAGS])
m4trace:configure.ac:45: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:45: -1- AC_SUBST([CC])
m4trace:configure.ac:45: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:45: -1- AC_SUBST([ac_ct_CC])
m4trace:configure.ac:45: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:45: -1- AC_SUBST([CC])
m4trace:configure.ac:45: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:45: -1- AC_SUBST([CC])
m4trace:configure.ac:45: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:45: -1- AC_SUBST([CC])
m4trace:configure.ac:45: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:45: -1- AC_SUBST([ac_ct_CC])
m4trace:configure.ac:45: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:46: -1- AC_PROG_CPP
m4trace:configure.ac:46: -1- AC_SUBST([CPP])
m4trace:configure.ac:46: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:46: -1- AC_SUBST([CPPFLAGS])
m4trace:configure.ac:46: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:46: -1- AC_SUBST([CPP])
m4trace:configure.ac:46: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:47: -1- AC_PROG_CXX
m4trace:configure.ac:47: -1- AC_SUBST([CXX])
m4trace:configure.ac:47: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:47: -1- AC_SUBST([CXXFLAGS])
m4trace:configure.ac:47: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:47: -1- AC_SUBST([LDFLAGS])
m4trace:configure.ac:47: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:47: -1- AC_SUBST([CPPFLAGS])
m4trace:configure.ac:47: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:47: -1- AC_SUBST([CCC])
m4trace:configure.ac:47: -1- m4_pattern_allow([^CCC$])
m4trace:configure.ac:47: -1- AC_SUBST([CXX])
m4trace:configure.ac:47: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:47: -1- AC_SUBST([ac_ct_CXX])
m4trace:configure.ac:47: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:configure.ac:49: -1- AC_CHECK_FUNCS([gettimeofday mkdir sqrt])
m4trace:configure.ac:49: -1- AH_OUTPUT([HAVE_GETTIMEOFDAY], [/* Define to 1 if you have the `gettimeofday\' function. */
#undef HAVE_GETTIMEOFDAY])
m4trace:configure.ac:49: -1- AH_OUTPUT([HAVE_MKDIR], [/* Define to 1 if you have the `mkdir\' function. */
#undef HAVE_MKDIR])
m4trace:configure.ac:49: -1- AH_OUTPUT([HAVE_SQRT], [/* Define to 1 if you have the `sqrt\' function. */
#undef HAVE_SQRT])
m4trace:configure.ac:50: -1- AC_CHECK_HEADERS([stdlib.h strings.h sys/param.h sys/time.h])
m4trace:configure.ac:50: -1- AH_OUTPUT([HAVE_STDLIB_H], [/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H])
m4trace:configure.ac:50: -1- AH_OUTPUT([HAVE_STRINGS_H], [/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H])
m4trace:configure.ac:50: -1- AH_OUTPUT([HAVE_SYS_PARAM_H], [/* Define to 1 if you have the <sys/param.h> header file. */
#undef HAVE_SYS_PARAM_H])
m4trace:configure.ac:50: -1- AH_OUTPUT([HAVE_SYS_TIME_H], [/* Define to 1 if you have the <sys/time.h> header file. */
#undef HAVE_SYS_TIME_H])
m4trace:configure.ac:51: -1- AC_FUNC_MALLOC
m4trace:configure.ac:51: -1- AC_CHECK_HEADERS([stdlib.h])
m4trace:configure.ac:51: -1- AH_OUTPUT([HAVE_STDLIB_H], [/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H])
m4trace:configure.ac:51: -1- AC_DEFINE_TRACE_LITERAL([HAVE_MALLOC])
m4trace:configure.ac:51: -1- AH_OUTPUT([HAVE_MALLOC], [/* Define to 1 if your system has a GNU libc compatible `malloc\' function, and
   to 0 otherwise. */
#undef HAVE_MALLOC])
m4trace:configure.ac:51: -1- AC_DEFINE_TRACE_LITERAL([HAVE_MALLOC])
m4trace:configure.ac:51: -1- AC_LIBSOURCE([malloc.c])
m4trace:configure.ac:51: -1- AC_SUBST([LIB@&t@OBJS], ["$LIB@&t@OBJS malloc.$ac_objext"])
m4trace:configure.ac:51: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:51: -1- AC_DEFINE_TRACE_LITERAL([malloc])
m4trace:configure.ac:51: -1- AH_OUTPUT([malloc], [/* Define to rpl_malloc if the replacement function should be used. */
#undef malloc])
m4trace:configure.ac:52: -1- AC_HEADER_TIME
m4trace:configure.ac:52: -1- AC_DEFINE_TRACE_LITERAL([TIME_WITH_SYS_TIME])
m4trace:configure.ac:52: -1- AH_OUTPUT([TIME_WITH_SYS_TIME], [/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
#undef TIME_WITH_SYS_TIME])
m4trace:configure.ac:53: -1- _m4_warn([obsolete], [The macro `AC_STDC_HEADERS' is obsolete.
You should run autoupdate.], [autoconf/oldnames.m4:96: AC_STDC_HEADERS is expanded from...
configure.ac:53: the top level])
m4trace:configure.ac:53: -1- AC_HEADER_STDC([])
m4trace:configure.ac:53: -1- AC_DEFINE_TRACE_LITERAL([STDC_HEADERS])
m4trace:configure.ac:53: -1- AH_OUTPUT([STDC_HEADERS], [/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS])
m4trace:configure.ac:60: -1- AC_SUBST([FC])
m4trace:configure.ac:60: -1- m4_pattern_allow([^FC$])
m4trace:configure.ac:60: -1- AC_SUBST([FCFLAGS])
m4trace:configure.ac:60: -1- m4_pattern_allow([^FCFLAGS$])
m4trace:configure.ac:60: -1- AC_SUBST([LDFLAGS])
m4trace:configure.ac:60: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:60: -1- AC_SUBST([FC])
m4trace:configure.ac:60: -1- m4_pattern_allow([^FC$])
m4trace:configure.ac:60: -1- AC_SUBST([ac_ct_FC])
m4trace:configure.ac:60: -1- m4_pattern_allow([^ac_ct_FC$])
m4trace:configure.ac:63: -1- AC_SUBST([F77])
m4trace:configure.ac:63: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:63: -1- AC_SUBST([FFLAGS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FFLAGS$])
m4trace:configure.ac:63: -1- AC_SUBST([LDFLAGS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:63: -1- AC_SUBST([F77])
m4trace:configure.ac:63: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:63: -1- AC_SUBST([ac_ct_F77])
m4trace:configure.ac:63: -1- m4_pattern_allow([^ac_ct_F77$])
m4trace:configure.ac:63: -1- AC_SUBST([FLIBS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FLIBS$])
m4trace:configure.ac:64: -1- AC_SUBST([FCLIBS])
m4trace:configure.ac:64: -1- m4_pattern_allow([^FCLIBS$])
m4trace:configure.ac:65: -1- AC_DEFINE_TRACE_LITERAL([F77_DUMMY_MAIN])
m4trace:configure.ac:65: -1- AH_OUTPUT([F77_DUMMY_MAIN], [/* Define to dummy `main\' function (if any) required to link to the Fortran
   libraries. */
#undef F77_DUMMY_MAIN])
m4trace:configure.ac:65: -1- AC_DEFINE_TRACE_LITERAL([FC_DUMMY_MAIN_EQ_F77])
m4trace:configure.ac:65: -1- AH_OUTPUT([FC_DUMMY_MAIN_EQ_F77], [/* Define if F77 and FC dummy `main\' functions are identical. */
#undef FC_DUMMY_MAIN_EQ_F77])
m4trace:configure.ac:66: -1- AC_DEFINE_TRACE_LITERAL([FC_DUMMY_MAIN])
m4trace:configure.ac:66: -1- AH_OUTPUT([FC_DUMMY_MAIN], [/* Define to dummy `main\' function (if any) required to link to the Fortran
   libraries. */
#undef FC_DUMMY_MAIN])
m4trace:configure.ac:66: -1- AC_DEFINE_TRACE_LITERAL([FC_DUMMY_MAIN_EQ_F77])
m4trace:configure.ac:66: -1- AH_OUTPUT([FC_DUMMY_MAIN_EQ_F77], [/* Define if F77 and FC dummy `main\' functions are identical. */
#undef FC_DUMMY_MAIN_EQ_F77])
m4trace:configure.ac:70: -1- AH_OUTPUT([F77_FUNC], [/* Define to a macro mangling the given C identifier (in lower and upper
   case), which must not contain underscores, for linking with Fortran. */
#undef F77_FUNC])
m4trace:configure.ac:70: -1- AH_OUTPUT([F77_FUNC_], [/* As F77_FUNC, but for C identifiers containing underscores. */
#undef F77_FUNC_])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC(name,NAME)])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC_(name,NAME)])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC(name,NAME)])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC_(name,NAME)])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC(name,NAME)])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC_(name,NAME)])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC(name,NAME)])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC_(name,NAME)])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC(name,NAME)])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC_(name,NAME)])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC(name,NAME)])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC_(name,NAME)])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC(name,NAME)])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC_(name,NAME)])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC(name,NAME)])
m4trace:configure.ac:70: -1- AC_DEFINE_TRACE_LITERAL([F77_FUNC_(name,NAME)])
m4trace:configure.ac:71: -1- AH_OUTPUT([FC_FUNC], [/* Define to a macro mangling the given C identifier (in lower and upper
   case), which must not contain underscores, for linking with Fortran. */
#undef FC_FUNC])
m4trace:configure.ac:71: -1- AH_OUTPUT([FC_FUNC_], [/* As FC_FUNC, but for C identifiers containing underscores. */
#undef FC_FUNC_])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC(name,NAME)])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC_(name,NAME)])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC(name,NAME)])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC_(name,NAME)])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC(name,NAME)])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC_(name,NAME)])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC(name,NAME)])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC_(name,NAME)])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC(name,NAME)])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC_(name,NAME)])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC(name,NAME)])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC_(name,NAME)])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC(name,NAME)])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC_(name,NAME)])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC(name,NAME)])
m4trace:configure.ac:71: -1- AC_DEFINE_TRACE_LITERAL([FC_FUNC_(name,NAME)])
m4trace:configure.ac:77: -1- AC_DEFINE_TRACE_LITERAL([ELMER_LINKTYP])
m4trace:configure.ac:77: -1- AH_OUTPUT([ELMER_LINKTYP], [/* "Mangling: upper case */
#undef ELMER_LINKTYP])
m4trace:configure.ac:80: -1- AC_DEFINE_TRACE_LITERAL([ELMER_LINKTYP])
m4trace:configure.ac:80: -1- AH_OUTPUT([ELMER_LINKTYP], [/* "Mangling: lower case */
#undef ELMER_LINKTYP])
m4trace:configure.ac:83: -1- AC_DEFINE_TRACE_LITERAL([ELMER_LINKTYP])
m4trace:configure.ac:83: -1- AH_OUTPUT([ELMER_LINKTYP], [/* "Mangling: lower case */
#undef ELMER_LINKTYP])
m4trace:configure.ac:86: -1- AC_DEFINE_TRACE_LITERAL([ELMER_LINKTYP])
m4trace:configure.ac:86: -1- AH_OUTPUT([ELMER_LINKTYP], [/* "Mangling: lower case */
#undef ELMER_LINKTYP])
m4trace:configure.ac:109: -1- sinclude([acx_lapack.m4])
m4trace:acx_lapack.m4:91: -1- AC_DEFUN([ACX_LAPACK], [
AC_REQUIRE([ACX_BLAS])
acx_lapack_ok=no

AC_ARG_WITH(lapack,
	[AC_HELP_STRING([--with-lapack=<lib>], [use LAPACK library <lib>])])
case $with_lapack in
	yes | "") ;;
	no) acx_lapack_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) LAPACK_LIBS="$with_lapack" ;;
	*) LAPACK_LIBS="-l$with_lapack" ;;
esac

# Get fortran linker name of LAPACK function to check for.
AC_F77_FUNC(cheev)

# We cannot use LAPACK if BLAS is not found
if test "x$acx_blas_ok" != xyes; then
	acx_lapack_ok=noblas
fi

# First, check LAPACK_LIBS environment variable
if test "x$LAPACK_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$LAPACK_LIBS $BLAS_LIBS $LIBS $FLIBS"
	AC_MSG_CHECKING([for $cheev in $LAPACK_LIBS])
	AC_TRY_LINK_FUNC($cheev, [acx_lapack_ok=yes], [LAPACK_LIBS=""])
	AC_MSG_RESULT($acx_lapack_ok)
	LIBS="$save_LIBS"
	if test acx_lapack_ok = no; then
		LAPACK_LIBS=""
	fi
fi

# LAPACK linked to by default?  (is sometimes included in BLAS lib)
if test $acx_lapack_ok = no; then
	save_LIBS="$LIBS"; LIBS="$LIBS $BLAS_LIBS $FLIBS"
	AC_CHECK_FUNC($cheev, [acx_lapack_ok=yes])
	LIBS="$save_LIBS"
fi

# Generic LAPACK library?
for lapack in lapack lapack_rs6k; do
	if test $acx_lapack_ok = no; then
		save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
		AC_CHECK_LIB($lapack, $cheev,
		    [acx_lapack_ok=yes; LAPACK_LIBS="-l$lapack"], [], [$FLIBS])
		LIBS="$save_LIBS"
	fi
done

AC_SUBST(LAPACK_LIBS)

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_lapack_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_LAPACK,1,[Define if you have LAPACK library.]),[$1])
        :
else
        acx_lapack_ok=no
        $2
fi
])
m4trace:configure.ac:110: -1- sinclude([acx_blas.m4])
m4trace:acx_blas.m4:149: -1- AC_DEFUN([ACX_BLAS], [
AC_PREREQ(2.50)
AC_REQUIRE([AC_F77_LIBRARY_LDFLAGS])
acx_blas_ok=no

AC_ARG_WITH(blas,
	[AC_HELP_STRING([--with-blas=<lib>], [use BLAS library <lib>])])
case $with_blas in
	yes | "") ;;
	no) acx_blas_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.o) BLAS_LIBS="$with_blas" ;;
	*) BLAS_LIBS="-l$with_blas" ;;
esac

# Get fortran linker names of BLAS functions to check for.
AC_F77_FUNC(sgemm)
AC_F77_FUNC(dgemm)

acx_blas_save_LIBS="$LIBS"
LIBS="$LIBS $FLIBS"

# First, check BLAS_LIBS environment variable
if test $acx_blas_ok = no; then
if test "x$BLAS_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
	AC_MSG_CHECKING([for $sgemm in $BLAS_LIBS])
	AC_TRY_LINK_FUNC($sgemm, [acx_blas_ok=yes], [BLAS_LIBS=""])
	AC_MSG_RESULT($acx_blas_ok)
	LIBS="$save_LIBS"
fi
fi

# BLAS linked to by default?  (happens on some supercomputers)
if test $acx_blas_ok = no; then
	save_LIBS="$LIBS"; LIBS="$LIBS"
	AC_CHECK_FUNC($sgemm, [acx_blas_ok=yes])
	LIBS="$save_LIBS"
fi

# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(atlas, ATL_xerbla,
		[AC_CHECK_LIB(f77blas, $sgemm,
		[AC_CHECK_LIB(cblas, cblas_dgemm,
			[acx_blas_ok=yes
			 BLAS_LIBS="-lcblas -lf77blas -latlas"],
			[], [-lf77blas -latlas])],
			[], [-latlas])])
fi

# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(blas, $sgemm,
		[AC_CHECK_LIB(dgemm, $dgemm,
		[AC_CHECK_LIB(sgemm, $sgemm,
			[acx_blas_ok=yes; BLAS_LIBS="-lsgemm -ldgemm -lblas"],
			[], [-lblas])],
			[], [-lblas])])
fi

# BLAS in Alpha CXML library?
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(cxml, $sgemm, [acx_blas_ok=yes;BLAS_LIBS="-lcxml"])
fi

# BLAS in Alpha DXML library? (now called CXML, see above)
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(dxml, $sgemm, [acx_blas_ok=yes;BLAS_LIBS="-ldxml"])
fi

# BLAS in Sun Performance library?
if test $acx_blas_ok = no; then
	if test "x$GCC" != xyes; then # only works with Sun CC
		AC_CHECK_LIB(sunmath, acosp,
			[AC_CHECK_LIB(sunperf, $sgemm,
        			[BLAS_LIBS="-xlic_lib=sunperf -lsunmath"
                                 acx_blas_ok=yes],[],[-lsunmath])])
	fi
fi

# BLAS in SCSL library?  (SGI/Cray Scientific Library)
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(scs, $sgemm, [acx_blas_ok=yes; BLAS_LIBS="-lscs"])
fi

# BLAS in SGIMATH library?
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(complib.sgimath, $sgemm,
		     [acx_blas_ok=yes; BLAS_LIBS="-lcomplib.sgimath"])
fi

# BLAS in IBM ESSL library? (requires generic BLAS lib, too)
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(blas, $sgemm,
		[AC_CHECK_LIB(essl, $sgemm,
			[acx_blas_ok=yes; BLAS_LIBS="-lessl -lblas"],
			[], [-lblas $FLIBS])])
fi

# Generic BLAS library?
if test $acx_blas_ok = no; then
	AC_CHECK_LIB(blas, $sgemm, [acx_blas_ok=yes; BLAS_LIBS="-lblas"])
fi

AC_SUBST(BLAS_LIBS)

LIBS="$acx_blas_save_LIBS"

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$acx_blas_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_BLAS,1,[Define if you have a BLAS library.]),[$1])
        :
else
        acx_blas_ok=no
        $2
fi
])
m4trace:configure.ac:111: -1- sinclude([acx_mpi.m4])
m4trace:acx_mpi.m4:108: -1- AC_DEFUN([ACX_MPI], [
AC_PREREQ(2.50) dnl for AC_LANG_CASE

AC_LANG_CASE(
[C], [
	AC_REQUIRE([AC_PROG_CC])
	AC_CHECK_PROGS(MPICC, mpicc hcc mpcc mpcc_r mpxlc, $CC)
	acx_mpi_save_CC="$CC"
	CC="$MPICC"
	AC_SUBST(MPICC)
],
[C++], [
	AC_REQUIRE([AC_PROG_CXX])
	AC_CHECK_PROGS(MPICXX, mpiCC mpCC, $CXX)
	acx_mpi_save_CXX="$CXX"
	CXX="$MPICXX"
	AC_SUBST(MPICXX)
],
[Fortran 77], [
	AC_REQUIRE([AC_PROG_F77])
	AC_CHECK_PROGS(MPIF77, mpif77 hf77 mpxlf mpf77 mpif90 mpf90 mpxlf90 mpxlf95 mpxlf_r, $F77)
	acx_mpi_save_F77="$F77"
	F77="$MPIF77"
	AC_SUBST(MPIF77)
],
[Fortran 90], [
	AC_REQUIRE([AC_PROG_FC])
	AC_CHECK_PROGS(MPIF90, mpf90 mpf95, $FC)
	acx_mpi_save_FC="$FC"
	FC="$MPIFC"
	AC_SUBST(MPIFC)])

if test x = x"$MPILIBS"; then
	AC_LANG_CASE(
	        [C], [AC_CHECK_FUNC(MPI_Init, [MPILIBS=" "])],
		[C++], [AC_CHECK_FUNC(MPI_Init, [MPILIBS=" "])],
		[Fortran 77], [AC_MSG_CHECKING([for MPI_Init])
			       AC_TRY_LINK([],[call MPI_Init], [MPILIBS=" " AC_MSG_RESULT(yes)], [AC_MSG_RESULT(no)])],
		[Fortran 90], [AC_MSG_CHECKING([for MPI_Init])
			       AC_TRY_LINK([],[call MPI_Init], [MPILIBS=" " AC_MSG_RESULT(yes)], [AC_MSG_RESULT(no)])])

fi
if test x = x"$MPILIBS"; then
	AC_CHECK_LIB(mpi, MPI_Init, [MPILIBS="-lmpi"])
fi
if test x = x"$MPILIBS"; then
	AC_CHECK_LIB(mpich, MPI_Init, [MPILIBS="-lmpich"])
fi

dnl We have to use AC_TRY_COMPILE and not AC_CHECK_HEADER because the
dnl latter uses $CPP, not $CC (which may be mpicc).
AC_LANG_CASE([C], [if test x != x"$MPILIBS"; then
	AC_MSG_CHECKING([for mpi.h])
	AC_TRY_COMPILE([#include <mpi.h>],[],[AC_MSG_RESULT(yes)], [MPILIBS=""
		AC_MSG_RESULT(no)])
fi],
[C++], [if test x != x"$MPILIBS"; then
	AC_MSG_CHECKING([for mpi.h])
	AC_TRY_COMPILE([#include <mpi.h>],[],[AC_MSG_RESULT(yes)], [MPILIBS=""
		AC_MSG_RESULT(no)])
fi])

AC_LANG_CASE([C], [CC="$acx_mpi_save_CC"],
	[C++], [CXX="$acx_mpi_save_CXX"],
	[Fortran 77], [F77="$acx_mpi_save_F77"],
	[Fortran 90], [FC="$acx_mpi_save_FC"])

AC_SUBST(MPILIBS)

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x = x"$MPILIBS"; then
        $2
	HAVE_MPI="No MPI found"
        :
else
        ifelse([$1],,[AC_DEFINE(HAVE_MPI,1,[Define if you have the MPI library.]) HAVE_MPI="Using MPI"],[$1])
        :
fi
])
m4trace:configure.ac:122: -1- ACX_MPI([], [AC_MSG_WARN([MPI was not found, using stubs!])])
m4trace:configure.ac:122: -1- AC_SUBST([MPICC])
m4trace:configure.ac:122: -1- m4_pattern_allow([^MPICC$])
m4trace:configure.ac:122: -1- AC_SUBST([MPICC])
m4trace:configure.ac:122: -1- m4_pattern_allow([^MPICC$])
m4trace:configure.ac:122: -1- AC_CHECK_LIB([mpi], [MPI_Init], [MPILIBS="-lmpi"])
m4trace:configure.ac:122: -1- AC_CHECK_LIB([mpich], [MPI_Init], [MPILIBS="-lmpich"])
m4trace:configure.ac:122: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
You should run autoupdate.], [autoconf/general.m4:2299: AC_TRY_COMPILE is expanded from...
acx_mpi.m4:108: ACX_MPI is expanded from...
configure.ac:122: the top level])
m4trace:configure.ac:122: -1- AC_SUBST([MPILIBS])
m4trace:configure.ac:122: -1- m4_pattern_allow([^MPILIBS$])
m4trace:configure.ac:122: -1- AC_DEFINE_TRACE_LITERAL([HAVE_MPI])
m4trace:configure.ac:122: -1- AH_OUTPUT([HAVE_MPI], [/* Define if you have the MPI library. */
#undef HAVE_MPI])
m4trace:configure.ac:125: -1- AC_CHECK_LIB([stdc++], [main], [], [{ { echo "$as_me:$LINENO: error: elmer requires libstdc++" >&5
echo "$as_me: error: elmer requires libstdc++" >&2;}
   { (exit 1); exit 1; }; }])
m4trace:configure.ac:125: -1- AH_OUTPUT([HAVE_LIBSTDC__], [/* Define to 1 if you have the `stdc++\' library (-lstdc++). */
#undef HAVE_LIBSTDC__])
m4trace:configure.ac:125: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LIBSTDC__])
m4trace:configure.ac:126: -1- ACX_BLAS([], [AC_MSG_ERROR([BLAS was not found!])])
m4trace:configure.ac:126: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [autoconf/general.m4:219: AC_HELP_STRING is expanded from...
autoconf/general.m4:1432: AC_ARG_WITH is expanded from...
acx_blas.m4:149: ACX_BLAS is expanded from...
configure.ac:126: the top level])
m4trace:configure.ac:126: -1- AC_CHECK_LIB([atlas], [ATL_xerbla], [AC_CHECK_LIB(f77blas, $sgemm,
		[AC_CHECK_LIB(cblas, cblas_dgemm,
			[acx_blas_ok=yes
			 BLAS_LIBS="-lcblas -lf77blas -latlas"],
			[], [-lf77blas -latlas])],
			[], [-latlas])])
m4trace:configure.ac:126: -1- AC_CHECK_LIB([f77blas], [$sgemm], [AC_CHECK_LIB(cblas, cblas_dgemm,
			[acx_blas_ok=yes
			 BLAS_LIBS="-lcblas -lf77blas -latlas"],
			[], [-lf77blas -latlas])], [], [-latlas])
m4trace:configure.ac:126: -1- AC_CHECK_LIB([cblas], [cblas_dgemm], [acx_blas_ok=yes
			 BLAS_LIBS="-lcblas -lf77blas -latlas"], [], [-lf77blas -latlas])
m4trace:configure.ac:126: -1- AC_CHECK_LIB([blas], [$sgemm], [AC_CHECK_LIB(dgemm, $dgemm,
		[AC_CHECK_LIB(sgemm, $sgemm,
			[acx_blas_ok=yes; BLAS_LIBS="-lsgemm -ldgemm -lblas"],
			[], [-lblas])],
			[], [-lblas])])
m4trace:configure.ac:126: -1- AC_CHECK_LIB([dgemm], [$dgemm], [AC_CHECK_LIB(sgemm, $sgemm,
			[acx_blas_ok=yes; BLAS_LIBS="-lsgemm -ldgemm -lblas"],
			[], [-lblas])], [], [-lblas])
m4trace:configure.ac:126: -1- AC_CHECK_LIB([sgemm], [$sgemm], [acx_blas_ok=yes; BLAS_LIBS="-lsgemm -ldgemm -lblas"], [], [-lblas])
m4trace:configure.ac:126: -1- AC_CHECK_LIB([cxml], [$sgemm], [acx_blas_ok=yes;BLAS_LIBS="-lcxml"])
m4trace:configure.ac:126: -1- AC_CHECK_LIB([dxml], [$sgemm], [acx_blas_ok=yes;BLAS_LIBS="-ldxml"])
m4trace:configure.ac:126: -1- AC_CHECK_LIB([sunmath], [acosp], [AC_CHECK_LIB(sunperf, $sgemm,
        			[BLAS_LIBS="-xlic_lib=sunperf -lsunmath"
                                 acx_blas_ok=yes],[],[-lsunmath])])
m4trace:configure.ac:126: -1- AC_CHECK_LIB([sunperf], [$sgemm], [BLAS_LIBS="-xlic_lib=sunperf -lsunmath"
                                 acx_blas_ok=yes], [], [-lsunmath])
m4trace:configure.ac:126: -1- AC_CHECK_LIB([scs], [$sgemm], [acx_blas_ok=yes; BLAS_LIBS="-lscs"])
m4trace:configure.ac:126: -1- AC_CHECK_LIB([complib.sgimath], [$sgemm], [acx_blas_ok=yes; BLAS_LIBS="-lcomplib.sgimath"])
m4trace:configure.ac:126: -1- AC_CHECK_LIB([blas], [$sgemm], [AC_CHECK_LIB(essl, $sgemm,
			[acx_blas_ok=yes; BLAS_LIBS="-lessl -lblas"],
			[], [-lblas $FLIBS])])
m4trace:configure.ac:126: -1- AC_CHECK_LIB([essl], [$sgemm], [acx_blas_ok=yes; BLAS_LIBS="-lessl -lblas"], [], [-lblas $FLIBS])
m4trace:configure.ac:126: -1- AC_CHECK_LIB([blas], [$sgemm], [acx_blas_ok=yes; BLAS_LIBS="-lblas"])
m4trace:configure.ac:126: -1- AC_SUBST([BLAS_LIBS])
m4trace:configure.ac:126: -1- m4_pattern_allow([^BLAS_LIBS$])
m4trace:configure.ac:126: -2- AC_DEFINE_TRACE_LITERAL([HAVE_BLAS])
m4trace:configure.ac:126: -2- AH_OUTPUT([HAVE_BLAS], [/* Define if you have a BLAS library. */
#undef HAVE_BLAS])
m4trace:configure.ac:127: -1- ACX_LAPACK([], [AC_MSG_ERROR([LAPACK was not found!])])
m4trace:configure.ac:127: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [autoconf/general.m4:219: AC_HELP_STRING is expanded from...
autoconf/general.m4:1432: AC_ARG_WITH is expanded from...
acx_lapack.m4:91: ACX_LAPACK is expanded from...
configure.ac:127: the top level])
m4trace:configure.ac:127: -1- AC_CHECK_LIB([$lapack], [$cheev], [acx_lapack_ok=yes; LAPACK_LIBS="-l$lapack"], [], [$FLIBS])
m4trace:configure.ac:127: -1- AC_SUBST([LAPACK_LIBS])
m4trace:configure.ac:127: -1- m4_pattern_allow([^LAPACK_LIBS$])
m4trace:configure.ac:127: -2- AC_DEFINE_TRACE_LITERAL([HAVE_LAPACK])
m4trace:configure.ac:127: -2- AH_OUTPUT([HAVE_LAPACK], [/* Define if you have LAPACK library. */
#undef HAVE_LAPACK])
m4trace:configure.ac:128: -1- ACX_HUTI([], [AC_MSG_ERROR([libhuti $ELMER_LIBERRORMSG])])
m4trace:configure.ac:128: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [autoconf/general.m4:219: AC_HELP_STRING is expanded from...
autoconf/general.m4:1432: AC_ARG_WITH is expanded from...
acx_elmer.m4:78: ACX_HUTI is expanded from...
configure.ac:128: the top level])
m4trace:configure.ac:128: -1- AC_CHECK_LIB([huti], [$huti_d_gmres], [acx_huti_ok=yes; HUTI_LIBS="-lhuti"])
m4trace:configure.ac:128: -1- AC_SUBST([HUTI_LIBS])
m4trace:configure.ac:128: -1- m4_pattern_allow([^HUTI_LIBS$])
m4trace:configure.ac:128: -2- AC_DEFINE_TRACE_LITERAL([HAVE_HUTI])
m4trace:configure.ac:128: -2- AH_OUTPUT([HAVE_HUTI], [/* Define if you have a HUTI library. */
#undef HAVE_HUTI])
m4trace:configure.ac:129: -1- ACX_EIOF([], [AC_MSG_ERROR([libeiof $ELMER_LIBERRORMSG])])
m4trace:configure.ac:129: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [autoconf/general.m4:219: AC_HELP_STRING is expanded from...
autoconf/general.m4:1432: AC_ARG_WITH is expanded from...
acx_elmer.m4:134: ACX_EIOF is expanded from...
configure.ac:129: the top level])
m4trace:configure.ac:129: -1- AC_CHECK_LIB([eiof], [$eio_init], [acx_eiof_ok=yes; EIOF_LIBS="-leiof"])
m4trace:configure.ac:129: -1- AC_SUBST([EIOF_LIBS])
m4trace:configure.ac:129: -1- m4_pattern_allow([^EIOF_LIBS$])
m4trace:configure.ac:129: -2- AC_DEFINE_TRACE_LITERAL([HAVE_EIOF])
m4trace:configure.ac:129: -2- AH_OUTPUT([HAVE_EIOF], [/* Define if you have a EIOF library. */
#undef HAVE_EIOF])
m4trace:configure.ac:130: -1- ACX_ARPACK([], [AC_MSG_ERROR([libarpack $ELMER_LIBERRORMSG])])
m4trace:configure.ac:130: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [autoconf/general.m4:219: AC_HELP_STRING is expanded from...
autoconf/general.m4:1432: AC_ARG_WITH is expanded from...
acx_elmer.m4:246: ACX_ARPACK is expanded from...
configure.ac:130: the top level])
m4trace:configure.ac:130: -1- AC_CHECK_LIB([arpack], [$dseupd], [acx_arpack_ok=yes; ARPACK_LIBS="-larpack"])
m4trace:configure.ac:130: -1- AC_SUBST([ARPACK_LIBS])
m4trace:configure.ac:130: -1- m4_pattern_allow([^ARPACK_LIBS$])
m4trace:configure.ac:130: -2- AC_DEFINE_TRACE_LITERAL([HAVE_ARPACK])
m4trace:configure.ac:130: -2- AH_OUTPUT([HAVE_ARPACK], [/* Define if you have a ARPACK library. */
#undef HAVE_ARPACK])
m4trace:configure.ac:131: -1- ACX_UMFPACK([], [AC_MSG_ERROR([libumfpack $ELMER_LIBERRORMSG])])
m4trace:configure.ac:131: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [autoconf/general.m4:219: AC_HELP_STRING is expanded from...
autoconf/general.m4:1432: AC_ARG_WITH is expanded from...
acx_elmer.m4:304: ACX_UMFPACK is expanded from...
configure.ac:131: the top level])
m4trace:configure.ac:131: -1- AC_CHECK_LIB([umfpack], [$umf4def], [acx_umfpack_ok=yes; UMFPACK_LIBS="-lumfpack -lamd"], [], [-lamd])
m4trace:configure.ac:131: -1- AC_SUBST([UMFPACK_LIBS])
m4trace:configure.ac:131: -1- m4_pattern_allow([^UMFPACK_LIBS$])
m4trace:configure.ac:131: -2- AC_DEFINE_TRACE_LITERAL([HAVE_UMFPACK])
m4trace:configure.ac:131: -2- AH_OUTPUT([HAVE_UMFPACK], [/* Define if you have a UMFPACK library. */
#undef HAVE_UMFPACK])
m4trace:configure.ac:132: -1- ACX_MATC([], [AC_MSG_ERROR([libmatc $ELMER_LIBERRORMSG])])
m4trace:configure.ac:132: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [autoconf/general.m4:219: AC_HELP_STRING is expanded from...
autoconf/general.m4:1432: AC_ARG_WITH is expanded from...
acx_elmer.m4:355: ACX_MATC is expanded from...
configure.ac:132: the top level])
m4trace:configure.ac:132: -1- AC_CHECK_LIB([matc], [mtc_init], [acx_matc_ok=yes; MATC_LIBS="-lmatc"], [], [-lm])
m4trace:configure.ac:132: -1- AC_SUBST([MATC_LIBS])
m4trace:configure.ac:132: -1- m4_pattern_allow([^MATC_LIBS$])
m4trace:configure.ac:132: -2- AC_DEFINE_TRACE_LITERAL([HAVE_MATC])
m4trace:configure.ac:132: -2- AH_OUTPUT([HAVE_MATC], [/* Define if you have a MATC library. */
#undef HAVE_MATC])
m4trace:configure.ac:345: -1- AC_CHECK_LIB([dld], [shl_load])
m4trace:configure.ac:345: -1- AH_OUTPUT([HAVE_LIBDLD], [/* Define to 1 if you have the `dld\' library (-ldld). */
#undef HAVE_LIBDLD])
m4trace:configure.ac:345: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LIBDLD])
m4trace:configure.ac:346: -1- AC_CHECK_FUNCS([shl_load shl_findsym])
m4trace:configure.ac:346: -1- AH_OUTPUT([HAVE_SHL_LOAD], [/* Define to 1 if you have the `shl_load\' function. */
#undef HAVE_SHL_LOAD])
m4trace:configure.ac:346: -1- AH_OUTPUT([HAVE_SHL_FINDSYM], [/* Define to 1 if you have the `shl_findsym\' function. */
#undef HAVE_SHL_FINDSYM])
m4trace:configure.ac:351: -1- AC_CHECK_LIB([wsock32], [LoadLibrary])
m4trace:configure.ac:351: -1- AH_OUTPUT([HAVE_LIBWSOCK32], [/* Define to 1 if you have the `wsock32\' library (-lwsock32). */
#undef HAVE_LIBWSOCK32])
m4trace:configure.ac:351: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LIBWSOCK32])
m4trace:configure.ac:352: -1- AC_CHECK_FUNCS([LoadLibrary])
m4trace:configure.ac:352: -1- AH_OUTPUT([HAVE_LOADLIBRARY], [/* Define to 1 if you have the `LoadLibrary\' function. */
#undef HAVE_LOADLIBRARY])
m4trace:configure.ac:356: -1- AC_CHECK_LIB([dl], [dlopen])
m4trace:configure.ac:356: -1- AH_OUTPUT([HAVE_LIBDL], [/* Define to 1 if you have the `dl\' library (-ldl). */
#undef HAVE_LIBDL])
m4trace:configure.ac:356: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LIBDL])
m4trace:configure.ac:357: -1- AC_CHECK_FUNCS([dlopen dlsym dlerror dlclose])
m4trace:configure.ac:357: -1- AH_OUTPUT([HAVE_DLOPEN], [/* Define to 1 if you have the `dlopen\' function. */
#undef HAVE_DLOPEN])
m4trace:configure.ac:357: -1- AH_OUTPUT([HAVE_DLSYM], [/* Define to 1 if you have the `dlsym\' function. */
#undef HAVE_DLSYM])
m4trace:configure.ac:357: -1- AH_OUTPUT([HAVE_DLERROR], [/* Define to 1 if you have the `dlerror\' function. */
#undef HAVE_DLERROR])
m4trace:configure.ac:357: -1- AH_OUTPUT([HAVE_DLCLOSE], [/* Define to 1 if you have the `dlclose\' function. */
#undef HAVE_DLCLOSE])
m4trace:configure.ac:382: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DLOPEN_API])
m4trace:configure.ac:382: -1- AH_OUTPUT([HAVE_DLOPEN_API], [/* Define if your system has dlopen, dlsym, dlerror, and dlclose for dynamic
   linking */
#undef HAVE_DLOPEN_API])
m4trace:configure.ac:385: -1- AC_DEFINE_TRACE_LITERAL([HAVE_SHL_LOAD_API])
m4trace:configure.ac:385: -1- AH_OUTPUT([HAVE_SHL_LOAD_API], [/* Define if your system has shl_load and shl_findsym for dynamic linking */
#undef HAVE_SHL_LOAD_API])
m4trace:configure.ac:388: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LOADLIBRARY_API])
m4trace:configure.ac:388: -1- AH_OUTPUT([HAVE_LOADLIBRARY_API], [/* Define if your system has LoadLibrary for dynamic linking */
#undef HAVE_LOADLIBRARY_API])
m4trace:configure.ac:391: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DYLD_API])
m4trace:configure.ac:391: -1- AH_OUTPUT([HAVE_DYLD_API], [/* Define if your system has dyld for dynamic linking */
#undef HAVE_DYLD_API])
m4trace:configure.ac:396: -1- AC_DEFINE_TRACE_LITERAL([ENABLE_DYNAMIC_LINKING])
m4trace:configure.ac:396: -1- AH_OUTPUT([ENABLE_DYNAMIC_LINKING], [/* Define if using dynamic linking */
#undef ENABLE_DYNAMIC_LINKING])
m4trace:configure.ac:398: -1- AC_DEFINE_TRACE_LITERAL([SHL_EXTENSION])
m4trace:configure.ac:398: -1- AH_OUTPUT([SHL_EXTENSION], [/* Shared lib filename extension */
#undef SHL_EXTENSION])
m4trace:configure.ac:425: -1- AC_SUBST([FPICFLAG])
m4trace:configure.ac:425: -1- m4_pattern_allow([^FPICFLAG$])
m4trace:configure.ac:426: -1- AC_SUBST([CPICFLAG])
m4trace:configure.ac:426: -1- m4_pattern_allow([^CPICFLAG$])
m4trace:configure.ac:427: -1- AC_SUBST([CXXPICFLAG])
m4trace:configure.ac:427: -1- m4_pattern_allow([^CXXPICFLAG$])
m4trace:configure.ac:428: -1- AC_SUBST([SHLEXT])
m4trace:configure.ac:428: -1- m4_pattern_allow([^SHLEXT$])
m4trace:configure.ac:429: -1- AC_SUBST([SHLLIB])
m4trace:configure.ac:429: -1- m4_pattern_allow([^SHLLIB$])
m4trace:configure.ac:430: -1- AC_SUBST([SHLBIN])
m4trace:configure.ac:430: -1- m4_pattern_allow([^SHLBIN$])
m4trace:configure.ac:431: -1- AC_SUBST([SHLEXT_VER])
m4trace:configure.ac:431: -1- m4_pattern_allow([^SHLEXT_VER$])
m4trace:configure.ac:432: -1- AC_SUBST([SHLLIB_VER])
m4trace:configure.ac:432: -1- m4_pattern_allow([^SHLLIB_VER$])
m4trace:configure.ac:433: -1- AC_SUBST([SHLBIN_VER])
m4trace:configure.ac:433: -1- m4_pattern_allow([^SHLBIN_VER$])
m4trace:configure.ac:434: -1- AC_SUBST([SHLLINKEXT])
m4trace:configure.ac:434: -1- m4_pattern_allow([^SHLLINKEXT$])
m4trace:configure.ac:435: -1- AC_SUBST([DLFCN_DIR])
m4trace:configure.ac:435: -1- m4_pattern_allow([^DLFCN_DIR$])
m4trace:configure.ac:436: -1- AC_SUBST([SH_LD])
m4trace:configure.ac:436: -1- m4_pattern_allow([^SH_LD$])
m4trace:configure.ac:437: -1- AC_SUBST([SH_LDFLAGS])
m4trace:configure.ac:437: -1- m4_pattern_allow([^SH_LDFLAGS$])
m4trace:configure.ac:438: -1- AC_SUBST([DL_LD])
m4trace:configure.ac:438: -1- m4_pattern_allow([^DL_LD$])
m4trace:configure.ac:439: -1- AC_SUBST([DL_LDFLAGS])
m4trace:configure.ac:439: -1- m4_pattern_allow([^DL_LDFLAGS$])
m4trace:configure.ac:440: -1- AC_SUBST([MKOCTFILE_DL_LDFLAGS])
m4trace:configure.ac:440: -1- m4_pattern_allow([^MKOCTFILE_DL_LDFLAGS$])
m4trace:configure.ac:441: -1- AC_SUBST([SONAME_FLAGS])
m4trace:configure.ac:441: -1- m4_pattern_allow([^SONAME_FLAGS$])
m4trace:configure.ac:442: -1- AC_SUBST([NO_OCT_FILE_STRIP])
m4trace:configure.ac:442: -1- m4_pattern_allow([^NO_OCT_FILE_STRIP$])
m4trace:configure.ac:443: -1- AC_SUBST([RLD_FLAG])
m4trace:configure.ac:443: -1- m4_pattern_allow([^RLD_FLAG$])
m4trace:configure.ac:444: -1- AC_SUBST([TEMPLATE_AR])
m4trace:configure.ac:444: -1- m4_pattern_allow([^TEMPLATE_AR$])
m4trace:configure.ac:445: -1- AC_SUBST([TEMPLATE_ARFLAGS])
m4trace:configure.ac:445: -1- m4_pattern_allow([^TEMPLATE_ARFLAGS$])
m4trace:configure.ac:446: -1- AC_SUBST([library_path_var])
m4trace:configure.ac:446: -1- m4_pattern_allow([^library_path_var$])
m4trace:configure.ac:447: -1- AC_SUBST([FCPPFLAGS])
m4trace:configure.ac:447: -1- m4_pattern_allow([^FCPPFLAGS$])
m4trace:configure.ac:448: -1- AC_SUBST([LIBEXT])
m4trace:configure.ac:448: -1- m4_pattern_allow([^LIBEXT$])
m4trace:configure.ac:449: -1- AC_SUBST([LIBSOLVER_DEPS])
m4trace:configure.ac:449: -1- m4_pattern_allow([^LIBSOLVER_DEPS$])
m4trace:configure.ac:450: -1- AC_SUBST([RM])
m4trace:configure.ac:450: -1- m4_pattern_allow([^RM$])
m4trace:configure.ac:451: -1- AC_SUBST([CP])
m4trace:configure.ac:451: -1- m4_pattern_allow([^CP$])
m4trace:configure.ac:452: -1- AC_SUBST([MV])
m4trace:configure.ac:452: -1- m4_pattern_allow([^MV$])
m4trace:configure.ac:453: -1- AC_SUBST([MKDIR])
m4trace:configure.ac:453: -1- m4_pattern_allow([^MKDIR$])
m4trace:configure.ac:454: -1- AC_SUBST([LIBS])
m4trace:configure.ac:454: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:456: -1- AC_CONFIG_HEADERS([config.h])
m4trace:configure.ac:461: -1- AC_CONFIG_FILES([
Makefile
src/Makefile
])
m4trace:configure.ac:461: -1- _m4_warn([obsolete], [AC_OUTPUT should be used without arguments.
You should run autoupdate.], [])
m4trace:configure.ac:461: -1- AC_SUBST([LIB@&t@OBJS], [$ac_libobjs])
m4trace:configure.ac:461: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:461: -1- AC_SUBST([LTLIBOBJS], [$ac_ltlibobjs])
m4trace:configure.ac:461: -1- m4_pattern_allow([^LTLIBOBJS$])
