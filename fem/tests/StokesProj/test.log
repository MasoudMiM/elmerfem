ifc -I/tmp/elmer/ifc/include -c Velocity.f90 Pressure.f90
ifc: warning: The Intel Fortran driver is now named ifort.  You can suppress this message with '-quiet'
fortcom: Error: Velocity.f90, line 25: Error in opening the Library module file.   [DEFUTILS]
  USE DefUtils
------^
fortcom: Error: Velocity.f90, line 29: This derived type name has not been declared.   [SOLVER_T]
  TYPE(Solver_t) :: Solver
-------^
fortcom: Error: Velocity.f90, line 30: This derived type name has not been declared.   [MODEL_T]
  TYPE(Model_t) :: Model
-------^
fortcom: Error: Velocity.f90, line 32: A kind type parameter must be a compile-time constant.   [DP]
  REAL(KIND=dp) :: dt
------------^
fortcom: Error: Velocity.f90, line 38: This derived type name has not been declared.   [ELEMENT_T]
  TYPE(Element_t),POINTER :: Element
-------^
fortcom: Error: Velocity.f90, line 41: A kind type parameter must be a compile-time constant.   [DP]
  REAL(KIND=dp) :: Norm = 0, PrevNorm, RelC
------------^
fortcom: Error: Velocity.f90, line 43: This derived type name has not been declared.   [VALUELIST_T]
  TYPE(ValueList_t), POINTER :: BodyForce, Material
-------^
fortcom: Error: Velocity.f90, line 45: A kind type parameter must be a compile-time constant.   [DP]
  REAL(KIND=dp), ALLOCATABLE :: STIFF(:,:), LOAD(:,:), &
------------^
fortcom: Info: Velocity.f90, line 2: DLL IMPORT/EXPORT is not supported on this platform.   [DLLEXPORT]
!DEC$ATTRIBUTES DLLEXPORT :: StokesSolver
----------------^
fortcom: Error: Velocity.f90, line 126: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp), TARGET :: STIFF(:,:), FORCE(:), LOAD(:,:)
--------------^
fortcom: Error: Velocity.f90, line 127: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: Nodalmu(:), Nodalrho(:), NodalVelo(:,:), NodalPressure(:)
--------------^
fortcom: Error: Velocity.f90, line 129: This derived type name has not been declared.   [ELEMENT_T]
    TYPE(Element_t), POINTER :: Element
---------^
fortcom: Error: Velocity.f90, line 131: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: Basis(ntot),dBasisdx(ntot,3), ddBasisddx(ntot,3,3), &
--------------^
fortcom: Error: Velocity.f90, line 133: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp), POINTER :: A(:,:), F(:)
--------------^
fortcom: Error: Velocity.f90, line 136: This derived type name has not been declared.   [GAUSSINTEGRATIONPOINTS_T]
    TYPE(GaussIntegrationPoints_t) :: IP
---------^
fortcom: Error: Velocity.f90, line 138: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: mu = 1.0d0, rho = 1.0d0, s, c
--------------^
fortcom: Error: Velocity.f90, line 140: This derived type name has not been declared.   [NODES_T]
    TYPE(Nodes_t) :: Nodes
---------^
fortcom: Error: Velocity.f90, line 124: This name does not have a type, and must have an explicit type.   [ELEMENT]
     Nodalmu, NodalVelo, NodalPressure, Element, n, nd, ntot, dim )
----------------------------------------^
fortcom: Error: Velocity.f90, line 208: Error in opening the Library module file.   [LUDECOMPOSITION]
      USE LUDecomposition
----------^
fortcom: Error: Velocity.f90, line 210: A kind type parameter must be a compile-time constant.   [DP]
      REAL(KIND=dp) :: K(:,:),F(:), Kbb(Nb*dim,Nb*dim), &
----------------^
fortcom: Error: Velocity.f90, line 51: This name does not have a type, and must have an explicit type.   [COORDINATESYSTEMDIMENSION]
  dim = CoordinateSystemDimension()
--------^
fortcom: Error: Velocity.f90, line 56: This name does not have a type, and must have an explicit type.   [SOLVER]
     n = (dim+1)*Solver % Mesh % MaxElementDOFs  ! just big enough for elemental arrays
-----------------^
fortcom: Error: Velocity.f90, line 56: This is not a field name that is defined in the encompassing structure.   [MESH]
     n = (dim+1)*Solver % Mesh % MaxElementDOFs  ! just big enough for elemental arrays
--------------------------^
fortcom: Error: Velocity.f90, line 65: This name does not have a type, and must have an explicit type.   [GETLOGICAL]
  Convect = GetLogical( GetSolverParams(), 'Convect', Found )
------------^
fortcom: Error: Velocity.f90, line 73: This is not a field name that is defined in the encompassing structure.   [NUMBEROFACTIVEELEMENTS]
  DO t=1,Solver % NumberOfActiveElements
------------------^
fortcom: Error: Velocity.f90, line 74: This name does not have a type, and must have an explicit type.   [ELEMENT]
     Element => GetActiveElement(t)
-----^
fortcom: Error: Velocity.f90, line 74: This name does not have a type, and must have an explicit type.   [GETACTIVEELEMENT]
     Element => GetActiveElement(t)
----------------^
fortcom: Error: Velocity.f90, line 74: When the target is an expression it must deliver a pointer result.   [GETACTIVEELEMENT]
     Element => GetActiveElement(t)
----------------^
fortcom: Error: Velocity.f90, line 75: This name does not have a type, and must have an explicit type.   [GETELEMENTNOFNODES]
     n  = GetElementNOFNodes()
----------^
fortcom: Error: Velocity.f90, line 76: This name does not have a type, and must have an explicit type.   [GETELEMENTNOFDOFS]
     nd = GetElementNOFDOFs()
----------^
fortcom: Error: Velocity.f90, line 77: This name does not have a type, and must have an explicit type.   [GETELEMENTNOFBDOFS]
     nb = GetElementNOFBDOFs()
----------^
fortcom: Severe: Too many errors, exiting
compilation aborted for Velocity.f90 (code 1)
fortcom: Error: Pressure.f90, line 25: Error in opening the Library module file.   [DEFUTILS]
  USE DefUtils
------^
fortcom: Error: Pressure.f90, line 29: This derived type name has not been declared.   [SOLVER_T]
  TYPE(Solver_t) :: Solver
-------^
fortcom: Error: Pressure.f90, line 30: This derived type name has not been declared.   [MODEL_T]
  TYPE(Model_t) :: Model
-------^
fortcom: Error: Pressure.f90, line 32: A kind type parameter must be a compile-time constant.   [DP]
  REAL(KIND=dp) :: dt
------------^
fortcom: Error: Pressure.f90, line 38: This derived type name has not been declared.   [ELEMENT_T]
  TYPE(Element_t),POINTER :: Element
-------^
fortcom: Error: Pressure.f90, line 41: A kind type parameter must be a compile-time constant.   [DP]
  REAL(KIND=dp) :: Norm = 0, PrevNorm, RelC, PressureRelax
------------^
fortcom: Error: Pressure.f90, line 43: This derived type name has not been declared.   [VARIABLE_T]
  TYPE(Variable_t), POINTER :: PressureVariable
-------^
fortcom: Error: Pressure.f90, line 45: A kind type parameter must be a compile-time constant.   [DP]
  REAL(KIND=dp), ALLOCATABLE :: STIFF(:,:), LOAD(:,:), FORCE(:), Velocity(:,:)
------------^
fortcom: Info: Pressure.f90, line 2: DLL IMPORT/EXPORT is not supported on this platform.   [DLLEXPORT]
!DEC$ATTRIBUTES DLLEXPORT :: PressureSolver
----------------^
fortcom: Error: Pressure.f90, line 109: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp), TARGET :: STIFF(:,:), FORCE(:)
--------------^
fortcom: Error: Pressure.f90, line 110: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: NodalVelo(:,:)
--------------^
fortcom: Error: Pressure.f90, line 112: This derived type name has not been declared.   [ELEMENT_T]
    TYPE(Element_t), POINTER :: Element
---------^
fortcom: Error: Pressure.f90, line 114: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: Basis(ntot),dBasisdx(ntot,3), ddBasisddx(ntot,3,3), &
--------------^
fortcom: Error: Pressure.f90, line 116: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp), POINTER :: A(:,:), F(:)
--------------^
fortcom: Error: Pressure.f90, line 119: This derived type name has not been declared.   [GAUSSINTEGRATIONPOINTS_T]
    TYPE(GaussIntegrationPoints_t) :: IP
---------^
fortcom: Error: Pressure.f90, line 121: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: s, c
--------------^
fortcom: Error: Pressure.f90, line 123: This derived type name has not been declared.   [NODES_T]
    TYPE(Nodes_t) :: Nodes
---------^
fortcom: Error: Pressure.f90, line 107: This name does not have a type, and must have an explicit type.   [ELEMENT]
  SUBROUTINE LocalMatrix(  STIFF, FORCE, NodalVelo, Element, n, nd, ntot, dim )
----------------------------------------------------^
fortcom: Error: Pressure.f90, line 166: Error in opening the Library module file.   [LUDECOMPOSITION]
      USE LUDecomposition
----------^
fortcom: Error: Pressure.f90, line 168: A kind type parameter must be a compile-time constant.   [DP]
      REAL(KIND=dp) :: K(:,:),F(:), Kbb(Nb,Nb), &
----------------^
fortcom: Error: Pressure.f90, line 50: This name does not have a type, and must have an explicit type.   [COORDINATESYSTEMDIMENSION]
  dim = CoordinateSystemDimension()
--------^
fortcom: Error: Pressure.f90, line 55: This name does not have a type, and must have an explicit type.   [SOLVER]
     N = Solver % Mesh % MaxElementDOFs  ! just big enough for elemental arrays
---------^
fortcom: Error: Pressure.f90, line 55: This is not a field name that is defined in the encompassing structure.   [MESH]
     N = Solver % Mesh % MaxElementDOFs  ! just big enough for elemental arrays
------------------^
fortcom: Error: Pressure.f90, line 66: This is not a field name that is defined in the encompassing structure.   [NUMBEROFACTIVEELEMENTS]
  DO t=1,Solver % NumberOfActiveElements
------------------^
fortcom: Error: Pressure.f90, line 67: This name does not have a type, and must have an explicit type.   [ELEMENT]
     Element => GetActiveElement(t)
-----^
fortcom: Error: Pressure.f90, line 67: This name does not have a type, and must have an explicit type.   [GETACTIVEELEMENT]
     Element => GetActiveElement(t)
----------------^
fortcom: Error: Pressure.f90, line 67: When the target is an expression it must deliver a pointer result.   [GETACTIVEELEMENT]
     Element => GetActiveElement(t)
----------------^
fortcom: Error: Pressure.f90, line 68: This name does not have a type, and must have an explicit type.   [GETELEMENTNOFNODES]
     n  = GetElementNOFNodes()
----------^
fortcom: Error: Pressure.f90, line 69: This name does not have a type, and must have an explicit type.   [GETELEMENTNOFDOFS]
     nd = GetElementNOFDOFs()
----------^
fortcom: Error: Pressure.f90, line 70: This name does not have a type, and must have an explicit type.   [GETELEMENTNOFBDOFS]
     nb = GetElementNOFBDOFs()
----------^
fortcom: Error: Pressure.f90, line 93: This name does not have a type, and must have an explicit type.   [DEFAULTSOLVE]
  Norm = DefaultSolve()
---------^
fortcom: Severe: Too many errors, exiting
compilation aborted for Pressure.f90 (code 1)
make: *** [run] Error 1
