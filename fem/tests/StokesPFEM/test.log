ifc -I/tmp/elmer/ifc/include -c Stokes.f90
ifc: warning: The Intel Fortran driver is now named ifort.  You can suppress this message with '-quiet'
fortcom: Error: Stokes.f90, line 39: Error in opening the Library module file.   [DEFUTILS]
  USE DefUtils
------^
fortcom: Error: Stokes.f90, line 43: This derived type name has not been declared.   [SOLVER_T]
  TYPE(Solver_t) :: Solver
-------^
fortcom: Error: Stokes.f90, line 44: This derived type name has not been declared.   [MODEL_T]
  TYPE(Model_t) :: Model
-------^
fortcom: Error: Stokes.f90, line 46: A kind type parameter must be a compile-time constant.   [DP]
  REAL(KIND=dp) :: dt
------------^
fortcom: Error: Stokes.f90, line 52: This derived type name has not been declared.   [ELEMENT_T]
  TYPE(Element_t),POINTER :: Element
-------^
fortcom: Error: Stokes.f90, line 55: A kind type parameter must be a compile-time constant.   [DP]
  REAL(KIND=dp) :: Norm = 0, PrevNorm, RelC
------------^
fortcom: Error: Stokes.f90, line 57: This derived type name has not been declared.   [VALUELIST_T]
  TYPE(ValueList_t), POINTER :: BodyForce, Material
-------^
fortcom: Error: Stokes.f90, line 58: A kind type parameter must be a compile-time constant.   [DP]
  REAL(KIND=dp), ALLOCATABLE :: STIFF(:,:), LOAD(:,:), &
------------^
fortcom: Info: Stokes.f90, line 2: DLL IMPORT/EXPORT is not supported on this platform.   [DLLEXPORT]
!DEC$ATTRIBUTES DLLEXPORT :: StokesSolver
----------------^
fortcom: Error: Stokes.f90, line 142: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp), TARGET :: MASS(:,:), STIFF(:,:), FORCE(:), LOAD(:,:)
--------------^
fortcom: Error: Stokes.f90, line 143: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: Nodalmu(:), Nodalrho(:), NodalVelo(:,:)
--------------^
fortcom: Error: Stokes.f90, line 145: This derived type name has not been declared.   [ELEMENT_T]
    TYPE(Element_t), POINTER :: Element
---------^
fortcom: Error: Stokes.f90, line 147: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: Basis(ntot),dBasisdx(ntot,3), ddBasisddx(ntot,3,3), &
--------------^
fortcom: Error: Stokes.f90, line 149: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp), POINTER :: A(:,:), F(:),M(:,:)
--------------^
fortcom: Error: Stokes.f90, line 152: This derived type name has not been declared.   [GAUSSINTEGRATIONPOINTS_T]
    TYPE(GaussIntegrationPoints_t) :: IP
---------^
fortcom: Error: Stokes.f90, line 154: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: mu = 1.0d0, rho = 1.0d0, s, c
--------------^
fortcom: Error: Stokes.f90, line 156: This derived type name has not been declared.   [NODES_T]
    TYPE(Nodes_t) :: Nodes
---------^
fortcom: Error: Stokes.f90, line 140: This name does not have a type, and must have an explicit type.   [ELEMENT]
     Nodalmu, NodalVelo, Element, n, nd, ntot, dim )
-------------------------^
fortcom: Error: Stokes.f90, line 241: Error in opening the Library module file.   [LUDECOMPOSITION]
      USE LUDecomposition
----------^
fortcom: Error: Stokes.f90, line 243: A kind type parameter must be a compile-time constant.   [DP]
      REAL(KIND=dp) :: K(:,:),F(:), Kbb(Nb*dim,Nb*dim), &
----------------^
fortcom: Error: Stokes.f90, line 64: This name does not have a type, and must have an explicit type.   [COORDINATESYSTEMDIMENSION]
   dim = CoordinateSystemDimension()
---------^
fortcom: Error: Stokes.f90, line 69: This name does not have a type, and must have an explicit type.   [SOLVER]
     n = (dim+1)*(Solver % Mesh % MaxElementDOFs+BDOFs)  ! just big enough for elemental arrays
------------------^
fortcom: Error: Stokes.f90, line 69: This is not a field name that is defined in the encompassing structure.   [MESH]
     n = (dim+1)*(Solver % Mesh % MaxElementDOFs+BDOFs)  ! just big enough for elemental arrays
---------------------------^
fortcom: Error: Stokes.f90, line 79: This name does not have a type, and must have an explicit type.   [GETLOGICAL]
  Convect = GetLogical( GetSolverParams(), 'Convect', Found )
------------^
fortcom: Error: Stokes.f90, line 87: This is not a field name that is defined in the encompassing structure.   [NUMBEROFACTIVEELEMENTS]
  DO t=1,Solver % NumberOfActiveElements
------------------^
fortcom: Error: Stokes.f90, line 88: This name does not have a type, and must have an explicit type.   [ELEMENT]
     Element => GetActiveElement(t)
-----^
fortcom: Error: Stokes.f90, line 88: This name does not have a type, and must have an explicit type.   [GETACTIVEELEMENT]
     Element => GetActiveElement(t)
----------------^
fortcom: Error: Stokes.f90, line 88: When the target is an expression it must deliver a pointer result.   [GETACTIVEELEMENT]
     Element => GetActiveElement(t)
----------------^
fortcom: Error: Stokes.f90, line 89: This name does not have a type, and must have an explicit type.   [GETELEMENTNOFNODES]
     n  = GetElementNOFNodes()
----------^
fortcom: Error: Stokes.f90, line 90: This name does not have a type, and must have an explicit type.   [GETELEMENTNOFDOFS]
     nd = GetElementNOFDOFs()
----------^
fortcom: Error: Stokes.f90, line 91: This name does not have a type, and must have an explicit type.   [GETELEMENTNOFBDOFS]
     nb = GetElementNOFBDOFs()
----------^
fortcom: Severe: Too many errors, exiting
compilation aborted for Stokes.f90 (code 1)
make: *** [run] Error 1
