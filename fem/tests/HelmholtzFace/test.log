ifc -I/tmp/elmer/ifc/include -c Helmholtz.f90
ifc: warning: The Intel Fortran driver is now named ifort.  You can suppress this message with '-quiet'
fortcom: Error: Helmholtz.f90, line 39: Error in opening the Library module file.   [DEFUTILS]
  USE DefUtils
------^
fortcom: Error: Helmholtz.f90, line 43: This derived type name has not been declared.   [SOLVER_T]
  TYPE(Solver_t) :: Solver
-------^
fortcom: Error: Helmholtz.f90, line 44: This derived type name has not been declared.   [MODEL_T]
  TYPE(Model_t) :: Model
-------^
fortcom: Error: Helmholtz.f90, line 46: A kind type parameter must be a compile-time constant.   [DP]
  REAL(KIND=dp) :: dt
------------^
fortcom: Error: Helmholtz.f90, line 52: This derived type name has not been declared.   [ELEMENT_T]
  TYPE(Element_t),POINTER :: Element, Edge, Parent
-------^
fortcom: Error: Helmholtz.f90, line 53: This derived type name has not been declared.   [NODES_T]
  TYPE(Nodes_t) :: Nodes, EdgeNodes
-------^
fortcom: Error: Helmholtz.f90, line 54: This derived type name has not been declared.   [VARIABLE_T]
  TYPE(Variable_t), POINTER :: Var
-------^
fortcom: Error: Helmholtz.f90, line 55: This derived type name has not been declared.   [VALUELIST_T]
  TYPE(ValueList_t), POINTER :: BodyForce, Material, BC
-------^
fortcom: Error: Helmholtz.f90, line 57: A kind type parameter must be a compile-time constant.   [DP]
  REAL(KIND=dp) :: Norm, Normal(3), Normal2(3), u, v, w, NormalSign, Edgeh
------------^
fortcom: Error: Helmholtz.f90, line 61: A kind type parameter must be a compile-time constant.   [DP]
  REAL(KIND=dp), ALLOCATABLE  :: LOAD(:,:), Acoef(:,:), Bcoef(:,:)
------------^
fortcom: Error: Helmholtz.f90, line 62: A kind type parameter must be a compile-time constant.   [DP]
  COMPLEX(KIND=dp), ALLOCATABLE :: STIFF(:,:), MASS(:,:), FORCE(:)
---------------^
fortcom: Info: Helmholtz.f90, line 2: DLL IMPORT/EXPORT is not supported on this platform.   [DLLEXPORT]
!DEC$ATTRIBUTES DLLEXPORT :: HelmholtzHDIVSolver
----------------^
fortcom: Error: Helmholtz.f90, line 218: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: LOAD(:,:), Acoef(:,:)
--------------^
fortcom: Error: Helmholtz.f90, line 219: A kind type parameter must be a compile-time constant.   [DP]
    COMPLEX(KIND=dp) :: STIFF(:,:), FORCE(:), MASS(:,:)
-----------------^
fortcom: Error: Helmholtz.f90, line 221: This derived type name has not been declared.   [ELEMENT_T]
    TYPE(Element_t), POINTER :: Element
---------^
fortcom: Error: Helmholtz.f90, line 223: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: Basis(nd),dBasisdx(nd,3),ddBasisddx(nd,3,3),DetJ,L1,L2
--------------^
fortcom: Error: Helmholtz.f90, line 224: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: RTBasis(3,2), DivRTBasis(3), A1, A2
--------------^
fortcom: Error: Helmholtz.f90, line 227: This derived type name has not been declared.   [GAUSSINTEGRATIONPOINTS_T]
    TYPE(GaussIntegrationPoints_t) :: IP
---------^
fortcom: Error: Helmholtz.f90, line 229: This derived type name has not been declared.   [NODES_T]
    TYPE(Nodes_t) :: Nodes
---------^
fortcom: Error: Helmholtz.f90, line 216: This name does not have a type, and must have an explicit type.   [ELEMENT]
  SUBROUTINE LocalMatrix(  STIFF, MASS, FORCE, LOAD, Acoef, Element, n, nd )
------------------------------------------------------------^
fortcom: Error: Helmholtz.f90, line 279: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: u, v, w, Ratkaisu(2), Ratkaisu2(2), RTBasis(3,2), &
--------------^
fortcom: Error: Helmholtz.f90, line 367: This derived type name has not been declared.   [SOLVER_T]
     TYPE(Solver_t), OPTIONAL, TARGET :: USolver
----------^
fortcom: Error: Helmholtz.f90, line 369: This derived type name has not been declared.   [MATRIX_T]
     TYPE(Matrix_t), POINTER   :: A
----------^
fortcom: Error: Helmholtz.f90, line 370: This derived type name has not been declared.   [VARIABLE_T]
     TYPE(Variable_t), POINTER :: x
----------^
fortcom: Error: Helmholtz.f90, line 371: This derived type name has not been declared.   [SOLVER_T]
     TYPE(Solver_t), POINTER :: Solver
----------^
fortcom: Error: Helmholtz.f90, line 372: A kind type parameter must be a compile-time constant.   [DP]
     REAL(KIND=dp), POINTER    :: b(:)
---------------^
fortcom: Error: Helmholtz.f90, line 374: A kind type parameter must be a compile-time constant.   [DP]
     REAL(KIND=dp) :: xx
---------------^
fortcom: Error: Helmholtz.f90, line 376: This derived type name has not been declared.   [VALUELIST_T]
     TYPE(ValueList_t), POINTER :: BC
----------^
fortcom: Error: Helmholtz.f90, line 377: This derived type name has not been declared.   [ELEMENT_T]
     TYPE(Element_t), POINTER :: Element, Parent, Edge, Face, SaveElement
----------^
fortcom: Error: Helmholtz.f90, line 383: A kind type parameter must be a compile-time constant.   [DP]
     REAL(KIND=dp) :: BoundaryData(2), Edgeh
---------------^
fortcom: Error: Helmholtz.f90, line 364: This name does not have a type, and must have an explicit type.   [USOLVER]
 SUBROUTINE MyDirichletBCs( USolver )
----------------------------^
fortcom: Severe: Too many errors, exiting
compilation aborted for Helmholtz.f90 (code 1)
make: *** [run] Error 1
