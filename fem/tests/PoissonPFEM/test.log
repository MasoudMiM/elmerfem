ifc -I/tmp/elmer/ifc/include -c Poisson.f90
ifc: warning: The Intel Fortran driver is now named ifort.  You can suppress this message with '-quiet'
fortcom: Error: Poisson.f90, line 23: Error in opening the Library module file.   [DEFUTILS]
  USE DefUtils
------^
fortcom: Error: Poisson.f90, line 27: This derived type name has not been declared.   [SOLVER_T]
  TYPE(Solver_t) :: Solver
-------^
fortcom: Error: Poisson.f90, line 28: This derived type name has not been declared.   [MODEL_T]
  TYPE(Model_t) :: Model
-------^
fortcom: Error: Poisson.f90, line 30: A kind type parameter must be a compile-time constant.   [DP]
  REAL(KIND=dp) :: dt
------------^
fortcom: Error: Poisson.f90, line 36: This derived type name has not been declared.   [ELEMENT_T]
  TYPE(Element_t),POINTER :: Element
-------^
fortcom: Error: Poisson.f90, line 38: A kind type parameter must be a compile-time constant.   [DP]
  REAL(KIND=dp) :: Norm
------------^
fortcom: Error: Poisson.f90, line 41: This derived type name has not been declared.   [VALUELIST_T]
  TYPE(ValueList_t), POINTER :: BodyForce
-------^
fortcom: Error: Poisson.f90, line 42: A kind type parameter must be a compile-time constant.   [DP]
  REAL(KIND=dp), ALLOCATABLE :: STIFF(:,:), LOAD(:), FORCE(:)
------------^
fortcom: Info: Poisson.f90, line 2: DLL IMPORT/EXPORT is not supported on this platform.   [DLLEXPORT]
!DEC$ATTRIBUTES DLLEXPORT :: PoissonSolver
----------------^
fortcom: Error: Poisson.f90, line 91: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: STIFF(:,:), FORCE(:), LOAD(:)
--------------^
fortcom: Error: Poisson.f90, line 93: This derived type name has not been declared.   [ELEMENT_T]
    TYPE(Element_t), POINTER :: Element
---------^
fortcom: Error: Poisson.f90, line 95: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: Basis(nd),dBasisdx(nd,3),ddBasisddx(nd,3,3),DetJ,LoadAtIP
--------------^
fortcom: Error: Poisson.f90, line 98: This derived type name has not been declared.   [GAUSSINTEGRATIONPOINTS_T]
    TYPE(GaussIntegrationPoints_t) :: IP
---------^
fortcom: Error: Poisson.f90, line 100: This derived type name has not been declared.   [NODES_T]
    TYPE(Nodes_t) :: Nodes
---------^
fortcom: Error: Poisson.f90, line 89: This name does not have a type, and must have an explicit type.   [ELEMENT]
  SUBROUTINE LocalMatrix(  STIFF, FORCE, LOAD, Element, n, nd )
-----------------------------------------------^
fortcom: Error: Poisson.f90, line 133: Error in opening the Library module file.   [LUDECOMPOSITION]
    USE LUDecomposition
--------^
fortcom: Error: Poisson.f90, line 135: A kind type parameter must be a compile-time constant.   [DP]
    REAL(KIND=dp) :: K(:,:),F(:),Kbb(Nb,Nb), &
--------------^
fortcom: Error: Poisson.f90, line 50: This name does not have a type, and must have an explicit type.   [SOLVER]
     N = Solver % Mesh % MaxElementDOFs  ! just big enough for elemental arrays
---------^
fortcom: Error: Poisson.f90, line 50: This is not a field name that is defined in the encompassing structure.   [MESH]
     N = Solver % Mesh % MaxElementDOFs  ! just big enough for elemental arrays
------------------^
fortcom: Error: Poisson.f90, line 61: This is not a field name that is defined in the encompassing structure.   [NUMBEROFACTIVEELEMENTS]
   DO t=1,Solver % NumberOfActiveElements
-------------------^
fortcom: Error: Poisson.f90, line 62: This name does not have a type, and must have an explicit type.   [ELEMENT]
      Element => GetActiveElement(t)
------^
fortcom: Error: Poisson.f90, line 62: This name does not have a type, and must have an explicit type.   [GETACTIVEELEMENT]
      Element => GetActiveElement(t)
-----------------^
fortcom: Error: Poisson.f90, line 62: When the target is an expression it must deliver a pointer result.   [GETACTIVEELEMENT]
      Element => GetActiveElement(t)
-----------------^
fortcom: Error: Poisson.f90, line 63: This name does not have a type, and must have an explicit type.   [GETELEMENTNOFNODES]
      n  = GetElementNOFNodes()
-----------^
fortcom: Error: Poisson.f90, line 64: This name does not have a type, and must have an explicit type.   [GETELEMENTNOFDOFS]
      nd = GetElementNOFDOFs()
-----------^
fortcom: Error: Poisson.f90, line 65: This name does not have a type, and must have an explicit type.   [GETELEMENTNOFBDOFS]
      nb = GetElementNOFBDOFs()
-----------^
fortcom: Error: Poisson.f90, line 68: This name does not have a type, and must have an explicit type.   [BODYFORCE]
      BodyForce => GetBodyForce()
------^
fortcom: Error: Poisson.f90, line 68: This name does not have a type, and must have an explicit type.   [GETBODYFORCE]
      BodyForce => GetBodyForce()
-------------------^
fortcom: Error: Poisson.f90, line 68: When the target is an expression it must deliver a pointer result.   [GETBODYFORCE]
      BodyForce => GetBodyForce()
-------------------^
fortcom: Error: Poisson.f90, line 70: This name does not have a type, and must have an explicit type.   [GETREAL]
         Load(1:n) = GetReal( BodyForce, 'Source', Found )
---------------------^
fortcom: Error: Poisson.f90, line 84: This name does not have a type, and must have an explicit type.   [DEFAULTSOLVE]
   Norm = DefaultSolve()
----------^
fortcom: Severe: Too many errors, exiting
compilation aborted for Poisson.f90 (code 1)
make: *** [run] Error 1
