#*******************************************************************************
#*
#*       ELMER, A Computational Fluid Dynamics Program.
#*
#*       Copyright 1st April 1996 - , Center for Scientific Computing,
#*                                    Finland.
#*
#*       All rights reserved. No part of this program may be used,
#*       reproduced or transmitted in any form or by any means
#*       without the written permission of CSC.
#*
#*******************************************************************************

#*******************************************************************************
#*
#* 
#*
#*******************************************************************************
#*
#*                     Author:       Juha Ruokolainen
#*
#*                    Address: Center for Scientific Computing
#*                                Tietotie 6, P.O. BOX 405
#*                                  02101 Espoo, Finland
#*                                  Tel. +358 0 457 2723
#*                                Telefax: +358 0 457 2302
#*                              EMail: Juha.Ruokolainen@csc.fi
#*
#*                       Date: 26 Sep 1995
#*
#*                Modified by:
#*
#*       Date of modification:
#*
#*******************************************************************************
LIB	    = libfem.a
MPI        = MPI_STUBS

include make.bin
all:	$(MPI) $(LIB) $(SOLVER) $(BINARIES) $(BINARIES_ODD)

TMPDIR  = /tmp/
LIBDIR	= $(ELMER_PREFIX)/lib
BINDIR	= $(ELMER_PREFIX)/bin
INCLDIR	= $(ELMER_PREFIX)/include

OBJ_EXT	=	.o
include make.inc

#F90	=	f90 -v -I. -p. -g -YEXT_NAMES=LCS -YEXT_SFX=_ # -YDEALLOC=ALL
F90	=	f90 -v -I. -O -YEXT_NAMES=LCS -YEXT_SFX=_  -YDEALLOC=ALL
F77	=	f90 -g -I. -YEXT_NAMES=LCS -YEXT_SFX=_ -YDEALLOC=ALL
CC	=	cc -I. -O -DLINUX_PC

RM	=	/bin/rm
CP	=	/bin/cp
CPP	=	/lib/cpp -P -C -DLINUX_PC -DUSE_ARPACK -DUSE_SPARSE -DCYLSYM -DFULL_INDUCTION

LD	=	ld

.SUFFIXES: .f90

.f90.o:
	$(CPP) -I. -DDLLEXPORT="!"  $< > $(TMPDIR)/$<
	$(F90) -c  $(TMPDIR)/$<
	ar r $(LIB) $@
#$(RM) $(TMPDIR)/$<

.f.o:
	$(CPP) -I. -DDLLEXPORT="!" $< > $(TMPDIR)/$<
	$(F77) -c $(TMPDIR)/$<
	$(RM) $(TMPDIR)/$<
	ar r $(LIB) $@

.c.o:
	$(CC) -c -O  $<
	ar r $(LIB) $@

$(MPI):	mpi_stubs.o mpif_linux.h
	$(CP) mpif_linux.h mpif.h

$(LIB):	$(OBJS) elements.def SOLVER.KEYWORDS
	$(CP) libfem.a $(LIBDIR)
	$(CP) elements.def $(LIBDIR)
	$(CP) SOLVER.KEYWORDS $(LIBDIR)

$(SOLVER): $(OBJS) $(LIB) Solver.o
	$(LD) -O -export_dynamic -shared -v -o libSolver.so  ElmerSolver.o      \
		-L. -L$(LIBDIR) -lfem -lhuti -lsparse -leioF -lmatc
	$(F90)  -O -o Solver Solver.o -L. -lSolver -L$(LIBDIR)                   \
		$(LIBDIR)/fxstat.o $(LIBDIR)/xstat.o                         \
		-larpack -llapack -lblas -ldl -lelf -lg2c -lm -lc            \
		-L/usr/lib/gcc-lib/i386-redhat-linux/egcs-2.91.66            \
		-L/usr/i386-redhat-linux/lib -ldl -lelf -lg2c -lstdc++ -lm -lgcc -lc
	$(CP) *.mod $(INCLDIR)
	chmod 660 $(INCLDIR)/*.mod
	$(CP) libSolver.so $(LIBDIR)
	$(CP) $(SOLVER) $(BINDIR)
	chmod 770 $(BINDIR)/$(SOLVER) $(LIBDIR)/libSolver.so


Solver.o: Solver.f90 $(OBJS)
	$(F90) -c -O Solver.f90

$(RESULT): $(OBJS) $(LIB) $(RESULT).o
	$(F90) -O -o $(RESULT) $(RESULT).o -L. -lSolver -L$(LIBDIR)                   \
		$(LIBDIR)/fxstat.o $(LIBDIR)/xstat.o                         \
		-larpack -llapack -lblas -ldl -lelf -lg2c -lm -lc            \
		-L/usr/lib/gcc-lib/i386-redhat-linux/egcs-2.91.66            \
		-L/usr/i386-redhat-linux/lib -ldl -lelf -lg2c -lstdc++ -lm -lgcc -lc
	$(CP) $(RESULT) $(BINDIR)
	chmod 770 $(BINDIR)/$(RESULT)

ResultToResult.o: ResultToResult.f90 $(OBJS)
	$(CPP) -I. -DDLLEXPORT="!"  $< > $(TMPDIR)/$<
	$(F90) -c  $(TMPDIR)/$<


$(BINARIES): $(OBJS)
	for p in $(BINARIES); do \
	    $(F90) -c $${p}.f90; \
	    $(LD) -shared -o $${p} $${p}.f90 -L$(LIBDIR) -lSolver -L$(ABSOFT)/lib -lf77math; \
	    $(CP) $${p} $(BINDIR); \
	done;

$(REYNOLDS):	$(REYNOLDS).f90 $(OBJS)
	$(F90) -c ReynoldsUtilities.f90
	$(F90) -c $(REYNOLDS).f90
	$(LD) -shared -o $(REYNOLDS) $(REYNOLDS).o ReynoldsUtilities.o -L$(LIBDIR) -lSolver -L$(ABSOFT)/lib -lf77math
	$(CP) $(REYNOLDS) $(BINDIR)

$(SC2ELMER):	$(SC2ELMER).c $(OBJS)
	$(CC) -o $(SC2ELMER) $(SC2ELMER).c -lm
	$(CP) $(SC2ELMER) $(BINDIR)

$(HLMHLTZ_BEM): $(HLMHLTZ_BEM).f90 $(OBJS)
	$(CPP) -I. -DDLLEXPORT="!"  $(HLMHLTZ_BEM).f90 > $(TMPDIR)/$(HLMHLTZ_BEM).f90
	$(F90) -c $(TMPDIR)/$(HLMHLTZ_BEM).f90
	$(LD) -shared -o $(HLMHLTZ_BEM) $(HLMHLTZ_BEM).o solve_cmplx.o -L$(LIBDIR) -lSolver -L$(ABSOFT)/lib -lf77math
	$(CP) $(HLMHLTZ_BEM) $(BINDIR)

$(POISSON_BEM):	$(POISSON_BEM).f90 $(OBJS)
	$(CPP) -I. -DDLLEXPORT="!"  $< > $(TMPDIR)/$<
	$(F90)  -c $(TMPDIR)/$(POISSON_BEM).f90
	$(LD) -shared -o $(POISSON_BEM) $(POISSON_BEM).o solve_real.o -L$(LIBDIR) -lSolver -L$(ABSOFT)/lib -lf77math
	$(CP) $(POISSON_BEM) $(BINDIR)

clean:
	$(RM) $(ALL) *.o *.mod
