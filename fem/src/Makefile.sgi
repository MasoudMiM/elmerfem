#*******************************************************************************
#*
#*       ELMER, A Computational Fluid Dynamics Program.
#*
#*       Copyright 1st April 1996 - , Center for Scientific Computing,
#*                                    Finland.
#*
#*       All rights reserved. No part of this program may be used,
#*       reproduced or transmitted in any form or by any means
#*       without the written permission of CSC.
#*
#*******************************************************************************

#*******************************************************************************
#*
#* 
#*
#*******************************************************************************
#*
#*                     Author:       Juha Ruokolainen
#*
#*                    Address: Center for Scientific Computing
#*                                Tietotie 6, P.O. BOX 405
#*                                  02101 Espoo, Finland
#*                                  Tel. +358 0 457 2723
#*                                Telefax: +358 0 457 2302
#*                              EMail: Juha.Ruokolainen@csc.fi
#*
#*                       Date: 26 Sep 1995
#*
#*                Modified by:
#*
#*       Date of modification:
#*
#*******************************************************************************
LIB	      = libfem.a
include make.bin
all:	$(LIB) $(SOLVER) $(BINARIES) $(BINARIES_ODD)
 
ELMER_PREFIX = $(ELMER_HOME)
LIBDIR	= $(ELMER_PREFIX)/lib
BINDIR	= $(ELMER_PREFIX)/bin
INCLDIR = $(ELMER_PREFIX)/include

OBJ_EXT	=	.o
include	make.inc

#F90	=	f90 -cpp -DSGI64 -I. -O0 -C \
#                  -DEBUG:conform_check=yes -DEBUG:div_check=3 \
#                -DEBUG=trap_uninitialized=yes -DEBUG:verbose_runtime
F90	=	f90 -cpp -DSGI64 -I. -O2 -OPT:Olimit=0
F77     =       f77 -DSGI64 -O2 -cpp -I.
CC      =       cc  -DSGI64 -I. -O

RM	=	/bin/rm
CP	=	/bin/cp
CPP	=	/usr/lib/cpp -C -DSGI64 -DUSE_ARPACK -DUSE_SPARSE -DCYLSYM \
                  -DFULL_INDUCTION

.SUFFIXES: .f90

.f90.o:
	$(CPP) -I. -DDLLEXPORT="!" $< > $(TMPDIR)/$<
	$(F90) -c  $(TMPDIR)/$<
	$(RM) $(TMPDIR)/$<
	ar r $(LIB) $@

.f.o:
	$(CPP) -I. -DDLLEXPORT="!" $< > $(TMPDIR)/$<
	$(F77) -c $(TMPDIR)/$<
	ar r $(LIB) $@

.c.o:
	$(CC) -c -O  $<
	ar r $(LIB) $@

$(LIB):	$(OBJS) elements.def SOLVER.KEYWORDS


$(SOLVER): $(OBJS) Solver.o
	f90  -v -o $@  Solver.o -L. -L$(LIBDIR) -lfem  \
	-lhuti -lsparse -lparpack -larpack -lscs -leioF -lhuti -lfem -lmatc -lm -lmpi -lm -lc -lC

Solver.o: Solver.f90 $(OBJS)
	$(F90) -c Solver.f90

$(RESULT): $(OBJS) ResultToResult.o
	f90  -v -o $@  ResultToResult.o -L. -L$(LIBDIR) -lfem  \
	-lhuti -lsparse -lparpack -larpack -lscs -leioF -lhuti -lfem -lmatc -lm -lmpi -lm -lc -lC

ResultToResult.o: ResultToResult.f90 $(OBJS)
	$(F90) -c ResultToResult.f90


$(BINARIES): $(OBJS)
	for p in $(BINARIES); do \
	    $(F90) -shared -o $${p} $${p}.f90; \
	done;

$(HELMHOLTZ_BEM): $(HELMHOLTZ_BEM).f90 $(OBJS)
	$(F90) -shared -o $(HELMHOLTZ_BEM) $(HELMHOLTZ_BEM).f90 solve_cmplx.f

$(POISSON_BEM): $(POISSON_BEM).f90 $(OBJS)
	$(F90) -shared -o $(POISSON_BEM) $(POISSON_BEM).f90 solve_real.f

$(SC2ELMER): $(SC2ELMER).c $(OBJS)
	$(CC)  -o $(SC2ELMER) $(SC2ELMER).c -lm

$(MEMREYNO): $(MEMREYNO).f90 $(OBJS)
	$(F90) -c MEMUtilities.f90
	$(F90) -shared -o $(MEMREYNO) $(MEMREYNO).f90 MEMUtilities.o

$(MEMELSTAT): $(MEMELSTAT).f90 $(OBJS)
	$(F90) -c MEMUtilities.f90
	$(F90) -shared -o $(MEMELSTAT) $(MEMELSTAT).f90 MEMUtilities.o

install:
	$(MAKE) -f Makefile.sgi
	$(CP) $(SOLVER)		$(INSTALLDIR)/bin/
	$(CP) $(BINARIES)	$(INSTALLDIR)/bin/
	$(CP) $(BINARIES_ODD)	$(INSTALLDIR)/bin/
	$(CP) libfem.a		$(INSTALLDIR)/lib/
	$(CP) elements.def	$(INSTALLDIR)/lib/
	$(CP) SOLVER.KEYWORDS	$(INSTALLDIR)/lib/
	$(CP) *.mod		$(INSTALLDIR)/include/

clean:
	/bin/rm $(ALL) *.o *.mod
