# Makefile.in generated by automake 1.9.5 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SOURCES = $(SC2Elmer_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/elmer
pkglibdir = $(libdir)/elmer
pkgincludedir = $(includedir)/elmer
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/make.bin $(srcdir)/make.inc
bin_PROGRAMS = SC2Elmer$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acx_mpi.m4 \
	$(top_srcdir)/acx_blas.m4 $(top_srcdir)/acx_lapack.m4 \
	$(top_srcdir)/acx_elmer.m4 $(top_srcdir)/acx_elmer.m4 \
	$(top_srcdir)/acx_lapack.m4 $(top_srcdir)/acx_blas.m4 \
	$(top_srcdir)/acx_mpi.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_SC2Elmer_OBJECTS = SC2Elmer.$(OBJEXT)
SC2Elmer_OBJECTS = $(am_SC2Elmer_OBJECTS)
SC2Elmer_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(SC2Elmer_SOURCES)
DIST_SOURCES = $(SC2Elmer_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/vierinen/src/newelmer/fem/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/vierinen/src/newelmer/fem/missing --run tar
AR = ar
ARFLAGS = rc
ARPACK_LIBS = arpack/libarpack.a
AUTOCONF = ${SHELL} /home/vierinen/src/newelmer/fem/missing --run autoconf
AUTOHEADER = ${SHELL} /home/vierinen/src/newelmer/fem/missing --run autoheader
AUTOMAKE = ${SHELL} /home/vierinen/src/newelmer/fem/missing --run automake-1.9
AWK = gawk
B64FLAGS = 
BLAS_LIBS = -lblas
CC = gcc
CCC = 
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2  -I/tmp/elmer/g95/include -fPIC
CP = cp
CPICFLAG = -fPIC
CPP = cpp
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2  -fPIC
CXXPICFLAG = -fPIC
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLFCN_DIR = 
DL_LD = $(SH_LD)
DL_LDFLAGS = $(SH_LDFLAGS)
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EIOF_LIBS = -leiof
EXEEXT = 
EXTRA_LIBS = 
F77 = g77
FC = g95
FCFLAGS = -g  -I. -I/tmp/elmer/g95/include -fPIC
FCLIBS =  -L/home/vierinen/src/g95-install/bin/../lib/gcc-lib/i686-pc-linux-gnu/4.0.0/ -L/home/vierinen/src/g95-install/bin/../lib/gcc-lib/i686-pc-linux-gnu/4.0.0 -L/lib// -L/home/vierinen/src/g95-install/bin/../lib/gcc-lib/i686-pc-linux-gnu/4.0.0/// -L/usr/lib// -lf95 -lm
FCPPFLAGS = -traditional-cpp -C -P -I. -I/tmp/elmer/g95/include -DDLLEXPORT="!"  -DCYLSYM -DFULL_INDUCTION -DUSE_ARPACK
FFLAGS = -g -O2  -fPIC
FLIBS =  -L/usr/lib/gcc-lib/i386-redhat-linux/3.2.2 -L/usr/lib/gcc-lib/i386-redhat-linux/3.2.2/../../.. -lfrtbegin -lg2c -lm -lgcc_s
FPICFLAG = -fPIC
GREP = /bin/grep
HUTI_LIBS = -lhuti
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LAPACK_LIBS = -llapack
LDFLAGS = 
LIBEXT = a
LIBOBJS = 
LIBS = arpack/libarpack.a  /home/vierinen/lib/libumfpack.a /home/vierinen/lib/libamd.a -lhuti -lmatc -leiof -ldl -lstdc++  -L/tmp/elmer/g95/lib  -llapack -lblas  -L/home/vierinen/src/g95-install/bin/../lib/gcc-lib/i686-pc-linux-gnu/4.0.0/ -L/home/vierinen/src/g95-install/bin/../lib/gcc-lib/i686-pc-linux-gnu/4.0.0 -L/lib// -L/home/vierinen/src/g95-install/bin/../lib/gcc-lib/i686-pc-linux-gnu/4.0.0/// -L/usr/lib// -lf95 -lm  -L/usr/lib/gcc-lib/i386-redhat-linux/3.2.2 -L/usr/lib/gcc-lib/i386-redhat-linux/3.2.2/../../.. -lfrtbegin -lg2c -lm -lgcc_s
LIBSOLVER_DEPS = -lstdc++  -L/tmp/elmer/g95/lib
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/vierinen/src/newelmer/fem/missing --run makeinfo
MATC_LIBS = -lmatc
MKDIR = mkdir -p
MKOCTFILE_DL_LDFLAGS = -shared -Wl,-Bsymbolic
MPICC = 
MPICXX = 
MPIF77 = 
MPIF90 = 
MPIFC = 
MPILIBS = 
MV = mv
NO_OCT_FILE_STRIP = false
OBJEXT = o
PACKAGE = elmer
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PARPACK_LIBS = 
PATH_SEPARATOR = :
RANLIB = ranlib
RLD_FLAG = -Wl,-rpath -Wl,$(octlibdir)
RM = rm -f
SET_MAKE = 
SHELL = /bin/sh
SHLBIN = 
SHLBIN_VER = $(SHLBIN).$(version)
SHLEXT = so
SHLEXT_VER = $(SHLEXT).$(version)
SHLLIB = $(SHLEXT)
SHLLIB_VER = $(SHLLIB).$(version)
SHLLINKEXT = 
SH_LD = $(CXX)
SH_LD2 = g95
SH_LDFLAGS = -shared
SH_LDTOFLAGS = 
SONAME_FLAGS = -Wl,-soname -Wl,$@
STRIP = 
TEMPLATE_AR = $(AR)
TEMPLATE_ARFLAGS = rc
TRADITIONAL_CPP = yes
UMFPACK_LIBS = /home/vierinen/lib/libumfpack.a /home/vierinen/lib/libamd.a
USE_MPI_FALSE = 
USE_MPI_TRUE = #
VERSION = 1.0.0
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = g77
ac_ct_FC = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
canonical_host_type = i686-pc-linux-gnu
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/vierinen/src/newelmer/fem/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
library_path_var = LD_LIBRARY_PATH
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /tmp/elmer/g95
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
SUBDIRS = arpack parpack view3d viewaxis

#*******************************************************************************
# Elmer Makefile.in 
#
# 1. build objects using dependencies from make.inc.
# 2. create libsolver.so using objects.
# 3. build individual solvers as dynamically linked libraries.
# 
# mpi_stubs, solver, binaries, odd binaries 
# 
# LIB	   = libfem.a
#
# make ext variables look better in makefile-mode than autoconf replacements
OBJ_EXT = .o
SHL_EXT = .so
LIB_EXT = .a
EXE_EXT = 
SOLVER = ElmerSolver
ADVDIFF = AdvectionDiffusion$(SHL_EXT)
STATMAG = StatMagSolve$(SHL_EXT)
STATELEC = StatElecSolve$(SHL_EXT)
STATCUR = StatCurrentSolve$(SHL_EXT)
ELASTIC = ElasticSolve$(SHL_EXT)
FDIFF = FDiffusion$(SHL_EXT) 
FDIFF3D = FDiffusion3D$(SHL_EXT)
HELMHOLTZ = HelmholtzSolve$(SHL_EXT)
ACOUSTICS = Acoustics$(SHL_EXT)
DH = DissipativeHelmholtz$(SHL_EXT)
IRROTVEL = IrrotationalVelocity$(SHL_EXT)
SHEARWAVE = ShearWave$(SHL_EXT)
CHANGERATE = RateOfChange$(SHL_EXT)
TRANSPORTEQ = TransportEquation$(SHL_EXT)
DCRCOMPLEX = DCRComplexSolve$(SHL_EXT)
FREERED = FreeSurfaceReduced$(SHL_EXT)
SAVEDATA = SaveData$(SHL_EXT)
RIGIDBODY = RigidBodyReduction$(SHL_EXT)
PERIODIC = EliminatePeriodic$(SHL_EXT)
DIRICHLET = EliminateDirichlet$(SHL_EXT)
FORCE = FluidicForce$(SHL_EXT)
ELECFORCE = ElectricForce$(SHL_EXT)
INPUT = ReloadInput$(SHL_EXT)
ARTIF = ArtificialCompressibility$(SHL_EXT)
POISSON_BEM = PoissonBEM$(SHL_EXT)
HELMHOLTZ_BEM = HelmholtzBEM$(SHL_EXT)
SC2ELMER = SC2Elmer$(EXE_EXT)
FREESURF = FreeSurfaceSolver$(SHL_EXT)
SMITC = Smitc$(SHL_EXT)
STREAM = StreamSolver$(SHL_EXT)
KE = KESolver$(SHL_EXT)
MEMREYNO = MEMReynolds$(SHL_EXT)
MEMELSTAT = MEMStatElecReduced$(SHL_EXT)
MEMLUMP = MEMLumping$(SHL_EXT)
PHASECHANGE = PhaseChange$(SHL_EXT)
ELECTROKIN = Electrokinetics$(SHL_EXT)
STRESS = StressSolve$(SHL_EXT)
ENERGYRELEASE = EnergyRelease$(SHL_EXT)
POISBOLTZ = PoissonBoltzmannSolve$(SHL_EXT)

# 
BINARIES_ODD = $(RESULT) $(HELMHOLTZ_BEM) $(SC2ELMER)  \
	$(MEMREYNO) $(MEMELSTAT) $(POISSON_BEM)

BINARIES = $(ADVDIFF) $(STATMAG) $(STATELEC) $(STATCUR) $(ELASTIC) $(HELMHOLTZ)    \
	$(ACOUSTICS) $(DH) $(IRROTVEL) $(SHEARWAVE) $(CHANGERATE) $(TRANSPORTEQ)   \
	$(FDIFF) $(FDIFF3D) $(SAVEDATA) $(INPUT) $(FREERED) $(ARTIF) $(DCRCOMPLEX) \
	$(RIGIDBODY) $(DIRICHLET) $(PERIODIC) $(FORCE) $(FREESURF) $(ELECFORCE)    \
	$(SMITC) $(STREAM) $(KE) $(MEMLUMP) $(PHASECHANGE) $(POISBOLTZ) $(ELECTROKIN) \
	$(STRESS) $(ENERGYRELEASE) 

OBJS = mpi_stubs$(OBJ_EXT) 				\
		NavierStokes$(OBJ_EXT)				\
		NavierStokesGeneral$(OBJ_EXT)	     		\
		NavierStokesCylindrical$(OBJ_EXT)		\
		Lists$(OBJ_EXT)					\
		DiffuseConvectiveAnisotropic$(OBJ_EXT)		\
		DiffuseConvectiveGeneralAnisotropic$(OBJ_EXT)	\
		PElementMaps$(OBJ_EXT)				\
		PElementBase$(OBJ_EXT)				\
		ElementDescription$(OBJ_EXT)			\
		Integration$(OBJ_EXT)				\
		ModelDescription$(OBJ_EXT)			\
		GeneralUtils$(OBJ_EXT)				\
		Stress$(OBJ_EXT)				\
		StressGeneral$(OBJ_EXT)				\
		LinearAlgebra$(OBJ_EXT)		 	        \
		CoordinateSystems$(OBJ_EXT)			\
		CRSMatrix$(OBJ_EXT)				\
		BandMatrix$(OBJ_EXT)				\
		BandwidthOptimize$(OBJ_EXT)			\
		MaterialModels$(OBJ_EXT)			\
		FlowSolve$(OBJ_EXT)				\
		HeatSolve$(OBJ_EXT)				\
		StressSolve$(OBJ_EXT)				\
		DirectSolve$(OBJ_EXT)				\
		IterSolve$(OBJ_EXT)				\
		TimeIntegrate$(OBJ_EXT)				\
		Types$(OBJ_EXT)					\
		SolveBand$(OBJ_EXT)				\
		ElementUtils$(OBJ_EXT)				\
		Radiation$(OBJ_EXT)				\
		Load$(OBJ_EXT)					\
		Differentials$(OBJ_EXT)				\
		FreeSurface$(OBJ_EXT)				\
		Maxwell$(OBJ_EXT)				\
		MaxwellAxiS$(OBJ_EXT)				\
		MaxwellGeneral$(OBJ_EXT)			\
		MagneticSolve$(OBJ_EXT)				\
		Walls$(OBJ_EXT)					\
		SolverUtils$(OBJ_EXT)				\
		SolveSBand$(OBJ_EXT)				\
		CPUTime$(OBJ_EXT)				\
		Interpolation$(OBJ_EXT)				\
		IMeshToMesh$(OBJ_EXT)				\
		MainUtils$(OBJ_EXT)				\
		MeshSolve$(OBJ_EXT)				\
		Adaptive$(OBJ_EXT)				\
		EigenSolve$(OBJ_EXT)				\
		HashTable$(OBJ_EXT)				\
		MeshUtils$(OBJ_EXT)				\
		SParIterGlobals$(OBJ_EXT)			\
		SParIterComm$(OBJ_EXT)				\
		SParIterPrecond$(OBJ_EXT)			\
		SParIterSolver$(OBJ_EXT)			\
		Messages$(OBJ_EXT)				\
		Multigrid$(OBJ_EXT)				\
		ParallelUtils$(OBJ_EXT)                         \
                ParallelEigenSolve$(OBJ_EXT)			\
		solve_cmplx$(OBJ_EXT)				\
		solve_real$(OBJ_EXT)				\
		MGPrec$(OBJ_EXT)				\
		DefUtils$(OBJ_EXT)				\
		LUDecomposition$(OBJ_EXT) 			\
	        RadiationFactors$(OBJ_EXT)                      

SC2Elmer_SOURCES = SC2Elmer.c
all: all-recursive

.SUFFIXES:
.SUFFIXES: .o .so .c .f .f90 .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/make.bin $(srcdir)/make.inc $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
SC2Elmer$(EXEEXT): $(SC2Elmer_OBJECTS) $(SC2Elmer_DEPENDENCIES) 
	@rm -f SC2Elmer$(EXEEXT)
	$(LINK) $(SC2Elmer_LDFLAGS) $(SC2Elmer_OBJECTS) $(SC2Elmer_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/SC2Elmer.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS install-exec-local

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-generic clean-local \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-recursive \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am \
	install-exec-local install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am


# libfem$(LIB_EXT)
all:	 mpif.h libsolver$(SHL_EXT) ElmerSolver$(EXE_EXT) $(BINARIES) $(BINARIES_ODD) ViewFactors$(EXE_EXT) GebhardtFactors$(EXE_EXT)

#
#
#  Dependencies ... !
#
Types$(OBJ_EXT):				\
	Messages$(OBJ_EXT)

ElementDescription$(OBJ_EXT):			\
	Types$(OBJ_EXT)				\
	Lists$(OBJ_EXT)				\
	PElementBase$(OBJ_EXT)			\
	Integration$(OBJ_EXT)			\
	GeneralUtils$(OBJ_EXT)			\
	CoordinateSystems$(OBJ_EXT)		\
	LUDecomposition$(OBJ_EXT)               \
	LinearAlgebra$(OBJ_EXT)

PElementBase$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	PElementMaps$(OBJ_EXT)			

LUDecomposition$(OBJ_EXT):  			\
	Types$(OBJ_EXT)

Integration$(OBJ_EXT):				\
	Types$(OBJ_EXT)

CRSMatrix$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	GeneralUtils$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)

BandMatrix$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	GeneralUtils$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)

ModelDescription$(OBJ_EXT):			\
	Types$(OBJ_EXT)				\
	ElementDescription$(OBJ_EXT)		\
	HashTable$(OBJ_EXT)			\
	MeshUtils$(OBJ_EXT)			\
	Lists$(OBJ_EXT)

GeneralUtils$(OBJ_EXT):				\
	Types$(OBJ_EXT)

BandwidthOptimize$(OBJ_EXT):			\
	Types$(OBJ_EXT)				\
	Lists$(OBJ_EXT)				\
	ElementDescription$(OBJ_EXT)

ElementUtils$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	BandwidthOptimize$(OBJ_EXT)		\
	CRSMatrix$(OBJ_EXT)			\
	BandMatrix$(OBJ_EXT)			\
	Integration$(OBJ_EXT)			\
	Interpolation$(OBJ_EXT)			\
	SParIterGlobals$(OBJ_EXT)		\
	ElementDescription$(OBJ_EXT)

DiffuseConvectiveAnisotropic$(OBJ_EXT):		\
	Types$(OBJ_EXT)				\
	Integration$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	Differentials$(OBJ_EXT)			\
	GeneralUtils$(OBJ_EXT)

DiffuseConvectiveGeneralAnisotropic$(OBJ_EXT):	\
	Types$(OBJ_EXT)				\
	Integration$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	GeneralUtils$(OBJ_EXT)			\
	Differentials$(OBJ_EXT)			\
	CoordinateSystems$(OBJ_EXT)

NavierStokes$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	Integration$(OBJ_EXT)			\
	ElementUtils$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	MaterialModels$(OBJ_EXT)		\
	Differentials$(OBJ_EXT)			\
	GeneralUtils$(OBJ_EXT)

NavierStokes_C$(OBJ_EXT):			\
	Types$(OBJ_EXT)				\
	Integration$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	GeneralUtils$(OBJ_EXT)

NavierStokesGeneral$(OBJ_EXT):			\
	Types$(OBJ_EXT)				\
	Integration$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	GeneralUtils$(OBJ_EXT)			\
	Differentials$(OBJ_EXT)			\
	CoordinateSystems$(OBJ_EXT)

NavierStokesDiagonalMetric$(OBJ_EXT):		\
	Types$(OBJ_EXT)				\
	Integration$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	GeneralUtils$(OBJ_EXT)			\
	CoordinateSystems$(OBJ_EXT)

NavierStokesCylindrical$(OBJ_EXT):		\
	Types$(OBJ_EXT)				\
	Integration$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	GeneralUtils$(OBJ_EXT)			\
	Differentials$(OBJ_EXT)			\
	CoordinateSystems$(OBJ_EXT)

Maxwell$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	Integration$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	GeneralUtils$(OBJ_EXT)

MaxwellAxiS$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	Integration$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	GeneralUtils$(OBJ_EXT)

MaxwellGeneral$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	Integration$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	GeneralUtils$(OBJ_EXT)

Stress$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	Integration$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	GeneralUtils$(OBJ_EXT)

StressGeneral$(OBJ_EXT):			\
	Types$(OBJ_EXT)				\
	Integration$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	GeneralUtils$(OBJ_EXT)

FreeSurface$(OBJ_EXT):				\
	Differentials$(OBJ_EXT)			\
	IterSolve$(OBJ_EXT)			\
	ElementUtils$(OBJ_EXT)

FlowSolve$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	Adaptive$(OBJ_EXT)			\
	ElementUtils$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	TimeIntegrate$(OBJ_EXT)			\
	GeneralUtils$(OBJ_EXT)			\
	DefUtils$(OBJ_EXT)			\
	SolverUtils$(OBJ_EXT)			\
	CoordinateSystems$(OBJ_EXT)		\
	FreeSurface$(OBJ_EXT)			\
	Differentials$(OBJ_EXT)			\
	NavierStokes$(OBJ_EXT)			\
	NavierStokesGeneral$(OBJ_EXT)		\
	NavierStokesCylindrical$(OBJ_EXT)	\
	Lists$(OBJ_EXT)

HeatSolve$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	Adaptive$(OBJ_EXT)			\
	ElementUtils$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	TimeIntegrate$(OBJ_EXT)			\
	GeneralUtils$(OBJ_EXT)			\
	DefUtils$(OBJ_EXT)			\
	SolverUtils$(OBJ_EXT)			\
	Radiation$(OBJ_EXT)			\
	CoordinateSystems$(OBJ_EXT)		\
	DiffuseConvectiveAnisotropic$(OBJ_EXT)		\
	DiffuseConvectiveGeneralAnisotropic$(OBJ_EXT)	\
	Lists$(OBJ_EXT)

StressSolve$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	ElementUtils$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	TimeIntegrate$(OBJ_EXT)			\
	GeneralUtils$(OBJ_EXT)			\
	DefUtils$(OBJ_EXT)			\
	SolverUtils$(OBJ_EXT)			\
	CoordinateSystems$(OBJ_EXT)		\
	Stress$(OBJ_EXT)			\
	StressGeneral$(OBJ_EXT)			\
	Lists$(OBJ_EXT)

MeshSolve$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	ElementUtils$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	TimeIntegrate$(OBJ_EXT)			\
	GeneralUtils$(OBJ_EXT)			\
	DefUtils$(OBJ_EXT)			\
	SolverUtils$(OBJ_EXT)			\
	CoordinateSystems$(OBJ_EXT)		\
	Stress$(OBJ_EXT)			\
	Lists$(OBJ_EXT)

MagneticSolve$(OBJ_EXT):			\
	Types$(OBJ_EXT)				\
	ElementUtils$(OBJ_EXT)			\
	ElementDescription$(OBJ_EXT)		\
	TimeIntegrate$(OBJ_EXT)			\
	GeneralUtils$(OBJ_EXT)			\
	DefUtils$(OBJ_EXT)			\
	SolverUtils$(OBJ_EXT)			\
	CoordinateSystems$(OBJ_EXT)		\
	Maxwell$(OBJ_EXT)			\
	MaxwellAxiS$(OBJ_EXT)			\
	MaxwellGeneral$(OBJ_EXT)		\
	Lists$(OBJ_EXT)

DirectSolve$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	BandMatrix$(OBJ_EXT)			\
	CRSMatrix$(OBJ_EXT)

IterSolve$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	BandMatrix$(OBJ_EXT)			\
	CRSMatrix$(OBJ_EXT)

Multigrid$(OBJ_EXT):				\
	ParallelUtils$(OBJ_EXT)			\
	DirectSolve$(OBJ_EXT)

MGPrec$(OBJ_EXT):				\
	Multigrid$(OBJ_EXT)

EigenSolve$(OBJ_EXT):				\
	Multigrid$(OBJ_EXT)			\
	CRSMatrix$(OBJ_EXT)

ParallelEigenSolve$(OBJ_EXT):			\
	Multigrid$(OBJ_EXT)			\
	ParallelUtils$(OBJ_EXT)			\
	CRSMatrix$(OBJ_EXT)

SolverUtils$(OBJ_EXT):				\
	ElementUtils$(OBJ_EXT)			\
	TimeIntegrate$(OBJ_EXT)			\
	BandMatrix$(OBJ_EXT)			\
	IterSolve$(OBJ_EXT)			\
	EigenSolve$(OBJ_EXT)			\
	ParallelEigenSolve$(OBJ_EXT)		\
	Multigrid$(OBJ_EXT)			\
	MeshUtils$(OBJ_EXT)			\
	ParallelUtils$(OBJ_EXT)			\
	DirectSolve$(OBJ_EXT)

DefUtils$(OBJ_EXT):				\
	SolverUtils$(OBJ_EXT)

MaterialModels$(OBJ_EXT):			\
	Types$(OBJ_EXT)				\
        ModelDescription$(OBJ_EXT)		\
	ElementDescription$(OBJ_EXT)		\
	CoordinateSystems$(OBJ_EXT)

Lists$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	GeneralUtils$(OBJ_EXT)

IMeshToMesh$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	Interpolation$(OBJ_EXT)

Interpolation$(OBJ_EXT):			\
	ElementDescription$(OBJ_EXT)		\
	Integration$(OBJ_EXT)

ElmerSolver$(OBJ_EXT):				\
	MainUtils$(OBJ_EXT)

Adaptive$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	ElementDescription$(OBJ_EXT)		\
	Radiation$(OBJ_EXT)			\
	SolverUtils$(OBJ_EXT)			\
	Lists$(OBJ_EXT)

MainUtils$(OBJ_EXT):				\
	ModelDescription$(OBJ_EXT)		\
	SolverUtils$(OBJ_EXT)

Radiation$(OBJ_EXT):				\
	Types$(OBJ_EXT)				\
	ElementUtils$(OBJ_EXT)			\
	CoordinateSystems$(OBJ_EXT)

HashTable$(OBJ_EXT):				\
	Lists$(OBJ_EXT)

MeshUtils$(OBJ_EXT):				\
	ElementUtils$(OBJ_EXT)			\
	ParallelUtils$(OBJ_EXT)

ParallelUtils$(OBJ_EXT):			\
	SParIterSolver$(OBJ_EXT)

SParIterSolver$(OBJ_EXT):			\
	SParIterPrecond$(OBJ_EXT)		\
	SParIterComm$(OBJ_EXT)

SParIterPrecond$(OBJ_EXT):			\
	SParIterComm$(OBJ_EXT)

SParIterComm$(OBJ_EXT):				\
	CRSMatrix$(OBJ_EXT)			\
	SParIterGlobals$(OBJ_EXT)

MEMReynolds$(SHL_EXT): \
	MEMUtilities$(OBJ_EXT)

MEMStatElecReduced$(SHL_EXT): \
	MEMUtilities$(OBJ_EXT)

SUFFIXES: .f90 .so

##########################
# Rules for building stuff
#
# a bit kludgy way to do the cpp, but hopefully portable enough
# 
.f90.o:
	cp $< $*.fpp
	cpp -traditional-cpp -C -P -I. -I/tmp/elmer/g95/include -DDLLEXPORT="!"  -DCYLSYM -DFULL_INDUCTION -DUSE_ARPACK $*.fpp > $*.F90
	g95 -g  -I. -I/tmp/elmer/g95/include -fPIC -c $*.F90

# a bit kludgy way to do the cpp, but hopefully portable enough
.f.o:
	cp $< $*.fpp
	cpp -traditional-cpp -C -P -I. -I/tmp/elmer/g95/include -DDLLEXPORT="!"  -DCYLSYM -DFULL_INDUCTION -DUSE_ARPACK $*.fpp > $*.FOR
	g77 -g -O2  -fPIC -c $*.FOR

# mpi stubs and load.c
#.c.o:
#	$(CC) -c -O  $<

# build seperate solvers as shared libs
.f90.so:
	cp $< $*.fpp
	cpp -traditional-cpp -C -P -I. -I/tmp/elmer/g95/include -DDLLEXPORT="!"  -DCYLSYM -DFULL_INDUCTION -DUSE_ARPACK $*.fpp > $*.F90
	g95 -g  -I. -I/tmp/elmer/g95/include -fPIC -c $*.F90
	g95 -shared   -Wl,-soname -Wl,$@ -o $@ $*$(OBJ_EXT)  -lsolver -L. 

###############################
# libsolver.so
#
libsolver$(SHL_EXT): ElmerSolver$(OBJ_EXT) $(OBJS) arpack parpack
	rm -f $@
	$(CXX) -shared  -Wl,-soname -Wl,$@ -o $@ ElmerSolver$(OBJ_EXT) $(OBJS) arpack/libarpack.a  /home/vierinen/lib/libumfpack.a /home/vierinen/lib/libamd.a -lhuti -lmatc -leiof -ldl -lstdc++  -L/tmp/elmer/g95/lib  -llapack -lblas  -L/home/vierinen/src/g95-install/bin/../lib/gcc-lib/i686-pc-linux-gnu/4.0.0/ -L/home/vierinen/src/g95-install/bin/../lib/gcc-lib/i686-pc-linux-gnu/4.0.0 -L/lib// -L/home/vierinen/src/g95-install/bin/../lib/gcc-lib/i686-pc-linux-gnu/4.0.0/// -L/usr/lib// -lf95 -lm  -L/usr/lib/gcc-lib/i386-redhat-linux/3.2.2 -L/usr/lib/gcc-lib/i386-redhat-linux/3.2.2/../../.. -lfrtbegin -lg2c -lm -lgcc_s -L. 

#########################
# The executables
#
ElmerSolver$(EXE_EXT): Solver$(OBJ_EXT) libsolver$(SHL_EXT)
	g95   -lsolver -o ElmerSolver$(EXE_EXT) -L. Solver$(OBJ_EXT) 

ViewFactors$(EXE_EXT): libsolver$(SHL_EXT) ViewFactors$(OBJ_EXT)
	g95   -lsolver -o ViewFactors$(EXE_EXT) -L. ViewFactors$(OBJ_EXT) viewaxis/libviewaxis.a view3d/libview3d.a  

GebhardtFactors$(EXE_EXT): libsolver$(SHL_EXT) GebhardtFactors$(OBJ_EXT)
	g95   -lsolver -o GebhardtFactors$(EXE_EXT) -L. GebhardtFactors$(OBJ_EXT) viewaxis/libviewaxis.a view3d/libview3d.a  

################################33
# Local installation rules
#
install-exec-local:
	@echo "Installing stuff to $(prefix),/tmp/elmer/g95"
	mkdir -p /tmp/elmer/g95/lib
	mkdir -p /tmp/elmer/g95/include
	mkdir -p /tmp/elmer/g95/bin
	cp ElmerSolver$(EXEEXT) /tmp/elmer/g95/bin
	cp ElmerSolver$(EXEEXT) /tmp/elmer/g95/bin/Solver$(EXEEXT)
	cp ViewFactors$(EXEEXT) /tmp/elmer/g95/bin
	cp GebhardtFactors$(EXEEXT) /tmp/elmer/g95/bin
	cp *$(SHL_EXT) /tmp/elmer/g95/lib
	cp *.mod /tmp/elmer/g95/include
	cp elements.def /tmp/elmer/g95/lib
	cp SOLVER.KEYWORDS /tmp/elmer/g95/lib

clean-local:
	$(RM) $(ALL) *.o *.mod *.F90 *.F *.fpp *~ *.a *.so \#*

#mpif.h:
#	cp mpif_stub.h mpif.h
mpif.h:

# static fem lib
# libfem$(LIB_EXT): $(OBJS)
#	rm -f $@
#	$(AR) rc $@ $(OBJS) 
#	ranlib $@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
