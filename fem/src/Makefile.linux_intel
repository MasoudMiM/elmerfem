#*******************************************************************************
#*
#*       ELMER, A Computational Fluid Dynamics Program.
#*
#*       Copyright 1st April 1996 - , Center for Scientific Computing,
#*                                    Finland.
#*
#*       All rights reserved. No part of this program may be used,
#*       reproduced or transmitted in any form or by any means
#*       without the written permission of CSC.
#*
#*******************************************************************************

#*******************************************************************************
#*
#* 
#*
#*******************************************************************************
#*
#*                     Author:       Juha Ruokolainen
#*
#*                    Address: Center for Scientific Computing
#*                                Tietotie 6, P.O. BOX 405
#*                                  02101 Espoo, Finland
#*                                  Tel. +358 0 457 2723
#*                                Telefax: +358 0 457 2302
#*                              EMail: Juha.Ruokolainen@csc.fi
#*
#*                       Date: 26 Sep 1995
#*
#*                Modified by:
#*
#*       Date of modification:
#*
#*******************************************************************************
LIB	= libfem.a
MPI	= MPI_STUBS

include make.bin
all:	$(MPI) $(LIB) $(SOLVER) $(BINARIES) $(BINARIES_ODD)

TMPDIR  = /tmp/jpr/
LIBDIR	= $(ELMER_PREFIX)/lib
BINDIR	= $(ELMER_PREFIX)/bin
INCLDIR	= $(ELMER_PREFIX)/include

OBJ_EXT	=	.o
include make.inc

#F90	=	ifc -fp -Vaxlib -g -I. -O0 # -C
F90	=	ifc -Vaxlib -I. -O
F77	=	ifc -Vaxlib -g -I. -O
CC	=	cc -I. -g

RM	=	/bin/rm
CP	=	/bin/cp
CPP	=	/lib/cpp -P -C -DLINUX_PC -DUSE_SPARSE -DCYLSYM -DFULL_INDUCTION -DUSE_ARPACK

LD	=	$(F90)

.SUFFIXES: .f90

.f90.o:
	$(CPP) -I. -DDLLEXPORT="!"  $< > $(TMPDIR)/$<
	$(F90) -c  $(TMPDIR)/$<
	ar r $(LIB) $@
	$(RM) $(TMPDIR)/$<

.f.o:
	$(CPP) -I. -DDLLEXPORT="!" $< > $(TMPDIR)/$<
	$(F77) -c $(TMPDIR)/$<
	$(RM) $(TMPDIR)/$<
	ar r $(LIB) $@

.c.o:
	$(CC) -c -O  $<
	ar r $(LIB) $@

$(MPI):	mpi_stubs.o mpif_linux.h
	$(CP) mpif_linux.h mpif.h

$(LIB):	$(OBJS) elements.def SOLVER.KEYWORDS
	$(CP) libfem.a $(LIBDIR)
	$(CP) elements.def $(LIBDIR)
	$(CP) SOLVER.KEYWORDS $(LIBDIR)

$(SOLVER): $(OBJS) $(LIB) Solver.o
	$(CC) -export_dynamic -shared -o libSolver.so ElmerSolver.o -L. -L$(LIBDIR) \
	-lfem -lhuti -lsparse -lumfpack -lamd -lmatc -leioF -lstdc++ -larpack -llapack3 -ldl -lblas -lg2c -lpthread
	$(F90) -o $(SOLVER) Solver.o -L. -lSolver -L$(LIBDIR) -L/usr/local/lib
	$(CP) *.mod $(INCLDIR)
	chmod 660 $(INCLDIR)/*.mod
	$(CP) libSolver.so $(LIBDIR)
	$(CP) ElmerSolver $(SOLVER) $(BINDIR)
	chmod 770 $(BINDIR)/$(SOLVER) $(LIBDIR)/libSolver.so


Solver.o: Solver.f90 $(OBJS)
	$(F90) -c -O Solver.f90

#FlowSolve.o: FlowSolve.f90
#	$(CPP) -I. -DDLLEXPORT="!"  $< > $(TMPDIR)/$<
#	$(F90) -c -O0 $(TMPDIR)/$<
#	ar r $(LIB) $@
#	$(RM) $(TMPDIR)/$<

$(RESULT): $(OBJS) $(LIB) $(RESULT).o
	$(F90) -o $(RESULT) $(RESULT).o -L. -lSolver -L/usr/local/lib
	$(CP) $(RESULT) $(BINDIR)
	chmod 770 $(BINDIR)/$(RESULT)

$(BINARIES): $(OBJS)
	for p in $(BINARIES); do \
	    $(F90) -nofor_main -shared -o $${p} $${p}.f90 -L$(LIBDIR) -lSolver; \
	    $(CP) $${p} $(BINDIR); \
	done;

ResultToResult.o: ResultToResult.f90 $(OBJS)
	$(CPP) -I. -DDLLEXPORT="!"  $< > $(TMPDIR)/$<
	$(F90) -c  $(TMPDIR)/$<

$(MEMREYNO):	$(MEMREYNO).f90 $(OBJS)
	$(F90) -c MEMUtilities.f90
	$(F90) -c $(MEMREYNO).f90
	$(LD) -nofor_main -shared -o $(MEMREYNO) $(MEMREYNO).o MEMUtilities.o -L$(LIBDIR) -lSolver
	$(CP) $(MEMREYNO) $(BINDIR)

$(MEMELSTAT):	$(MEMELSTAT).f90 $(OBJS)
	$(F90) -c MEMUtilities.f90
	$(F90) -c $(MEMELSTAT).f90
	$(LD) -nofor_main -shared -o $(MEMELSTAT) $(MEMELSTAT).o MEMUtilities.o -L$(LIBDIR) -lSolver
	$(CP) $(MEMELSTAT) $(BINDIR)

$(HELMHOLTZ_BEM): $(HELMHOLTZ_BEM).f90 $(OBJS)
	$(F90) -I. -cpp -nofor_main -shared -o $(HELMHOLTZ_BEM) $(HELMHOLTZ_BEM).f90 solve_cmplx.f -L$(LIBDIR) -lSolver -llapack3 -lblas3
	$(CP) $(HELMHOLTZ_BEM) $(BINDIR)

$(POISSON_BEM): $(POISSON_BEM).f90 $(OBJS)
	$(F90) -I. -cpp -nofor_main -shared -o $(POISSON_BEM) $(POISSON_BEM).f90 solve_real.f -L$(LIBDIR) -lSolver -llapack3 -lblas3
	$(CP) $(POISSON_BEM) $(BINDIR)

$(SC2ELMER): $(SC2ELMER).c
	$(CC) -o SC2Elmer SC2Elmer.c -lm
	$(CP) $(SC2ELMER) $(BINDIR)

clean:
	$(RM) $(ALL) *.o *.mod
