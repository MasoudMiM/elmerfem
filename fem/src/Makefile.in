# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AR = @AR@
ARFLAGS = @ARFLAGS@
ARPACK_LIBS = @ARPACK_LIBS@
AWK = @AWK@
B64FLAGS = @B64FLAGS@
BASIC_CPP = @BASIC_CPP@
BLAS_LIBS = @BLAS_LIBS@
BOURNE_SHELL = @BOURNE_SHELL@
CC = @CC@
CP = @CP@
CPICFLAG = @CPICFLAG@
CPP = @CPP@
CXX = @CXX@
CXXPICFLAG = @CXXPICFLAG@
DEPDIR = @DEPDIR@
DLFCN_DIR = @DLFCN_DIR@
DL_LD = @DL_LD@
DL_LDFLAGS = @DL_LDFLAGS@
EIOC_LIBS = @EIOC_LIBS@
EIOF_LIBS = @EIOF_LIBS@
EXTRA_LIBS = @EXTRA_LIBS@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCPPFLAGS = @FCPPFLAGS@
FLIBS = @FLIBS@
FPICFLAG = @FPICFLAG@
HUTI_LIBS = @HUTI_LIBS@
INCLUDE_MODULE_FLAG = @INCLUDE_MODULE_FLAG@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_LIBS = @LAPACK_LIBS@
LD_LIBRARY_PATH_VAR = @LD_LIBRARY_PATH_VAR@
LIBEXT = @LIBEXT@
LIBS = @LIBS@
LIBSOLVER_DEPS = @LIBSOLVER_DEPS@
MAINT = @MAINT@
MATC_LIBS = @MATC_LIBS@
MESHGEN2D_LIBS = @MESHGEN2D_LIBS@
MKDIR = @MKDIR@
MKOCTFILE_DL_LDFLAGS = @MKOCTFILE_DL_LDFLAGS@
MV = @MV@
NO_OCT_FILE_STRIP = @NO_OCT_FILE_STRIP@
PACKAGE = @PACKAGE@
PARPACK_LIBS = @PARPACK_LIBS@
RANLIB = @RANLIB@
RLD_FLAG = @RLD_FLAG@
RM = @RM@
SHLBIN = @SHLBIN@
SHLBIN_VER = @SHLBIN_VER@
SHLEXT = @SHLEXT@
SHLEXT_VER = @SHLEXT_VER@
SHLLIB = @SHLLIB@
SHLLIB_VER = @SHLLIB_VER@
SHLLINKEXT = @SHLLINKEXT@
SH_LD = @SH_LD@
SH_LD2 = @SH_LD2@
SH_LDFLAGS = @SH_LDFLAGS@
SH_LINKING_TO_FLAGS = @SH_LINKING_TO_FLAGS@
SOLVER_LIBS = @SOLVER_LIBS@
SONAME_FLAGS = @SONAME_FLAGS@
STRIP = @STRIP@
TCLTK_LIBS = @TCLTK_LIBS@
TEMPLATE_AR = @TEMPLATE_AR@
TEMPLATE_ARFLAGS = @TEMPLATE_ARFLAGS@
TESTS_FCFLAGS = @TESTS_FCFLAGS@
UMFPACK_LIBS = @UMFPACK_LIBS@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
canonical_host_type = @canonical_host_type@
install_sh = @install_sh@
lib_mpi = @lib_mpi@
library_path_var = @library_path_var@
mpi_dir = @mpi_dir@
mpi_inc_dir = @mpi_inc_dir@
mpi_lib_dir = @mpi_lib_dir@
mpirun_cmd = @mpirun_cmd@
SUBDIRS = elmergrid meshgen2d arpack parpack view3d viewaxis

#*******************************************************************************
# Elmer Makefile.in 
#
# 1. build objects using dependencies from make.inc.
# 2. create libsolver.so using objects.
# 3. build individual solvers as dynamically linked libraries.
# 
# mpi_stubs, solver, binaries, odd binaries 
# 
# LIB	   = libfem.a
#
# make ext variables look better in makefile-mode than autoconf replacements
OBJ_EXT = .$(OBJEXT)
SHL_EXT = .$(SHLEXT)
LIB_EXT = .$(LIBEXT)
EXE_EXT = $(EXEEXT)
SOLVER = ElmerSolver
ADVDIFF = AdvectionDiffusion$(SHL_EXT)
STATMAG = StatMagSolve$(SHL_EXT)
STATELEC = StatElecSolve$(SHL_EXT)
STATCUR = StatCurrentSolve$(SHL_EXT)
ELASTIC = ElasticSolve$(SHL_EXT)
FDIFF = FDiffusion$(SHL_EXT) 
FDIFF3D = FDiffusion3D$(SHL_EXT)
HELMHOLTZ = HelmholtzSolve$(SHL_EXT)
ACOUSTICS = Acoustics$(SHL_EXT)
DH = DissipativeHelmholtz$(SHL_EXT)
IRROTVEL = IrrotationalVelocity$(SHL_EXT)
SHEARWAVE = ShearWave$(SHL_EXT)
CHANGERATE = RateOfChange$(SHL_EXT)
TRANSPORTEQ = TransportEquation$(SHL_EXT)
DCRCOMPLEX = DCRComplexSolve$(SHL_EXT)
FREERED = FreeSurfaceReduced$(SHL_EXT)
SAVEDATA = SaveData$(SHL_EXT)
RIGIDBODY = RigidBodyReduction$(SHL_EXT)
PERIODIC = EliminatePeriodic$(SHL_EXT)
DIRICHLET = EliminateDirichlet$(SHL_EXT)
FORCE = FluidicForce$(SHL_EXT)
ELECFORCE = ElectricForce$(SHL_EXT)
INPUT = ReloadInput$(SHL_EXT)
ARTIF = ArtificialCompressibility$(SHL_EXT)
POISSON_BEM = PoissonBEM$(SHL_EXT)
HELMHOLTZ_BEM = HelmholtzBEM$(SHL_EXT)
SC2ELMER = SC2Elmer$(EXE_EXT)
FREESURF = FreeSurfaceSolver$(SHL_EXT)
SMITC = Smitc$(SHL_EXT)
STREAM = StreamSolver$(SHL_EXT)
KE = KESolver$(SHL_EXT)
MEMREYNO = MEMReynolds$(SHL_EXT)
MEMELSTAT = MEMStatElecReduced$(SHL_EXT)
MEMLUMP = MEMLumping$(SHL_EXT)
PHASECHANGE = PhaseChange$(SHL_EXT)
ELECTROKIN = Electrokinetics$(SHL_EXT)
STRESS = StressSolve$(SHL_EXT)
ENERGYRELEASE = EnergyRelease$(SHL_EXT)
MAGNETIC_IND = MagneticSolve$(SHL_EXT)
POISBOLTZ = PoissonBoltzmannSolve$(SHL_EXT)
RESULTOUTPUT = ResultOutputSolve$(SHL_EXT)

BINARIES_ODD = $(RESULT) $(HELMHOLTZ_BEM) $(SC2ELMER)  \
	$(MEMREYNO) $(MEMELSTAT) $(POISSON_BEM)


BINARIES = $(ADVDIFF) $(STATMAG) $(STATELEC) $(STATCUR) $(ELASTIC) $(HELMHOLTZ)    \
	$(ACOUSTICS) $(DH) $(IRROTVEL) $(SHEARWAVE) $(CHANGERATE) $(TRANSPORTEQ)   \
	$(FDIFF) $(FDIFF3D) $(SAVEDATA) $(INPUT) $(FREERED) $(ARTIF) $(DCRCOMPLEX) \
	$(RIGIDBODY) $(DIRICHLET) $(PERIODIC) $(FORCE) $(FREESURF) $(ELECFORCE)    \
	$(SMITC) $(STREAM) $(KE) $(MEMLUMP) $(PHASECHANGE) $(POISBOLTZ) $(ELECTROKIN) \
	$(STRESS) $(ENERGYRELEASE) $(MAGNETIC_IND) $(RESULTOUTPUT)


FOBJ = Acoustics.o Adaptive.o AdvectionDiffusion.o ApertureAmplitude.o AplacExport.o ArtificialCompressibility.o BandMatrix.o BandwidthOptimize.o CoordinateSystems.o CRSMatrix.o DCRComplexSolve.o DefUtils.o Differentials.o DiffuseConvectiveAnisotropic.o DiffuseConvectiveGeneralAnisotropic.o DirectSolve.o DissipativeHelmholtz.o EigenSolve.o ElasticSolve.o ElectricForce.o Electrokinetics.o ElementDescription.o ElementUtils.o EliminateDirichlet.o EliminatePeriodic.o ElmerSolver.o EnergyRelease.o FDiffusion3D.o FDiffusion.o FindOptimum.o FlowSolve.o FluidicForce.o FreeSurface.o FreeSurfaceReduced.o FreeSurfaceSolver.o GebhardtFactors.o GeneralUtils.o HashTable.o HeatSolve.o HelmholtzBEM.o HelmholtzSolve.o IMeshToMesh.o Integration.o Interpolation.o IrrotationalVelocity.o IterSolve.o KESolver.o LinearAlgebra.o Lists.o LUDecomposition.o MagneticSolve.o MainUtils.o MaterialModels.o MaxwellAxiS.o Maxwell.o MaxwellGeneral.o MEMUtilities.o MEMLumping.o MEMReynolds.o MEMStatElecReduced.o MeshSolve.o MeshUtils.o Messages.o MGPrec.o ModelDescription.o Multigrid.o NavierStokesCylindrical.o NavierStokes.o NavierStokesGeneral.o ParallelEigenSolve.o ParallelUtils.o PElementBase.o PElementMaps.o PhaseChange.o PoissonBEM.o PoissonBoltzmannSolve.o Radiation.o RadiationFactors.o RateOfChange.o ReloadInput.o ResultOutputSolve.o ResultToPost.o ResultToResult.o RigidBodyReduction.o SaveData.o ShearWave.o Smitc.o SolveBand.o solve_cmplx.o solve_real.o SolverUtils.o SolveSBand.o SParIterComm.o SParIterGlobals.o SParIterPrecond.o SParIterSolver.o SparseMatrix.o StatCurrentSolve.o StatElecReduced.o StatElecSolve.o StatMagSolve.o StreamSolver.o Stress.o StressGeneral.o StressSolve.o TimeIntegrate.o TransportEquation.o Types.o ViewFactors.o Walls.o

SOLVEROBJS = stubut$(OBJ_EXT)                                \
		NavierStokes$(OBJ_EXT)				\
		NavierStokesGeneral$(OBJ_EXT)	     		\
		NavierStokesCylindrical$(OBJ_EXT)		\
		Lists$(OBJ_EXT)					\
		DiffuseConvectiveAnisotropic$(OBJ_EXT)		\
		DiffuseConvectiveGeneralAnisotropic$(OBJ_EXT)	\
		PElementMaps$(OBJ_EXT)				\
		PElementBase$(OBJ_EXT)				\
		ElementDescription$(OBJ_EXT)			\
		Integration$(OBJ_EXT)				\
		ModelDescription$(OBJ_EXT)			\
		GeneralUtils$(OBJ_EXT)				\
		Stress$(OBJ_EXT)				\
		StressGeneral$(OBJ_EXT)				\
		LinearAlgebra$(OBJ_EXT)		 	        \
		CoordinateSystems$(OBJ_EXT)			\
		CRSMatrix$(OBJ_EXT)				\
		BandMatrix$(OBJ_EXT)				\
		BandwidthOptimize$(OBJ_EXT)			\
		MaterialModels$(OBJ_EXT)			\
		FlowSolve$(OBJ_EXT)				\
		HeatSolve$(OBJ_EXT)				\
		StressSolve$(OBJ_EXT)				\
		DirectSolve$(OBJ_EXT)				\
		IterSolve$(OBJ_EXT)				\
		TimeIntegrate$(OBJ_EXT)				\
		Types$(OBJ_EXT)					\
		SolveBand$(OBJ_EXT)				\
		ElementUtils$(OBJ_EXT)				\
		Radiation$(OBJ_EXT)				\
		Load$(OBJ_EXT)					\
		Differentials$(OBJ_EXT)				\
		FreeSurface$(OBJ_EXT)				\
		Maxwell$(OBJ_EXT)				\
		MaxwellAxiS$(OBJ_EXT)				\
		MaxwellGeneral$(OBJ_EXT)			\
		MagneticSolve$(OBJ_EXT)				\
		Walls$(OBJ_EXT)					\
		SolverUtils$(OBJ_EXT)				\
		SolveSBand$(OBJ_EXT)				\
		CPUTime$(OBJ_EXT)				\
		Interpolation$(OBJ_EXT)				\
		IMeshToMesh$(OBJ_EXT)				\
		MainUtils$(OBJ_EXT)				\
		MeshSolve$(OBJ_EXT)				\
		Adaptive$(OBJ_EXT)				\
		EigenSolve$(OBJ_EXT)				\
		HashTable$(OBJ_EXT)				\
		MeshUtils$(OBJ_EXT)				\
		SParIterGlobals$(OBJ_EXT)			\
		SParIterComm$(OBJ_EXT)				\
		SParIterPrecond$(OBJ_EXT)			\
		SParIterSolver$(OBJ_EXT)			\
		Messages$(OBJ_EXT)				\
		Multigrid$(OBJ_EXT)				\
		ParallelUtils$(OBJ_EXT)                         \
                ParallelEigenSolve$(OBJ_EXT)			\
		solve_cmplx$(OBJ_EXT)				\
		solve_real$(OBJ_EXT)				\
		MGPrec$(OBJ_EXT)				\
		DefUtils$(OBJ_EXT)				\
		LUDecomposition$(OBJ_EXT) 			\
	        RadiationFactors$(OBJ_EXT)                      \
		MEMUtilities$(OBJ_EXT)  			\
		ElmerSolver$(OBJ_EXT)


ELMER_SOLVER_DATADIR = $(prefix)/share/elmersolver

###############################
# Automake knows how to do this 
#
bin_PROGRAMS = SC2Elmer 
SC2Elmer_SOURCES = SC2Elmer.c

# all source files that automake doesn't know about in this directory.
EXTRA_DIST = \
	Acoustics.src \
	Adaptive.src \
	AdvectionDiffusion.src \
	ApertureAmplitude.src \
	AplacExport.src \
	ArtificialCompressibility.src \
	BandMatrix.src \
	BandwidthOptimize.src \
	CoordinateSystems.src \
	CPUTime.c \
	CRSMatrix.src \
	DCRComplexSolve.src \
	DefUtils.src \
	Differentials.src \
	DiffuseConvectiveAnisotropic.src \
	DiffuseConvectiveGeneralAnisotropic.src \
	DirectSolve.src \
	DissipativeHelmholtz.src \
	EigenSolve.src \
	ElasticSolve.src \
	ElectricForce.src \
	Electrokinetics.src \
	ElementDescription.src \
	ElementUtils.src \
	EliminateDirichlet.src \
	EliminatePeriodic.src \
	ElmerSolver.src \
	EnergyRelease.src \
	FDiffusion3D.src \
	FDiffusion.src \
	FindOptimum.src \
	FlowSolve.src \
	FluidicForce.src \
	FreeSurface.src \
	FreeSurfaceReduced.src \
	FreeSurfaceSolver.src \
	GebhardtFactors.src \
	GeneralUtils.src \
	HashTable.src \
	HeatSolve.src \
	HelmholtzBEM.src \
	HelmholtzSolve.src \
	IMeshToMesh.src \
	Integration.src \
	Interpolation.src \
	IrrotationalVelocity.src \
	IterSolve.src \
	KESolver.src \
	LinearAlgebra.src \
	Lists.src \
	Load.c \
	LUDecomposition.src \
	MagneticSolve.src \
	MagneticW1Solve.src \
	MainUtils.src \
	MaterialModels.src \
	MaxwellAxiS.src \
	Maxwell.src \
	MaxwellGeneral.src \
	MEMLumping.src \
	MEMReynolds.src \
	MEMStatElecReduced.src \
	MEMUtilities.src \
	MeshSolve.src \
	MeshUtils.src \
	Messages.src \
	MGPrec.src \
	ModelDescription.src \
	mpif_stub.h \
	stubut.c \
	Multigrid.src \
	NavierStokesCylindrical.src \
	NavierStokes.src \
	NavierStokesGeneral.src \
	ParallelEigenSolve.src \
	ParallelUtils.src \
	PElementBase.src \
	PElementMaps.src \
	PhaseChange.src \
	PoissonBEM.src \
	PoissonBoltzmannSolve.src \
	Radiation.src \
	RadiationFactors.src \
	RateOfChange.src \
	ReloadInput.src \
	ResultOutputSolve.src \
	ResultToPost.src \
	ResultToResult.src \
	ReynoldsEquation.src \
	ReynoldsUtilities.src \
	RigidBodyReduction.src \
	SaveData.src \
	ShearWave.src \
	Smitc.src \
	SolveBand.src \
	solve_cmplx.src \
	solve_real.src \
	Solver.src \
	SolverUtils.src \
	SolveSBand.src \
	SParIterComm.src \
	SParIterGlobals.src \
	SParIterPrecond.src \
	SParIterSolver.src \
	SparseMatrix.src \
	StatCurrentSolve.src \
	StatElecReduced.src \
	StatElecSolve.src \
	StatMagSolve.src \
	StreamSolver.src \
	Stress.src \
	StressGeneral.src \
	StressSolve.src \
	TimeIntegrate.src \
	TransportEquation.src \
	Types.src \
	ViewFactors.src \
	Walls.src 

subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = SC2Elmer$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_SC2Elmer_OBJECTS = SC2Elmer.$(OBJEXT)
SC2Elmer_OBJECTS = $(am_SC2Elmer_OBJECTS)
SC2Elmer_LDADD = $(LDADD)
SC2Elmer_DEPENDENCIES =
SC2Elmer_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/SC2Elmer.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
DIST_SOURCES = $(SC2Elmer_SOURCES)

RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = Makefile.am Makefile.in
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(SC2Elmer_SOURCES)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .$(OBJEXT) .$(SHLEXT) .c .f90 .o .obj .src
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(srcdir)/make.bin $(srcdir)/make.dep $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
SC2Elmer$(EXEEXT): $(SC2Elmer_OBJECTS) $(SC2Elmer_DEPENDENCIES) 
	@rm -f SC2Elmer$(EXEEXT)
	$(LINK) $(SC2Elmer_LDFLAGS) $(SC2Elmer_OBJECTS) $(SC2Elmer_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SC2Elmer.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`
CCDEPMODE = @CCDEPMODE@
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) all-local
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am: install-data-local

install-exec-am: install-binPROGRAMS install-exec-local

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am all-local check check-am \
	clean clean-binPROGRAMS clean-generic clean-local \
	clean-recursive distclean distclean-compile distclean-depend \
	distclean-generic distclean-recursive distclean-tags distdir \
	dvi dvi-am dvi-recursive info info-am info-recursive install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-data-local install-data-recursive install-exec \
	install-exec-am install-exec-local install-exec-recursive \
	install-info install-info-am install-info-recursive install-man \
	install-recursive install-strip installcheck installcheck-am \
	installdirs installdirs-am installdirs-recursive \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-recursive tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS uninstall-info-am \
	uninstall-info-recursive uninstall-recursive

Acoustics.o: Acoustics.f90 DefUtils.o LinearAlgebra.o
Adaptive.o: Adaptive.f90 CRSMatrix.o ModelDescription.o GeneralUtils.o Types.o SolverUtils.o
AdvectionDiffusion.o: AdvectionDiffusion.f90 MaterialModels.o DefUtils.o Differentials.o Integration.o SolverUtils.o
ApertureAmplitude.o: ApertureAmplitude.f90 SolverUtils.o ElementDescription.o Lists.o Types.o Integration.o
AplacExport.o: AplacExport.f90 SolverUtils.o ElementDescription.o Lists.o Types.o Integration.o
ArtificialCompressibility.o: ArtificialCompressibility.f90 SolverUtils.o ElementDescription.o Lists.o Types.o Integration.o
BandMatrix.o: BandMatrix.f90 GeneralUtils.o Types.o
BandwidthOptimize.o: BandwidthOptimize.f90 ElementDescription.o
CRSMatrix.o: CRSMatrix.f90 GeneralUtils.o
CoordinateSystems.o: CoordinateSystems.f90 Types.o
DCRComplexSolve.o: DCRComplexSolve.f90 Radiation.o Integration.o Lists.o ElementDescription.o CoordinateSystems.o LinearAlgebra.o Adaptive.o Types.o SolverUtils.o
DefUtils.o: DefUtils.f90 PElementMaps.o Adaptive.o LinearAlgebra.o Integration.o SolverUtils.o
Differentials.o: Differentials.f90 ElementDescription.o LinearAlgebra.o Types.o
DiffuseConvectiveAnisotropic.o: DiffuseConvectiveAnisotropic.f90 MaterialModels.o Differentials.o Integration.o
DiffuseConvectiveGeneralAnisotropic.o: DiffuseConvectiveGeneralAnisotropic.f90 MaterialModels.o Differentials.o Integration.o
DirectSolve.o: DirectSolve.f90 CRSMatrix.o BandMatrix.o Types.o Lists.o
DissipativeHelmholtz.o: DissipativeHelmholtz.f90 SolverUtils.o ElementDescription.o Lists.o Types.o Integration.o
EigenSolve.o: EigenSolve.f90 CRSMatrix.o IterSolve.o Multigrid.o Types.o
ElasticSolve.o: ElasticSolve.f90 MaterialModels.o DefUtils.o Integration.o LinearAlgebra.o CoordinateSystems.o ElementDescription.o Adaptive.o Types.o
ElectricForce.o: ElectricForce.f90 DefUtils.o Integration.o Lists.o MeshUtils.o ElementDescription.o Types.o SolverUtils.o
Electrokinetics.o: Electrokinetics.f90 DefUtils.o Lists.o Types.o CoordinateSystems.o
ElementDescription.o: ElementDescription.f90 PElementBase.o GeneralUtils.o Integration.o Lists.o PElementMaps.o LinearAlgebra.o CoordinateSystems.o
ElementUtils.o: ElementUtils.f90 CRSMatrix.o BandwidthOptimize.o BandMatrix.o Integration.o Interpolation.o
EliminateDirichlet.o: EliminateDirichlet.f90 CRSMatrix.o GeneralUtils.o Lists.o Types.o SolverUtils.o
EliminatePeriodic.o: EliminatePeriodic.f90 CRSMatrix.o GeneralUtils.o Lists.o Types.o SolverUtils.o
ElmerSolver.o: ElmerSolver.f90 MainUtils.o
EnergyRelease.o: EnergyRelease.f90 DefUtils.o
FDiffusion.o: FDiffusion.f90 Integration.o Lists.o LinearAlgebra.o ElementDescription.o Types.o SolverUtils.o
FDiffusion3D.o: FDiffusion3D.f90 Integration.o Lists.o LinearAlgebra.o ElementDescription.o Types.o SolverUtils.o
FindOptimum.o: FindOptimum.f90 Integration.o Lists.o MeshUtils.o ElementDescription.o Types.o SolverUtils.o
FlowSolve.o: FlowSolve.f90 NavierStokes.o NavierStokesCylindrical.o DefUtils.o Radiation.o NavierStokesGeneral.o FreeSurface.o CoordinateSystems.o ElementDescription.o Adaptive.o Types.o
FluidicForce.o: FluidicForce.f90 MaterialModels.o DefUtils.o Integration.o Lists.o MeshUtils.o ElementDescription.o Types.o SolverUtils.o
FreeSurface.o: FreeSurface.f90 IterSolve.o ElementUtils.o DirectSolve.o
FreeSurfaceReduced.o: FreeSurfaceReduced.f90 ElementUtils.o Differentials.o Integration.o Lists.o MeshUtils.o ElementDescription.o Types.o SolverUtils.o
FreeSurfaceSolver.o: FreeSurfaceSolver.f90 DefUtils.o
GebhardtFactors.o: GebhardtFactors.f90 ModelDescription.o Lists.o IterSolve.o ElementDescription.o CoordinateSystems.o CRSMatrix.o MainUtils.o Types.o SolverUtils.o
GeneralUtils.o: GeneralUtils.f90 Types.o
HashTable.o: HashTable.f90 Lists.o
HeatSolve.o: HeatSolve.f90 MaterialModels.o DiffuseConvectiveGeneralAnisotropic.o DiffuseConvectiveAnisotropic.o DefUtils.o Differentials.o Radiation.o ElementDescription.o CoordinateSystems.o Adaptive.o Types.o
HelmholtzBEM.o: HelmholtzBEM.f90 DefUtils.o Types.o PoissonBEM.o
HelmholtzSolve.o: HelmholtzSolve.f90 DefUtils.o LinearAlgebra.o
IMeshToMesh.o: IMeshToMesh.f90 CRSMatrix.o CoordinateSystems.o Interpolation.o
Integration.o: Integration.f90 LinearAlgebra.o Types.o
Interpolation.o: Interpolation.f90 ElementDescription.o Lists.o Types.o CoordinateSystems.o
IrrotationalVelocity.o: IrrotationalVelocity.f90 Integration.o Lists.o LinearAlgebra.o ElementDescription.o Types.o SolverUtils.o
IterSolve.o: IterSolve.f90 CRSMatrix.o BandMatrix.o Lists.o
KESolver.o: KESolver.f90 DefUtils.o MaterialModels.o
LUDecomposition.o: LUDecomposition.f90 Types.o
LinearAlgebra.o: LinearAlgebra.f90 Types.o
Lists.o: Lists.f90 GeneralUtils.o Messages.o Types.o
MEMLumping.o: MEMLumping.f90 DefUtils.o Integration.o Lists.o ElementDescription.o Types.o SolverUtils.o
MEMReynolds.o: MEMReynolds.f90 DefUtils.o Integration.o Lists.o ElementDescription.o MEMUtilities.o Types.o SolverUtils.o
MEMStatElecReduced.o: MEMStatElecReduced.f90 ElementUtils.o DefUtils.o Differentials.o Integration.o Lists.o ElementDescription.o MEMUtilities.o Types.o SolverUtils.o
MEMUtilities.o: MEMUtilities.f90 SolverUtils.o ElementDescription.o Lists.o Types.o Integration.o
MGPrec.o: MGPrec.f90 Multigrid.o
MagneticSolve.o: MagneticSolve.f90 MaxwellGeneral.o Maxwell.o Differentials.o DefUtils.o MaxwellAxiS.o Types.o
MagneticW1Solve.o: MagneticW1Solve.f90 Differentials.o DirectSolve.o ElementUtils.o Integration.o Lists.o BandwidthOptimize.o IterSolve.o FreeSurface.o ElementDescription.o CoordinateSystems.o TimeIntegrate.o Types.o SolverUtils.o
MainUtils.o: MainUtils.f90 ModelDescription.o SolverUtils.o
MaterialModels.o: MaterialModels.f90 Integration.o ElementDescription.o CoordinateSystems.o LinearAlgebra.o ModelDescription.o Types.o
Maxwell.o: Maxwell.f90 ElementDescription.o Integration.o
MaxwellAxiS.o: MaxwellAxiS.f90 ElementDescription.o Integration.o Types.o
MaxwellGeneral.o: MaxwellGeneral.f90 ElementDescription.o Integration.o
MeshSolve.o: MeshSolve.f90 DefUtils.o Differentials.o CoordinateSystems.o SolverUtils.o
MeshUtils.o: MeshUtils.f90 PElementBase.o ParallelUtils.o PElementMaps.o ElementUtils.o ElementDescription.o
Messages.o: Messages.f90
ModelDescription.o: ModelDescription.f90 MeshUtils.o ElementDescription.o HashTable.o Types.o
Multigrid.o: Multigrid.f90 DirectSolve.o IterSolve.o CoordinateSystems.o CRSMatrix.o ModelDescription.o Interpolation.o
NavierStokes.o: NavierStokes.f90 MaterialModels.o ElementUtils.o Differentials.o Integration.o
NavierStokesCylindrical.o: NavierStokesCylindrical.f90 MaterialModels.o ElementUtils.o Differentials.o CoordinateSystems.o Integration.o
NavierStokesGeneral.o: NavierStokesGeneral.f90 MaterialModels.o Differentials.o CoordinateSystems.o Integration.o
PElementBase.o: PElementBase.f90 PElementMaps.o Messages.o Types.o
PElementMaps.o: PElementMaps.f90 Messages.o Types.o
ParallelEigenSolve.o: ParallelEigenSolve.f90 SParIterGlobals.o Multigrid.o ParallelUtils.o SParIterSolver.o IterSolve.o CRSMatrix.o
ParallelUtils.o: ParallelUtils.f90 SParIterSolver.o
PhaseChange.o: PhaseChange.f90 GeneralUtils.o DefUtils.o Differentials.o Integration.o Lists.o ElementDescription.o CoordinateSystems.o Types.o SolverUtils.o
PoissonBEM.o: PoissonBEM.f90 DefUtils.o Types.o
PoissonBoltzmannSolve.o: PoissonBoltzmannSolve.f90 ElementUtils.o DefUtils.o Differentials.o Integration.o Lists.o ElementDescription.o Adaptive.o Types.o SolverUtils.o
Radiation.o: Radiation.f90 ElementUtils.o CoordinateSystems.o
RadiationFactors.o: RadiationFactors.f90 ModelDescription.o GeneralUtils.o ElementUtils.o Lists.o IterSolve.o ElementDescription.o CoordinateSystems.o CRSMatrix.o MainUtils.o Types.o SolverUtils.o
RateOfChange.o: RateOfChange.f90 ElementUtils.o Integration.o Lists.o ElementDescription.o Types.o SolverUtils.o
ReloadInput.o: ReloadInput.f90 ModelDescription.o Lists.o Types.o
ResultToPost.o: ResultToPost.f90 MainUtils.o
ResultToResult.o: ResultToResult.f90 SParIterGlobals.o ModelDescription.o Integration.o Lists.o SParIterSolver.o ElementDescription.o CoordinateSystems.o SParIterComm.o MainUtils.o Types.o Interpolation.o
ReynoldsEquation.o: ReynoldsEquation.f90 Integration.o Lists.o ElementDescription.o ReynoldsUtilities.o Types.o SolverUtils.o
ReynoldsUtilities.o: ReynoldsUtilities.f90 Types.o
RigidBodyReduction.o: RigidBodyReduction.f90 DefUtils.o GeneralUtils.o Integration.o Lists.o CRSMatrix.o Types.o SolverUtils.o
SParIterComm.o: SParIterComm.f90 SParIterGlobals.o GeneralUtils.o Types.o
SParIterGlobals.o: SParIterGlobals.f90 Types.o
SParIterPrecond.o: SParIterPrecond.f90 SParIterGlobals.o SParIterComm.o Types.o
SParIterSolver.o: SParIterSolver.f90 SParIterGlobals.o Lists.o CRSMatrix.o SParIterComm.o SParIterPrecond.o Types.o
SaveData.o: SaveData.f90 DefUtils.o Integration.o Lists.o MeshUtils.o ElementDescription.o Types.o SolverUtils.o
ShearWave.o: ShearWave.f90 Integration.o Lists.o LinearAlgebra.o ElementDescription.o Types.o SolverUtils.o
Smitc.o: Smitc.f90 DefUtils.o
SolveBand.o: SolveBand.f90
SolveSBand.o: SolveSBand.f90
Solver.o: Solver.f90 GeneralUtils.o Types.o
SolverUtils.o: SolverUtils.f90 SParIterGlobals.o Multigrid.o ParallelEigenSolve.o ParallelUtils.o DirectSolve.o ElementUtils.o SParIterSolver.o IterSolve.o MeshUtils.o LinearAlgebra.o TimeIntegrate.o ModelDescription.o Types.o EigenSolve.o
SparseMatrix.o: SparseMatrix.f90 GeneralUtils.o
StatCurrentSolve.o: StatCurrentSolve.f90 ElementUtils.o DefUtils.o Differentials.o Integration.o Lists.o ElementDescription.o Types.o SolverUtils.o
StatElecReduced.o: StatElecReduced.f90 ElementUtils.o Differentials.o Integration.o Lists.o ElementDescription.o Types.o SolverUtils.o
StatElecSolve.o: StatElecSolve.f90 ElementUtils.o DefUtils.o Differentials.o Integration.o Lists.o ElementDescription.o CoordinateSystems.o Adaptive.o Types.o SolverUtils.o
StatMagSolve.o: StatMagSolve.f90 DefUtils.o Differentials.o ElementDescription.o Integration.o Types.o
StreamSolver.o: StreamSolver.f90 DefUtils.o
Stress.o: Stress.f90 ElementUtils.o ElementDescription.o Integration.o
StressGeneral.o: StressGeneral.f90 ElementDescription.o CoordinateSystems.o Integration.o
StressSolve.o: StressSolve.f90 Stress.o DefUtils.o StressGeneral.o ElementDescription.o CoordinateSystems.o Adaptive.o Types.o
TimeIntegrate.o: TimeIntegrate.f90 Lists.o Types.o
TransportEquation.o: TransportEquation.f90 ElementUtils.o Integration.o Lists.o ElementDescription.o Types.o SolverUtils.o
Types.o: Types.f90 Messages.o
ViewFactors.o: ViewFactors.f90 DefUtils.o Types.o
Walls.o: Walls.f90
solve_cmplx.o: solve_cmplx.f90
solve_real.o: solve_real.f90

# dependencies
# automatic object dependencies for .f90 files

# attach to automake all target
all-local:   mpif libsolver$(SHL_EXT) ElmerSolver$(EXE_EXT) $(BINARIES) $(BINARIES_ODD) ViewFactors$(EXE_EXT) GebhardtFactors$(EXE_EXT)

SUFFIXES: .f90 .so .src

.src.f90:
	$(CPP) $(FCPPFLAGS) $< > $*.f90

.f90.$(OBJEXT):
	$(FC) $(FCFLAGS) -c $<

libsolver$(SHL_EXT): $(SOLVEROBJS) arpack parpack
	$(RM) $@
	$(SH_LD2) $(SH_LDFLAGS) $(B64FLAGS) $(LDFLAGS) -o $@ $(SOLVEROBJS) $(SOLVER_LIBS) -L.

# create shared solver objects
.$(OBJEXT).$(SHLEXT): 
	$(SH_LD) $(SH_LDFLAGS) $(SH_LINKING_TO_FLAGS) $(B64FLAGS) -o $@ $*$(OBJ_EXT) $(EXTRA_LIBS)

$(BINARIES) $(BINARIES_ODD): libsolver$(SHL_EXT)

$(SOLVEROBJS): mpif

ElmerSolver$(EXE_EXT): Solver$(OBJ_EXT) libsolver$(SHL_EXT) 
	$(SH_LD) $(SH_LINKING_TO_FLAGS) $(B64FLAGS) $(LDFLAGS) -o ElmerSolver$(EXE_EXT) Solver$(OBJ_EXT) -L. -lsolver $(EXTRA_LIBS)

ViewFactors$(EXE_EXT): libsolver$(SHL_EXT) ViewFactors$(OBJ_EXT)  
	$(SH_LD) $(SH_LINKING_TO_FLAGS) $(B64FLAGS) $(LDFLAGS) -o ViewFactors$(EXE_EXT) ViewFactors$(OBJ_EXT) -L. -lsolver $(EXTRA_LIBS) viewaxis/libviewaxis.a view3d/libview3d.a

GebhardtFactors$(EXE_EXT): libsolver$(SHL_EXT) GebhardtFactors$(OBJ_EXT)  
	$(SH_LD) $(SH_LINKING_TO_FLAGS) $(B64FLAGS) $(LDFLAGS) -o GebhardtFactors$(EXE_EXT) GebhardtFactors$(OBJ_EXT) -L. -lsolver $(EXTRA_LIBS) viewaxis/libviewaxis.a view3d/libview3d.a
install-data-local:
	@echo "Instaling solvers to ${ELMER_SOLVER_DATADIR}/lib"

	mkdir -p $(ELMER_SOLVER_DATADIR)/lib
	$(CP) *$(SHL_EXT) $(ELMER_SOLVER_DATADIR)/lib
	$(CP) elements.def $(ELMER_SOLVER_DATADIR)/lib
	$(CP) SOLVER.KEYWORDS $(ELMER_SOLVER_DATADIR)/lib

	@echo "Instaling *.mod to ${ELMER_SOLVER_DATADIR}/include"
	mkdir -p $(ELMER_SOLVER_DATADIR)/include
	$(CP) *.mod $(ELMER_SOLVER_DATADIR)/include

install-exec-local:
	@echo "Installing stuff to ${prefix}/bin"
	$(MKDIR) $(prefix)/bin
	$(CP) ElmerSolver$(EXEEXT) $(prefix)/bin
	$(CP) ElmerSolver$(EXEEXT) $(prefix)/bin/Solver$(EXEEXT)
	$(CP) ViewFactors$(EXEEXT) $(prefix)/bin
	$(CP) GebhardtFactors$(EXEEXT) $(prefix)/bin

clean-local:
	$(RM) $(ALL) *.o *.mod *.F90 *.F *.fpp *~ *.a *.so *.dll \#* mpif mpif.h

###############################
# If no mpif.h found, but mpi still seems kosher, then use a stub mpif.h
@USE_LOCAL_MPIF_H_TRUE@mpif:
@USE_LOCAL_MPIF_H_TRUE@	$(CP) mpif_stub.h mpif.h
@USE_LOCAL_MPIF_H_TRUE@	$(CP) mpif_stub.h mpif
@USE_LOCAL_MPIF_H_FALSE@mpif:
@USE_LOCAL_MPIF_H_FALSE@	$(CP) mpif_stub.h mpif
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
