# Makefile.in generated by automake 1.9.5 from Makefile.am.
# src/umfpack/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SOURCES = $(libumfpack_a_SOURCES)

srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/umfpack
pkglibdir = $(libdir)/umfpack
pkgincludedir = $(includedir)/umfpack
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/make.dep
subdir = src/umfpack
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acx_elmer.m4 \
	$(top_srcdir)/acx_elmer.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
libumfpack_a_AR = $(AR) $(ARFLAGS)
libumfpack_a_LIBADD =
am__objects_1 = umf_i_analyze.$(OBJEXT) umf_i_apply_order.$(OBJEXT) \
	umf_i_colamd.$(OBJEXT) umf_i_free.$(OBJEXT) \
	umf_i_fsize.$(OBJEXT) umf_i_is_permutation.$(OBJEXT) \
	umf_i_malloc.$(OBJEXT) umf_i_realloc.$(OBJEXT) \
	umf_i_report_perm.$(OBJEXT) umf_i_singletons.$(OBJEXT) \
	umf_l_analyze.$(OBJEXT) umf_l_apply_order.$(OBJEXT) \
	umf_l_colamd.$(OBJEXT) umf_l_free.$(OBJEXT) \
	umf_l_fsize.$(OBJEXT) umf_l_is_permutation.$(OBJEXT) \
	umf_l_malloc.$(OBJEXT) umf_l_realloc.$(OBJEXT) \
	umf_l_report_perm.$(OBJEXT) umf_l_singletons.$(OBJEXT) \
	umf_di_lhsolve.$(OBJEXT) umf_di_uhsolve.$(OBJEXT) \
	umf_di_triplet_map_nox.$(OBJEXT) \
	umf_di_triplet_nomap_x.$(OBJEXT) \
	umf_di_triplet_nomap_nox.$(OBJEXT) \
	umf_di_triplet_map_x.$(OBJEXT) umf_di_assemble_fixq.$(OBJEXT) \
	umf_di_store_lu_drop.$(OBJEXT) umf_di_assemble.$(OBJEXT) \
	umf_di_blas3_update.$(OBJEXT) umf_di_build_tuples.$(OBJEXT) \
	umf_di_create_element.$(OBJEXT) umf_di_dump.$(OBJEXT) \
	umf_di_extend_front.$(OBJEXT) \
	umf_di_garbage_collection.$(OBJEXT) \
	umf_di_get_memory.$(OBJEXT) umf_di_init_front.$(OBJEXT) \
	umf_di_kernel.$(OBJEXT) umf_di_kernel_init.$(OBJEXT) \
	umf_di_kernel_wrapup.$(OBJEXT) umf_di_local_search.$(OBJEXT) \
	umf_di_lsolve.$(OBJEXT) umf_di_ltsolve.$(OBJEXT) \
	umf_di_mem_alloc_element.$(OBJEXT) \
	umf_di_mem_alloc_head_block.$(OBJEXT) \
	umf_di_mem_alloc_tail_block.$(OBJEXT) \
	umf_di_mem_free_tail_block.$(OBJEXT) \
	umf_di_mem_init_memoryspace.$(OBJEXT) \
	umf_di_report_vector.$(OBJEXT) umf_di_row_search.$(OBJEXT) \
	umf_di_scale_column.$(OBJEXT) umf_di_set_stats.$(OBJEXT) \
	umf_di_solve.$(OBJEXT) umf_di_symbolic_usage.$(OBJEXT) \
	umf_di_transpose.$(OBJEXT) umf_di_tuple_lengths.$(OBJEXT) \
	umf_di_usolve.$(OBJEXT) umf_di_utsolve.$(OBJEXT) \
	umf_di_valid_numeric.$(OBJEXT) umf_di_valid_symbolic.$(OBJEXT) \
	umf_di_grow_front.$(OBJEXT) umf_di_start_front.$(OBJEXT) \
	umf_di_2by2.$(OBJEXT) umf_di_store_lu.$(OBJEXT) \
	umf_di_scale.$(OBJEXT) umfpack_di_wsolve.$(OBJEXT) \
	umfpack_di_col_to_triplet.$(OBJEXT) \
	umfpack_di_defaults.$(OBJEXT) \
	umfpack_di_free_numeric.$(OBJEXT) \
	umfpack_di_free_symbolic.$(OBJEXT) \
	umfpack_di_get_numeric.$(OBJEXT) umfpack_di_get_lunz.$(OBJEXT) \
	umfpack_di_get_symbolic.$(OBJEXT) \
	umfpack_di_get_determinant.$(OBJEXT) \
	umfpack_di_numeric.$(OBJEXT) umfpack_di_qsymbolic.$(OBJEXT) \
	umfpack_di_report_control.$(OBJEXT) \
	umfpack_di_report_info.$(OBJEXT) \
	umfpack_di_report_matrix.$(OBJEXT) \
	umfpack_di_report_numeric.$(OBJEXT) \
	umfpack_di_report_perm.$(OBJEXT) \
	umfpack_di_report_status.$(OBJEXT) \
	umfpack_di_report_symbolic.$(OBJEXT) \
	umfpack_di_report_triplet.$(OBJEXT) \
	umfpack_di_report_vector.$(OBJEXT) umfpack_di_solve.$(OBJEXT) \
	umfpack_di_symbolic.$(OBJEXT) umfpack_di_transpose.$(OBJEXT) \
	umfpack_di_triplet_to_col.$(OBJEXT) umfpack_di_scale.$(OBJEXT) \
	umfpack_di_load_numeric.$(OBJEXT) \
	umfpack_di_save_numeric.$(OBJEXT) \
	umfpack_di_load_symbolic.$(OBJEXT) \
	umfpack_di_save_symbolic.$(OBJEXT) umf_dl_lhsolve.$(OBJEXT) \
	umf_dl_uhsolve.$(OBJEXT) umf_dl_triplet_map_nox.$(OBJEXT) \
	umf_dl_triplet_nomap_x.$(OBJEXT) \
	umf_dl_triplet_nomap_nox.$(OBJEXT) \
	umf_dl_triplet_map_x.$(OBJEXT) umf_dl_assemble_fixq.$(OBJEXT) \
	umf_dl_store_lu_drop.$(OBJEXT) umf_dl_assemble.$(OBJEXT) \
	umf_dl_blas3_update.$(OBJEXT) umf_dl_build_tuples.$(OBJEXT) \
	umf_dl_create_element.$(OBJEXT) umf_dl_dump.$(OBJEXT) \
	umf_dl_extend_front.$(OBJEXT) \
	umf_dl_garbage_collection.$(OBJEXT) \
	umf_dl_get_memory.$(OBJEXT) umf_dl_init_front.$(OBJEXT) \
	umf_dl_kernel.$(OBJEXT) umf_dl_kernel_init.$(OBJEXT) \
	umf_dl_kernel_wrapup.$(OBJEXT) umf_dl_local_search.$(OBJEXT) \
	umf_dl_lsolve.$(OBJEXT) umf_dl_ltsolve.$(OBJEXT) \
	umf_dl_mem_alloc_element.$(OBJEXT) \
	umf_dl_mem_alloc_head_block.$(OBJEXT) \
	umf_dl_mem_alloc_tail_block.$(OBJEXT) \
	umf_dl_mem_free_tail_block.$(OBJEXT) \
	umf_dl_mem_init_memoryspace.$(OBJEXT) \
	umf_dl_report_vector.$(OBJEXT) umf_dl_row_search.$(OBJEXT) \
	umf_dl_scale_column.$(OBJEXT) umf_dl_set_stats.$(OBJEXT) \
	umf_dl_solve.$(OBJEXT) umf_dl_symbolic_usage.$(OBJEXT) \
	umf_dl_transpose.$(OBJEXT) umf_dl_tuple_lengths.$(OBJEXT) \
	umf_dl_usolve.$(OBJEXT) umf_dl_utsolve.$(OBJEXT) \
	umf_dl_valid_numeric.$(OBJEXT) umf_dl_valid_symbolic.$(OBJEXT) \
	umf_dl_grow_front.$(OBJEXT) umf_dl_start_front.$(OBJEXT) \
	umf_dl_2by2.$(OBJEXT) umf_dl_store_lu.$(OBJEXT) \
	umf_dl_scale.$(OBJEXT) umfpack_dl_wsolve.$(OBJEXT) \
	umfpack_dl_col_to_triplet.$(OBJEXT) \
	umfpack_dl_defaults.$(OBJEXT) \
	umfpack_dl_free_numeric.$(OBJEXT) \
	umfpack_dl_free_symbolic.$(OBJEXT) \
	umfpack_dl_get_numeric.$(OBJEXT) umfpack_dl_get_lunz.$(OBJEXT) \
	umfpack_dl_get_symbolic.$(OBJEXT) \
	umfpack_dl_get_determinant.$(OBJEXT) \
	umfpack_dl_numeric.$(OBJEXT) umfpack_dl_qsymbolic.$(OBJEXT) \
	umfpack_dl_report_control.$(OBJEXT) \
	umfpack_dl_report_info.$(OBJEXT) \
	umfpack_dl_report_matrix.$(OBJEXT) \
	umfpack_dl_report_numeric.$(OBJEXT) \
	umfpack_dl_report_perm.$(OBJEXT) \
	umfpack_dl_report_status.$(OBJEXT) \
	umfpack_dl_report_symbolic.$(OBJEXT) \
	umfpack_dl_report_triplet.$(OBJEXT) \
	umfpack_dl_report_vector.$(OBJEXT) umfpack_dl_solve.$(OBJEXT) \
	umfpack_dl_symbolic.$(OBJEXT) umfpack_dl_transpose.$(OBJEXT) \
	umfpack_dl_triplet_to_col.$(OBJEXT) umfpack_dl_scale.$(OBJEXT) \
	umfpack_dl_load_numeric.$(OBJEXT) \
	umfpack_dl_save_numeric.$(OBJEXT) \
	umfpack_dl_load_symbolic.$(OBJEXT) \
	umfpack_dl_save_symbolic.$(OBJEXT) umf_zi_lhsolve.$(OBJEXT) \
	umf_zi_uhsolve.$(OBJEXT) umf_zi_triplet_map_nox.$(OBJEXT) \
	umf_zi_triplet_nomap_x.$(OBJEXT) \
	umf_zi_triplet_nomap_nox.$(OBJEXT) \
	umf_zi_triplet_map_x.$(OBJEXT) umf_zi_assemble_fixq.$(OBJEXT) \
	umf_zi_store_lu_drop.$(OBJEXT) umf_zi_assemble.$(OBJEXT) \
	umf_zi_blas3_update.$(OBJEXT) umf_zi_build_tuples.$(OBJEXT) \
	umf_zi_create_element.$(OBJEXT) umf_zi_dump.$(OBJEXT) \
	umf_zi_extend_front.$(OBJEXT) \
	umf_zi_garbage_collection.$(OBJEXT) \
	umf_zi_get_memory.$(OBJEXT) umf_zi_init_front.$(OBJEXT) \
	umf_zi_kernel.$(OBJEXT) umf_zi_kernel_init.$(OBJEXT) \
	umf_zi_kernel_wrapup.$(OBJEXT) umf_zi_local_search.$(OBJEXT) \
	umf_zi_lsolve.$(OBJEXT) umf_zi_ltsolve.$(OBJEXT) \
	umf_zi_mem_alloc_element.$(OBJEXT) \
	umf_zi_mem_alloc_head_block.$(OBJEXT) \
	umf_zi_mem_alloc_tail_block.$(OBJEXT) \
	umf_zi_mem_free_tail_block.$(OBJEXT) \
	umf_zi_mem_init_memoryspace.$(OBJEXT) \
	umf_zi_report_vector.$(OBJEXT) umf_zi_row_search.$(OBJEXT) \
	umf_zi_scale_column.$(OBJEXT) umf_zi_set_stats.$(OBJEXT) \
	umf_zi_solve.$(OBJEXT) umf_zi_symbolic_usage.$(OBJEXT) \
	umf_zi_transpose.$(OBJEXT) umf_zi_tuple_lengths.$(OBJEXT) \
	umf_zi_usolve.$(OBJEXT) umf_zi_utsolve.$(OBJEXT) \
	umf_zi_valid_numeric.$(OBJEXT) umf_zi_valid_symbolic.$(OBJEXT) \
	umf_zi_grow_front.$(OBJEXT) umf_zi_start_front.$(OBJEXT) \
	umf_zi_2by2.$(OBJEXT) umf_zi_store_lu.$(OBJEXT) \
	umf_zi_scale.$(OBJEXT) umfpack_zi_wsolve.$(OBJEXT) \
	umfpack_zi_col_to_triplet.$(OBJEXT) \
	umfpack_zi_defaults.$(OBJEXT) \
	umfpack_zi_free_numeric.$(OBJEXT) \
	umfpack_zi_free_symbolic.$(OBJEXT) \
	umfpack_zi_get_numeric.$(OBJEXT) umfpack_zi_get_lunz.$(OBJEXT) \
	umfpack_zi_get_symbolic.$(OBJEXT) \
	umfpack_zi_get_determinant.$(OBJEXT) \
	umfpack_zi_numeric.$(OBJEXT) umfpack_zi_qsymbolic.$(OBJEXT) \
	umfpack_zi_report_control.$(OBJEXT) \
	umfpack_zi_report_info.$(OBJEXT) \
	umfpack_zi_report_matrix.$(OBJEXT) \
	umfpack_zi_report_numeric.$(OBJEXT) \
	umfpack_zi_report_perm.$(OBJEXT) \
	umfpack_zi_report_status.$(OBJEXT) \
	umfpack_zi_report_symbolic.$(OBJEXT) \
	umfpack_zi_report_triplet.$(OBJEXT) \
	umfpack_zi_report_vector.$(OBJEXT) umfpack_zi_solve.$(OBJEXT) \
	umfpack_zi_symbolic.$(OBJEXT) umfpack_zi_transpose.$(OBJEXT) \
	umfpack_zi_triplet_to_col.$(OBJEXT) umfpack_zi_scale.$(OBJEXT) \
	umfpack_zi_load_numeric.$(OBJEXT) \
	umfpack_zi_save_numeric.$(OBJEXT) \
	umfpack_zi_load_symbolic.$(OBJEXT) \
	umfpack_zi_save_symbolic.$(OBJEXT) umf_zl_lhsolve.$(OBJEXT) \
	umf_zl_uhsolve.$(OBJEXT) umf_zl_triplet_map_nox.$(OBJEXT) \
	umf_zl_triplet_nomap_x.$(OBJEXT) \
	umf_zl_triplet_nomap_nox.$(OBJEXT) \
	umf_zl_triplet_map_x.$(OBJEXT) umf_zl_assemble_fixq.$(OBJEXT) \
	umf_zl_store_lu_drop.$(OBJEXT) umf_zl_assemble.$(OBJEXT) \
	umf_zl_blas3_update.$(OBJEXT) umf_zl_build_tuples.$(OBJEXT) \
	umf_zl_create_element.$(OBJEXT) umf_zl_dump.$(OBJEXT) \
	umf_zl_extend_front.$(OBJEXT) \
	umf_zl_garbage_collection.$(OBJEXT) \
	umf_zl_get_memory.$(OBJEXT) umf_zl_init_front.$(OBJEXT) \
	umf_zl_kernel.$(OBJEXT) umf_zl_kernel_init.$(OBJEXT) \
	umf_zl_kernel_wrapup.$(OBJEXT) umf_zl_local_search.$(OBJEXT) \
	umf_zl_lsolve.$(OBJEXT) umf_zl_ltsolve.$(OBJEXT) \
	umf_zl_mem_alloc_element.$(OBJEXT) \
	umf_zl_mem_alloc_head_block.$(OBJEXT) \
	umf_zl_mem_alloc_tail_block.$(OBJEXT) \
	umf_zl_mem_free_tail_block.$(OBJEXT) \
	umf_zl_mem_init_memoryspace.$(OBJEXT) \
	umf_zl_report_vector.$(OBJEXT) umf_zl_row_search.$(OBJEXT) \
	umf_zl_scale_column.$(OBJEXT) umf_zl_set_stats.$(OBJEXT) \
	umf_zl_solve.$(OBJEXT) umf_zl_symbolic_usage.$(OBJEXT) \
	umf_zl_transpose.$(OBJEXT) umf_zl_tuple_lengths.$(OBJEXT) \
	umf_zl_usolve.$(OBJEXT) umf_zl_utsolve.$(OBJEXT) \
	umf_zl_valid_numeric.$(OBJEXT) umf_zl_valid_symbolic.$(OBJEXT) \
	umf_zl_grow_front.$(OBJEXT) umf_zl_start_front.$(OBJEXT) \
	umf_zl_2by2.$(OBJEXT) umf_zl_store_lu.$(OBJEXT) \
	umf_zl_scale.$(OBJEXT) umfpack_zl_wsolve.$(OBJEXT) \
	umfpack_zl_col_to_triplet.$(OBJEXT) \
	umfpack_zl_defaults.$(OBJEXT) \
	umfpack_zl_free_numeric.$(OBJEXT) \
	umfpack_zl_free_symbolic.$(OBJEXT) \
	umfpack_zl_get_numeric.$(OBJEXT) umfpack_zl_get_lunz.$(OBJEXT) \
	umfpack_zl_get_symbolic.$(OBJEXT) \
	umfpack_zl_get_determinant.$(OBJEXT) \
	umfpack_zl_numeric.$(OBJEXT) umfpack_zl_qsymbolic.$(OBJEXT) \
	umfpack_zl_report_control.$(OBJEXT) \
	umfpack_zl_report_info.$(OBJEXT) \
	umfpack_zl_report_matrix.$(OBJEXT) \
	umfpack_zl_report_numeric.$(OBJEXT) \
	umfpack_zl_report_perm.$(OBJEXT) \
	umfpack_zl_report_status.$(OBJEXT) \
	umfpack_zl_report_symbolic.$(OBJEXT) \
	umfpack_zl_report_triplet.$(OBJEXT) \
	umfpack_zl_report_vector.$(OBJEXT) umfpack_zl_solve.$(OBJEXT) \
	umfpack_zl_symbolic.$(OBJEXT) umfpack_zl_transpose.$(OBJEXT) \
	umfpack_zl_triplet_to_col.$(OBJEXT) umfpack_zl_scale.$(OBJEXT) \
	umfpack_zl_load_numeric.$(OBJEXT) \
	umfpack_zl_save_numeric.$(OBJEXT) \
	umfpack_zl_load_symbolic.$(OBJEXT) \
	umfpack_zl_save_symbolic.$(OBJEXT)
am__objects_2 = umfpack_timer.$(OBJEXT) umfpack_tictoc.$(OBJEXT) \
	umf4_f_f77wrapper.$(OBJEXT) umf4_f_f77zwrapper.$(OBJEXT) \
	$(am__objects_1)
am_libumfpack_a_OBJECTS = $(am__objects_2)
libumfpack_a_OBJECTS = $(am_libumfpack_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libumfpack_a_SOURCES)
DIST_SOURCES = $(libumfpack_a_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/vierinen/src/newelmer/umfpack/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/vierinen/src/newelmer/umfpack/missing --run tar
AR = ar
ARFLAGS = cru
AUTOCONF = ${SHELL} /home/vierinen/src/newelmer/umfpack/missing --run autoconf
AUTOHEADER = ${SHELL} /home/vierinen/src/newelmer/umfpack/missing --run autoheader
AUTOMAKE = ${SHELL} /home/vierinen/src/newelmer/umfpack/missing --run automake-1.9
AWK = gawk
B64FLAGS = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -O
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"umfpack\" -DVERSION=\"1.0.0\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_VOIDP=0 -DARCH_64_BITS=1 -DSTDC_HEADERS=1 
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = g77
FFLAGS = -O
GREP = /bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/vierinen/src/newelmer/umfpack/missing --run makeinfo
OBJEXT = o
PACKAGE = umfpack
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
USE_64BIT_ARCH_FALSE = 
USE_64BIT_ARCH_TRUE = #
VERSION = 1.0.0
ac_ct_CC = gcc
ac_ct_F77 = g77
ac_ct_RANLIB = ranlib
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
canonical_host_type = i686-pc-linux-gnu
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/vierinen/src/newelmer/umfpack/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
SUBDIRS = include
UMFPACK_CPP_SOURCES = \
	umf_i_analyze.c \
	umf_i_apply_order.c \
	umf_i_colamd.c \
	umf_i_free.c \
	umf_i_fsize.c \
	umf_i_is_permutation.c \
	umf_i_malloc.c \
	umf_i_realloc.c \
	umf_i_report_perm.c \
	umf_i_singletons.c \
	umf_l_analyze.c \
	umf_l_apply_order.c \
	umf_l_colamd.c \
	umf_l_free.c \
	umf_l_fsize.c \
	umf_l_is_permutation.c \
	umf_l_malloc.c \
	umf_l_realloc.c \
	umf_l_report_perm.c \
	umf_l_singletons.c \
	umf_di_lhsolve.c \
	umf_di_uhsolve.c \
	umf_di_triplet_map_nox.c \
	umf_di_triplet_nomap_x.c \
	umf_di_triplet_nomap_nox.c \
	umf_di_triplet_map_x.c \
	umf_di_assemble_fixq.c \
	umf_di_store_lu_drop.c \
	umf_di_assemble.c \
	umf_di_blas3_update.c \
	umf_di_build_tuples.c \
	umf_di_create_element.c \
	umf_di_dump.c \
	umf_di_extend_front.c \
	umf_di_garbage_collection.c \
	umf_di_get_memory.c \
	umf_di_init_front.c \
	umf_di_kernel.c \
	umf_di_kernel_init.c \
	umf_di_kernel_wrapup.c \
	umf_di_local_search.c \
	umf_di_lsolve.c \
	umf_di_ltsolve.c \
	umf_di_mem_alloc_element.c \
	umf_di_mem_alloc_head_block.c \
	umf_di_mem_alloc_tail_block.c \
	umf_di_mem_free_tail_block.c \
	umf_di_mem_init_memoryspace.c \
	umf_di_report_vector.c \
	umf_di_row_search.c \
	umf_di_scale_column.c \
	umf_di_set_stats.c \
	umf_di_solve.c \
	umf_di_symbolic_usage.c \
	umf_di_transpose.c \
	umf_di_tuple_lengths.c \
	umf_di_usolve.c \
	umf_di_utsolve.c \
	umf_di_valid_numeric.c \
	umf_di_valid_symbolic.c \
	umf_di_grow_front.c \
	umf_di_start_front.c \
	umf_di_2by2.c \
	umf_di_store_lu.c \
	umf_di_scale.c \
	umfpack_di_wsolve.c \
	umfpack_di_col_to_triplet.c \
	umfpack_di_defaults.c \
	umfpack_di_free_numeric.c \
	umfpack_di_free_symbolic.c \
	umfpack_di_get_numeric.c \
	umfpack_di_get_lunz.c \
	umfpack_di_get_symbolic.c \
	umfpack_di_get_determinant.c \
	umfpack_di_numeric.c \
	umfpack_di_qsymbolic.c \
	umfpack_di_report_control.c \
	umfpack_di_report_info.c \
	umfpack_di_report_matrix.c \
	umfpack_di_report_numeric.c \
	umfpack_di_report_perm.c \
	umfpack_di_report_status.c \
	umfpack_di_report_symbolic.c \
	umfpack_di_report_triplet.c \
	umfpack_di_report_vector.c \
	umfpack_di_solve.c \
	umfpack_di_symbolic.c \
	umfpack_di_transpose.c \
	umfpack_di_triplet_to_col.c \
	umfpack_di_scale.c \
	umfpack_di_load_numeric.c \
	umfpack_di_save_numeric.c \
	umfpack_di_load_symbolic.c \
	umfpack_di_save_symbolic.c \
	umf_dl_lhsolve.c \
	umf_dl_uhsolve.c \
	umf_dl_triplet_map_nox.c \
	umf_dl_triplet_nomap_x.c \
	umf_dl_triplet_nomap_nox.c \
	umf_dl_triplet_map_x.c \
	umf_dl_assemble_fixq.c \
	umf_dl_store_lu_drop.c \
	umf_dl_assemble.c \
	umf_dl_blas3_update.c \
	umf_dl_build_tuples.c \
	umf_dl_create_element.c \
	umf_dl_dump.c \
	umf_dl_extend_front.c \
	umf_dl_garbage_collection.c \
	umf_dl_get_memory.c \
	umf_dl_init_front.c \
	umf_dl_kernel.c \
	umf_dl_kernel_init.c \
	umf_dl_kernel_wrapup.c \
	umf_dl_local_search.c \
	umf_dl_lsolve.c \
	umf_dl_ltsolve.c \
	umf_dl_mem_alloc_element.c \
	umf_dl_mem_alloc_head_block.c \
	umf_dl_mem_alloc_tail_block.c \
	umf_dl_mem_free_tail_block.c \
	umf_dl_mem_init_memoryspace.c \
	umf_dl_report_vector.c \
	umf_dl_row_search.c \
	umf_dl_scale_column.c \
	umf_dl_set_stats.c \
	umf_dl_solve.c \
	umf_dl_symbolic_usage.c \
	umf_dl_transpose.c \
	umf_dl_tuple_lengths.c \
	umf_dl_usolve.c \
	umf_dl_utsolve.c \
	umf_dl_valid_numeric.c \
	umf_dl_valid_symbolic.c \
	umf_dl_grow_front.c \
	umf_dl_start_front.c \
	umf_dl_2by2.c \
	umf_dl_store_lu.c \
	umf_dl_scale.c \
	umfpack_dl_wsolve.c \
	umfpack_dl_col_to_triplet.c \
	umfpack_dl_defaults.c \
	umfpack_dl_free_numeric.c \
	umfpack_dl_free_symbolic.c \
	umfpack_dl_get_numeric.c \
	umfpack_dl_get_lunz.c \
	umfpack_dl_get_symbolic.c \
	umfpack_dl_get_determinant.c \
	umfpack_dl_numeric.c \
	umfpack_dl_qsymbolic.c \
	umfpack_dl_report_control.c \
	umfpack_dl_report_info.c \
	umfpack_dl_report_matrix.c \
	umfpack_dl_report_numeric.c \
	umfpack_dl_report_perm.c \
	umfpack_dl_report_status.c \
	umfpack_dl_report_symbolic.c \
	umfpack_dl_report_triplet.c \
	umfpack_dl_report_vector.c \
	umfpack_dl_solve.c \
	umfpack_dl_symbolic.c \
	umfpack_dl_transpose.c \
	umfpack_dl_triplet_to_col.c \
	umfpack_dl_scale.c \
	umfpack_dl_load_numeric.c \
	umfpack_dl_save_numeric.c \
	umfpack_dl_load_symbolic.c \
	umfpack_dl_save_symbolic.c \
	umf_zi_lhsolve.c \
	umf_zi_uhsolve.c \
	umf_zi_triplet_map_nox.c \
	umf_zi_triplet_nomap_x.c \
	umf_zi_triplet_nomap_nox.c \
	umf_zi_triplet_map_x.c \
	umf_zi_assemble_fixq.c \
	umf_zi_store_lu_drop.c \
	umf_zi_assemble.c \
	umf_zi_blas3_update.c \
	umf_zi_build_tuples.c \
	umf_zi_create_element.c \
	umf_zi_dump.c \
	umf_zi_extend_front.c \
	umf_zi_garbage_collection.c \
	umf_zi_get_memory.c \
	umf_zi_init_front.c \
	umf_zi_kernel.c \
	umf_zi_kernel_init.c \
	umf_zi_kernel_wrapup.c \
	umf_zi_local_search.c \
	umf_zi_lsolve.c \
	umf_zi_ltsolve.c \
	umf_zi_mem_alloc_element.c \
	umf_zi_mem_alloc_head_block.c \
	umf_zi_mem_alloc_tail_block.c \
	umf_zi_mem_free_tail_block.c \
	umf_zi_mem_init_memoryspace.c \
	umf_zi_report_vector.c \
	umf_zi_row_search.c \
	umf_zi_scale_column.c \
	umf_zi_set_stats.c \
	umf_zi_solve.c \
	umf_zi_symbolic_usage.c \
	umf_zi_transpose.c \
	umf_zi_tuple_lengths.c \
	umf_zi_usolve.c \
	umf_zi_utsolve.c \
	umf_zi_valid_numeric.c \
	umf_zi_valid_symbolic.c \
	umf_zi_grow_front.c \
	umf_zi_start_front.c \
	umf_zi_2by2.c \
	umf_zi_store_lu.c \
	umf_zi_scale.c \
	umfpack_zi_wsolve.c \
	umfpack_zi_col_to_triplet.c \
	umfpack_zi_defaults.c \
	umfpack_zi_free_numeric.c \
	umfpack_zi_free_symbolic.c \
	umfpack_zi_get_numeric.c \
	umfpack_zi_get_lunz.c \
	umfpack_zi_get_symbolic.c \
	umfpack_zi_get_determinant.c \
	umfpack_zi_numeric.c \
	umfpack_zi_qsymbolic.c \
	umfpack_zi_report_control.c \
	umfpack_zi_report_info.c \
	umfpack_zi_report_matrix.c \
	umfpack_zi_report_numeric.c \
	umfpack_zi_report_perm.c \
	umfpack_zi_report_status.c \
	umfpack_zi_report_symbolic.c \
	umfpack_zi_report_triplet.c \
	umfpack_zi_report_vector.c \
	umfpack_zi_solve.c \
	umfpack_zi_symbolic.c \
	umfpack_zi_transpose.c \
	umfpack_zi_triplet_to_col.c \
	umfpack_zi_scale.c \
	umfpack_zi_load_numeric.c \
	umfpack_zi_save_numeric.c \
	umfpack_zi_load_symbolic.c \
	umfpack_zi_save_symbolic.c \
	umf_zl_lhsolve.c \
	umf_zl_uhsolve.c \
	umf_zl_triplet_map_nox.c \
	umf_zl_triplet_nomap_x.c \
	umf_zl_triplet_nomap_nox.c \
	umf_zl_triplet_map_x.c \
	umf_zl_assemble_fixq.c \
	umf_zl_store_lu_drop.c \
	umf_zl_assemble.c \
	umf_zl_blas3_update.c \
	umf_zl_build_tuples.c \
	umf_zl_create_element.c \
	umf_zl_dump.c \
	umf_zl_extend_front.c \
	umf_zl_garbage_collection.c \
	umf_zl_get_memory.c \
	umf_zl_init_front.c \
	umf_zl_kernel.c \
	umf_zl_kernel_init.c \
	umf_zl_kernel_wrapup.c \
	umf_zl_local_search.c \
	umf_zl_lsolve.c \
	umf_zl_ltsolve.c \
	umf_zl_mem_alloc_element.c \
	umf_zl_mem_alloc_head_block.c \
	umf_zl_mem_alloc_tail_block.c \
	umf_zl_mem_free_tail_block.c \
	umf_zl_mem_init_memoryspace.c \
	umf_zl_report_vector.c \
	umf_zl_row_search.c \
	umf_zl_scale_column.c \
	umf_zl_set_stats.c \
	umf_zl_solve.c \
	umf_zl_symbolic_usage.c \
	umf_zl_transpose.c \
	umf_zl_tuple_lengths.c \
	umf_zl_usolve.c \
	umf_zl_utsolve.c \
	umf_zl_valid_numeric.c \
	umf_zl_valid_symbolic.c \
	umf_zl_grow_front.c \
	umf_zl_start_front.c \
	umf_zl_2by2.c \
	umf_zl_store_lu.c \
	umf_zl_scale.c \
	umfpack_zl_wsolve.c \
	umfpack_zl_col_to_triplet.c \
	umfpack_zl_defaults.c \
	umfpack_zl_free_numeric.c \
	umfpack_zl_free_symbolic.c \
	umfpack_zl_get_numeric.c \
	umfpack_zl_get_lunz.c \
	umfpack_zl_get_symbolic.c \
	umfpack_zl_get_determinant.c \
	umfpack_zl_numeric.c \
	umfpack_zl_qsymbolic.c \
	umfpack_zl_report_control.c \
	umfpack_zl_report_info.c \
	umfpack_zl_report_matrix.c \
	umfpack_zl_report_numeric.c \
	umfpack_zl_report_perm.c \
	umfpack_zl_report_status.c \
	umfpack_zl_report_symbolic.c \
	umfpack_zl_report_triplet.c \
	umfpack_zl_report_vector.c \
	umfpack_zl_solve.c \
	umfpack_zl_symbolic.c \
	umfpack_zl_transpose.c \
	umfpack_zl_triplet_to_col.c \
	umfpack_zl_scale.c \
	umfpack_zl_load_numeric.c \
	umfpack_zl_save_numeric.c \
	umfpack_zl_load_symbolic.c \
	umfpack_zl_save_symbolic.c

UMFPACK_ORIG_SOURCES = \
	umf_usolve.c \
	umf_triplet.c \
	umfpack_get_determinant.c \
	umfpack_get_lunz.c \
	umfpack_get_symbolic.c \
	umfpack_report_numeric.c \
	umfpack_qsymbolic.c \
	umf_assemble.c \
	umf_local_search.c \
	umfpack_report_matrix.c \
	umfpack_defaults.c \
	umf_scale.c \
	umf_kernel_init.c \
	umfpack_solve.c \
	umf_start_front.c \
	umfpack_save_numeric.c \
	umfpack_numeric.c \
	umf_2by2.c \
	umfpack_col_to_triplet.c \
	umf_free.c \
	umf_lsolve.c \
	umfpack_save_symbolic.c \
	umf_grow_front.c \
	umfpack_free_numeric.c \
	umf_solve.c \
	umf_ltsolve.c \
	umf_kernel.c \
	umfpack_symbolic.c \
	umf_row_search.c \
	umf_mem_alloc_tail_block.c \
	umf_garbage_collection.c \
	umf_colamd.c \
	umf_fsize.c \
	umf_is_permutation.c \
	umf_get_memory.c \
	umf_mem_alloc_element.c \
	umf_mem_free_tail_block.c \
	umfpack_report_status.c \
	umfpack_report_control.c \
	umf_utsolve.c \
	umf_symbolic_usage.c \
	umf_valid_symbolic.c \
	umfpack_report_perm.c \
	umfpack_report_triplet.c \
	umfpack_report_symbolic.c \
	umfpack_report_vector.c \
	umf_dump.c \
	umf_blas3_update.c \
	umfpack_triplet_to_col.c \
	umfpack_get_numeric.c \
	umf_transpose.c \
	umf_kernel_wrapup.c \
	umfpack_free_symbolic.c \
	umf_tuple_lengths.c \
	umf_report_perm.c \
	umf_realloc.c \
	umf_mem_alloc_head_block.c \
	umfpack_load_numeric.c \
	umf_scale_column.c \
	umf_create_element.c \
	umf_apply_order.c \
	umfpack_scale.c \
	umf_set_stats.c \
	umf_extend_front.c \
	umf_mem_init_memoryspace.c \
	umf_valid_numeric.c \
	umf_init_front.c \
	umfpack_transpose.c \
	umfpack_report_info.c \
	umf_analyze.c \
	umfpack_load_symbolic.c \
	umf_malloc.c \
	umf_store_lu.c \
	umf_singletons.c \
	umf_report_vector.c \
	umf_build_tuples.c


#-------------------------------------------------------------------------------
# source files
#-------------------------------------------------------------------------------
EXTRA_DIST = $(UMFPACK_ORIG_SOURCES) umf4_f77wrapper.c umf4_f77zwrapper.c
UMFPACK_SOURCES = umfpack_timer.c umfpack_tictoc.c umf4_f_f77wrapper.c umf4_f_f77zwrapper.c $(UMFPACK_CPP_SOURCES)
INCLUDES = \
	-I./include/       \
	-I$(top_srcdir)/src/amd/include     \
	-I$(top_srcdir)/src/amd \
	-I.         

lib_LIBRARIES = libumfpack.a
libumfpack_a_SOURCES = $(UMFPACK_SOURCES)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/make.dep $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/umfpack/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/umfpack/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libumfpack.a: $(libumfpack_a_OBJECTS) $(libumfpack_a_DEPENDENCIES) 
	-rm -f libumfpack.a
	$(libumfpack_a_AR) libumfpack.a $(libumfpack_a_OBJECTS) $(libumfpack_a_LIBADD)
	$(RANLIB) libumfpack.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/umf4_f_f77wrapper.Po
include ./$(DEPDIR)/umf4_f_f77zwrapper.Po
include ./$(DEPDIR)/umf_di_2by2.Po
include ./$(DEPDIR)/umf_di_assemble.Po
include ./$(DEPDIR)/umf_di_assemble_fixq.Po
include ./$(DEPDIR)/umf_di_blas3_update.Po
include ./$(DEPDIR)/umf_di_build_tuples.Po
include ./$(DEPDIR)/umf_di_create_element.Po
include ./$(DEPDIR)/umf_di_dump.Po
include ./$(DEPDIR)/umf_di_extend_front.Po
include ./$(DEPDIR)/umf_di_garbage_collection.Po
include ./$(DEPDIR)/umf_di_get_memory.Po
include ./$(DEPDIR)/umf_di_grow_front.Po
include ./$(DEPDIR)/umf_di_init_front.Po
include ./$(DEPDIR)/umf_di_kernel.Po
include ./$(DEPDIR)/umf_di_kernel_init.Po
include ./$(DEPDIR)/umf_di_kernel_wrapup.Po
include ./$(DEPDIR)/umf_di_lhsolve.Po
include ./$(DEPDIR)/umf_di_local_search.Po
include ./$(DEPDIR)/umf_di_lsolve.Po
include ./$(DEPDIR)/umf_di_ltsolve.Po
include ./$(DEPDIR)/umf_di_mem_alloc_element.Po
include ./$(DEPDIR)/umf_di_mem_alloc_head_block.Po
include ./$(DEPDIR)/umf_di_mem_alloc_tail_block.Po
include ./$(DEPDIR)/umf_di_mem_free_tail_block.Po
include ./$(DEPDIR)/umf_di_mem_init_memoryspace.Po
include ./$(DEPDIR)/umf_di_report_vector.Po
include ./$(DEPDIR)/umf_di_row_search.Po
include ./$(DEPDIR)/umf_di_scale.Po
include ./$(DEPDIR)/umf_di_scale_column.Po
include ./$(DEPDIR)/umf_di_set_stats.Po
include ./$(DEPDIR)/umf_di_solve.Po
include ./$(DEPDIR)/umf_di_start_front.Po
include ./$(DEPDIR)/umf_di_store_lu.Po
include ./$(DEPDIR)/umf_di_store_lu_drop.Po
include ./$(DEPDIR)/umf_di_symbolic_usage.Po
include ./$(DEPDIR)/umf_di_transpose.Po
include ./$(DEPDIR)/umf_di_triplet_map_nox.Po
include ./$(DEPDIR)/umf_di_triplet_map_x.Po
include ./$(DEPDIR)/umf_di_triplet_nomap_nox.Po
include ./$(DEPDIR)/umf_di_triplet_nomap_x.Po
include ./$(DEPDIR)/umf_di_tuple_lengths.Po
include ./$(DEPDIR)/umf_di_uhsolve.Po
include ./$(DEPDIR)/umf_di_usolve.Po
include ./$(DEPDIR)/umf_di_utsolve.Po
include ./$(DEPDIR)/umf_di_valid_numeric.Po
include ./$(DEPDIR)/umf_di_valid_symbolic.Po
include ./$(DEPDIR)/umf_dl_2by2.Po
include ./$(DEPDIR)/umf_dl_assemble.Po
include ./$(DEPDIR)/umf_dl_assemble_fixq.Po
include ./$(DEPDIR)/umf_dl_blas3_update.Po
include ./$(DEPDIR)/umf_dl_build_tuples.Po
include ./$(DEPDIR)/umf_dl_create_element.Po
include ./$(DEPDIR)/umf_dl_dump.Po
include ./$(DEPDIR)/umf_dl_extend_front.Po
include ./$(DEPDIR)/umf_dl_garbage_collection.Po
include ./$(DEPDIR)/umf_dl_get_memory.Po
include ./$(DEPDIR)/umf_dl_grow_front.Po
include ./$(DEPDIR)/umf_dl_init_front.Po
include ./$(DEPDIR)/umf_dl_kernel.Po
include ./$(DEPDIR)/umf_dl_kernel_init.Po
include ./$(DEPDIR)/umf_dl_kernel_wrapup.Po
include ./$(DEPDIR)/umf_dl_lhsolve.Po
include ./$(DEPDIR)/umf_dl_local_search.Po
include ./$(DEPDIR)/umf_dl_lsolve.Po
include ./$(DEPDIR)/umf_dl_ltsolve.Po
include ./$(DEPDIR)/umf_dl_mem_alloc_element.Po
include ./$(DEPDIR)/umf_dl_mem_alloc_head_block.Po
include ./$(DEPDIR)/umf_dl_mem_alloc_tail_block.Po
include ./$(DEPDIR)/umf_dl_mem_free_tail_block.Po
include ./$(DEPDIR)/umf_dl_mem_init_memoryspace.Po
include ./$(DEPDIR)/umf_dl_report_vector.Po
include ./$(DEPDIR)/umf_dl_row_search.Po
include ./$(DEPDIR)/umf_dl_scale.Po
include ./$(DEPDIR)/umf_dl_scale_column.Po
include ./$(DEPDIR)/umf_dl_set_stats.Po
include ./$(DEPDIR)/umf_dl_solve.Po
include ./$(DEPDIR)/umf_dl_start_front.Po
include ./$(DEPDIR)/umf_dl_store_lu.Po
include ./$(DEPDIR)/umf_dl_store_lu_drop.Po
include ./$(DEPDIR)/umf_dl_symbolic_usage.Po
include ./$(DEPDIR)/umf_dl_transpose.Po
include ./$(DEPDIR)/umf_dl_triplet_map_nox.Po
include ./$(DEPDIR)/umf_dl_triplet_map_x.Po
include ./$(DEPDIR)/umf_dl_triplet_nomap_nox.Po
include ./$(DEPDIR)/umf_dl_triplet_nomap_x.Po
include ./$(DEPDIR)/umf_dl_tuple_lengths.Po
include ./$(DEPDIR)/umf_dl_uhsolve.Po
include ./$(DEPDIR)/umf_dl_usolve.Po
include ./$(DEPDIR)/umf_dl_utsolve.Po
include ./$(DEPDIR)/umf_dl_valid_numeric.Po
include ./$(DEPDIR)/umf_dl_valid_symbolic.Po
include ./$(DEPDIR)/umf_i_analyze.Po
include ./$(DEPDIR)/umf_i_apply_order.Po
include ./$(DEPDIR)/umf_i_colamd.Po
include ./$(DEPDIR)/umf_i_free.Po
include ./$(DEPDIR)/umf_i_fsize.Po
include ./$(DEPDIR)/umf_i_is_permutation.Po
include ./$(DEPDIR)/umf_i_malloc.Po
include ./$(DEPDIR)/umf_i_realloc.Po
include ./$(DEPDIR)/umf_i_report_perm.Po
include ./$(DEPDIR)/umf_i_singletons.Po
include ./$(DEPDIR)/umf_l_analyze.Po
include ./$(DEPDIR)/umf_l_apply_order.Po
include ./$(DEPDIR)/umf_l_colamd.Po
include ./$(DEPDIR)/umf_l_free.Po
include ./$(DEPDIR)/umf_l_fsize.Po
include ./$(DEPDIR)/umf_l_is_permutation.Po
include ./$(DEPDIR)/umf_l_malloc.Po
include ./$(DEPDIR)/umf_l_realloc.Po
include ./$(DEPDIR)/umf_l_report_perm.Po
include ./$(DEPDIR)/umf_l_singletons.Po
include ./$(DEPDIR)/umf_zi_2by2.Po
include ./$(DEPDIR)/umf_zi_assemble.Po
include ./$(DEPDIR)/umf_zi_assemble_fixq.Po
include ./$(DEPDIR)/umf_zi_blas3_update.Po
include ./$(DEPDIR)/umf_zi_build_tuples.Po
include ./$(DEPDIR)/umf_zi_create_element.Po
include ./$(DEPDIR)/umf_zi_dump.Po
include ./$(DEPDIR)/umf_zi_extend_front.Po
include ./$(DEPDIR)/umf_zi_garbage_collection.Po
include ./$(DEPDIR)/umf_zi_get_memory.Po
include ./$(DEPDIR)/umf_zi_grow_front.Po
include ./$(DEPDIR)/umf_zi_init_front.Po
include ./$(DEPDIR)/umf_zi_kernel.Po
include ./$(DEPDIR)/umf_zi_kernel_init.Po
include ./$(DEPDIR)/umf_zi_kernel_wrapup.Po
include ./$(DEPDIR)/umf_zi_lhsolve.Po
include ./$(DEPDIR)/umf_zi_local_search.Po
include ./$(DEPDIR)/umf_zi_lsolve.Po
include ./$(DEPDIR)/umf_zi_ltsolve.Po
include ./$(DEPDIR)/umf_zi_mem_alloc_element.Po
include ./$(DEPDIR)/umf_zi_mem_alloc_head_block.Po
include ./$(DEPDIR)/umf_zi_mem_alloc_tail_block.Po
include ./$(DEPDIR)/umf_zi_mem_free_tail_block.Po
include ./$(DEPDIR)/umf_zi_mem_init_memoryspace.Po
include ./$(DEPDIR)/umf_zi_report_vector.Po
include ./$(DEPDIR)/umf_zi_row_search.Po
include ./$(DEPDIR)/umf_zi_scale.Po
include ./$(DEPDIR)/umf_zi_scale_column.Po
include ./$(DEPDIR)/umf_zi_set_stats.Po
include ./$(DEPDIR)/umf_zi_solve.Po
include ./$(DEPDIR)/umf_zi_start_front.Po
include ./$(DEPDIR)/umf_zi_store_lu.Po
include ./$(DEPDIR)/umf_zi_store_lu_drop.Po
include ./$(DEPDIR)/umf_zi_symbolic_usage.Po
include ./$(DEPDIR)/umf_zi_transpose.Po
include ./$(DEPDIR)/umf_zi_triplet_map_nox.Po
include ./$(DEPDIR)/umf_zi_triplet_map_x.Po
include ./$(DEPDIR)/umf_zi_triplet_nomap_nox.Po
include ./$(DEPDIR)/umf_zi_triplet_nomap_x.Po
include ./$(DEPDIR)/umf_zi_tuple_lengths.Po
include ./$(DEPDIR)/umf_zi_uhsolve.Po
include ./$(DEPDIR)/umf_zi_usolve.Po
include ./$(DEPDIR)/umf_zi_utsolve.Po
include ./$(DEPDIR)/umf_zi_valid_numeric.Po
include ./$(DEPDIR)/umf_zi_valid_symbolic.Po
include ./$(DEPDIR)/umf_zl_2by2.Po
include ./$(DEPDIR)/umf_zl_assemble.Po
include ./$(DEPDIR)/umf_zl_assemble_fixq.Po
include ./$(DEPDIR)/umf_zl_blas3_update.Po
include ./$(DEPDIR)/umf_zl_build_tuples.Po
include ./$(DEPDIR)/umf_zl_create_element.Po
include ./$(DEPDIR)/umf_zl_dump.Po
include ./$(DEPDIR)/umf_zl_extend_front.Po
include ./$(DEPDIR)/umf_zl_garbage_collection.Po
include ./$(DEPDIR)/umf_zl_get_memory.Po
include ./$(DEPDIR)/umf_zl_grow_front.Po
include ./$(DEPDIR)/umf_zl_init_front.Po
include ./$(DEPDIR)/umf_zl_kernel.Po
include ./$(DEPDIR)/umf_zl_kernel_init.Po
include ./$(DEPDIR)/umf_zl_kernel_wrapup.Po
include ./$(DEPDIR)/umf_zl_lhsolve.Po
include ./$(DEPDIR)/umf_zl_local_search.Po
include ./$(DEPDIR)/umf_zl_lsolve.Po
include ./$(DEPDIR)/umf_zl_ltsolve.Po
include ./$(DEPDIR)/umf_zl_mem_alloc_element.Po
include ./$(DEPDIR)/umf_zl_mem_alloc_head_block.Po
include ./$(DEPDIR)/umf_zl_mem_alloc_tail_block.Po
include ./$(DEPDIR)/umf_zl_mem_free_tail_block.Po
include ./$(DEPDIR)/umf_zl_mem_init_memoryspace.Po
include ./$(DEPDIR)/umf_zl_report_vector.Po
include ./$(DEPDIR)/umf_zl_row_search.Po
include ./$(DEPDIR)/umf_zl_scale.Po
include ./$(DEPDIR)/umf_zl_scale_column.Po
include ./$(DEPDIR)/umf_zl_set_stats.Po
include ./$(DEPDIR)/umf_zl_solve.Po
include ./$(DEPDIR)/umf_zl_start_front.Po
include ./$(DEPDIR)/umf_zl_store_lu.Po
include ./$(DEPDIR)/umf_zl_store_lu_drop.Po
include ./$(DEPDIR)/umf_zl_symbolic_usage.Po
include ./$(DEPDIR)/umf_zl_transpose.Po
include ./$(DEPDIR)/umf_zl_triplet_map_nox.Po
include ./$(DEPDIR)/umf_zl_triplet_map_x.Po
include ./$(DEPDIR)/umf_zl_triplet_nomap_nox.Po
include ./$(DEPDIR)/umf_zl_triplet_nomap_x.Po
include ./$(DEPDIR)/umf_zl_tuple_lengths.Po
include ./$(DEPDIR)/umf_zl_uhsolve.Po
include ./$(DEPDIR)/umf_zl_usolve.Po
include ./$(DEPDIR)/umf_zl_utsolve.Po
include ./$(DEPDIR)/umf_zl_valid_numeric.Po
include ./$(DEPDIR)/umf_zl_valid_symbolic.Po
include ./$(DEPDIR)/umfpack_di_col_to_triplet.Po
include ./$(DEPDIR)/umfpack_di_defaults.Po
include ./$(DEPDIR)/umfpack_di_free_numeric.Po
include ./$(DEPDIR)/umfpack_di_free_symbolic.Po
include ./$(DEPDIR)/umfpack_di_get_determinant.Po
include ./$(DEPDIR)/umfpack_di_get_lunz.Po
include ./$(DEPDIR)/umfpack_di_get_numeric.Po
include ./$(DEPDIR)/umfpack_di_get_symbolic.Po
include ./$(DEPDIR)/umfpack_di_load_numeric.Po
include ./$(DEPDIR)/umfpack_di_load_symbolic.Po
include ./$(DEPDIR)/umfpack_di_numeric.Po
include ./$(DEPDIR)/umfpack_di_qsymbolic.Po
include ./$(DEPDIR)/umfpack_di_report_control.Po
include ./$(DEPDIR)/umfpack_di_report_info.Po
include ./$(DEPDIR)/umfpack_di_report_matrix.Po
include ./$(DEPDIR)/umfpack_di_report_numeric.Po
include ./$(DEPDIR)/umfpack_di_report_perm.Po
include ./$(DEPDIR)/umfpack_di_report_status.Po
include ./$(DEPDIR)/umfpack_di_report_symbolic.Po
include ./$(DEPDIR)/umfpack_di_report_triplet.Po
include ./$(DEPDIR)/umfpack_di_report_vector.Po
include ./$(DEPDIR)/umfpack_di_save_numeric.Po
include ./$(DEPDIR)/umfpack_di_save_symbolic.Po
include ./$(DEPDIR)/umfpack_di_scale.Po
include ./$(DEPDIR)/umfpack_di_solve.Po
include ./$(DEPDIR)/umfpack_di_symbolic.Po
include ./$(DEPDIR)/umfpack_di_transpose.Po
include ./$(DEPDIR)/umfpack_di_triplet_to_col.Po
include ./$(DEPDIR)/umfpack_di_wsolve.Po
include ./$(DEPDIR)/umfpack_dl_col_to_triplet.Po
include ./$(DEPDIR)/umfpack_dl_defaults.Po
include ./$(DEPDIR)/umfpack_dl_free_numeric.Po
include ./$(DEPDIR)/umfpack_dl_free_symbolic.Po
include ./$(DEPDIR)/umfpack_dl_get_determinant.Po
include ./$(DEPDIR)/umfpack_dl_get_lunz.Po
include ./$(DEPDIR)/umfpack_dl_get_numeric.Po
include ./$(DEPDIR)/umfpack_dl_get_symbolic.Po
include ./$(DEPDIR)/umfpack_dl_load_numeric.Po
include ./$(DEPDIR)/umfpack_dl_load_symbolic.Po
include ./$(DEPDIR)/umfpack_dl_numeric.Po
include ./$(DEPDIR)/umfpack_dl_qsymbolic.Po
include ./$(DEPDIR)/umfpack_dl_report_control.Po
include ./$(DEPDIR)/umfpack_dl_report_info.Po
include ./$(DEPDIR)/umfpack_dl_report_matrix.Po
include ./$(DEPDIR)/umfpack_dl_report_numeric.Po
include ./$(DEPDIR)/umfpack_dl_report_perm.Po
include ./$(DEPDIR)/umfpack_dl_report_status.Po
include ./$(DEPDIR)/umfpack_dl_report_symbolic.Po
include ./$(DEPDIR)/umfpack_dl_report_triplet.Po
include ./$(DEPDIR)/umfpack_dl_report_vector.Po
include ./$(DEPDIR)/umfpack_dl_save_numeric.Po
include ./$(DEPDIR)/umfpack_dl_save_symbolic.Po
include ./$(DEPDIR)/umfpack_dl_scale.Po
include ./$(DEPDIR)/umfpack_dl_solve.Po
include ./$(DEPDIR)/umfpack_dl_symbolic.Po
include ./$(DEPDIR)/umfpack_dl_transpose.Po
include ./$(DEPDIR)/umfpack_dl_triplet_to_col.Po
include ./$(DEPDIR)/umfpack_dl_wsolve.Po
include ./$(DEPDIR)/umfpack_tictoc.Po
include ./$(DEPDIR)/umfpack_timer.Po
include ./$(DEPDIR)/umfpack_zi_col_to_triplet.Po
include ./$(DEPDIR)/umfpack_zi_defaults.Po
include ./$(DEPDIR)/umfpack_zi_free_numeric.Po
include ./$(DEPDIR)/umfpack_zi_free_symbolic.Po
include ./$(DEPDIR)/umfpack_zi_get_determinant.Po
include ./$(DEPDIR)/umfpack_zi_get_lunz.Po
include ./$(DEPDIR)/umfpack_zi_get_numeric.Po
include ./$(DEPDIR)/umfpack_zi_get_symbolic.Po
include ./$(DEPDIR)/umfpack_zi_load_numeric.Po
include ./$(DEPDIR)/umfpack_zi_load_symbolic.Po
include ./$(DEPDIR)/umfpack_zi_numeric.Po
include ./$(DEPDIR)/umfpack_zi_qsymbolic.Po
include ./$(DEPDIR)/umfpack_zi_report_control.Po
include ./$(DEPDIR)/umfpack_zi_report_info.Po
include ./$(DEPDIR)/umfpack_zi_report_matrix.Po
include ./$(DEPDIR)/umfpack_zi_report_numeric.Po
include ./$(DEPDIR)/umfpack_zi_report_perm.Po
include ./$(DEPDIR)/umfpack_zi_report_status.Po
include ./$(DEPDIR)/umfpack_zi_report_symbolic.Po
include ./$(DEPDIR)/umfpack_zi_report_triplet.Po
include ./$(DEPDIR)/umfpack_zi_report_vector.Po
include ./$(DEPDIR)/umfpack_zi_save_numeric.Po
include ./$(DEPDIR)/umfpack_zi_save_symbolic.Po
include ./$(DEPDIR)/umfpack_zi_scale.Po
include ./$(DEPDIR)/umfpack_zi_solve.Po
include ./$(DEPDIR)/umfpack_zi_symbolic.Po
include ./$(DEPDIR)/umfpack_zi_transpose.Po
include ./$(DEPDIR)/umfpack_zi_triplet_to_col.Po
include ./$(DEPDIR)/umfpack_zi_wsolve.Po
include ./$(DEPDIR)/umfpack_zl_col_to_triplet.Po
include ./$(DEPDIR)/umfpack_zl_defaults.Po
include ./$(DEPDIR)/umfpack_zl_free_numeric.Po
include ./$(DEPDIR)/umfpack_zl_free_symbolic.Po
include ./$(DEPDIR)/umfpack_zl_get_determinant.Po
include ./$(DEPDIR)/umfpack_zl_get_lunz.Po
include ./$(DEPDIR)/umfpack_zl_get_numeric.Po
include ./$(DEPDIR)/umfpack_zl_get_symbolic.Po
include ./$(DEPDIR)/umfpack_zl_load_numeric.Po
include ./$(DEPDIR)/umfpack_zl_load_symbolic.Po
include ./$(DEPDIR)/umfpack_zl_numeric.Po
include ./$(DEPDIR)/umfpack_zl_qsymbolic.Po
include ./$(DEPDIR)/umfpack_zl_report_control.Po
include ./$(DEPDIR)/umfpack_zl_report_info.Po
include ./$(DEPDIR)/umfpack_zl_report_matrix.Po
include ./$(DEPDIR)/umfpack_zl_report_numeric.Po
include ./$(DEPDIR)/umfpack_zl_report_perm.Po
include ./$(DEPDIR)/umfpack_zl_report_status.Po
include ./$(DEPDIR)/umfpack_zl_report_symbolic.Po
include ./$(DEPDIR)/umfpack_zl_report_triplet.Po
include ./$(DEPDIR)/umfpack_zl_report_vector.Po
include ./$(DEPDIR)/umfpack_zl_save_numeric.Po
include ./$(DEPDIR)/umfpack_zl_save_symbolic.Po
include ./$(DEPDIR)/umfpack_zl_scale.Po
include ./$(DEPDIR)/umfpack_zl_solve.Po
include ./$(DEPDIR)/umfpack_zl_symbolic.Po
include ./$(DEPDIR)/umfpack_zl_transpose.Po
include ./$(DEPDIR)/umfpack_zl_triplet_to_col.Po
include ./$(DEPDIR)/umfpack_zl_wsolve.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLIBRARIES clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-libLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libLIBRARIES

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libLIBRARIES clean-local \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-recursive \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-info-am \
	uninstall-libLIBRARIES

umf_i_analyze.c:
	$(CPP) $(INCLUDES)  -DDINT umf_analyze.c > umf_i_analyze.c
umf_i_apply_order.c:
	$(CPP) $(INCLUDES)  -DDINT umf_apply_order.c > umf_i_apply_order.c
umf_i_colamd.c:
	$(CPP) $(INCLUDES)  -DDINT umf_colamd.c > umf_i_colamd.c
umf_i_free.c:
	$(CPP) $(INCLUDES)  -DDINT umf_free.c > umf_i_free.c
umf_i_fsize.c:
	$(CPP) $(INCLUDES)  -DDINT umf_fsize.c > umf_i_fsize.c
umf_i_is_permutation.c:
	$(CPP) $(INCLUDES)  -DDINT umf_is_permutation.c > umf_i_is_permutation.c
umf_i_malloc.c:
	$(CPP) $(INCLUDES)  -DDINT umf_malloc.c > umf_i_malloc.c
umf_i_realloc.c:
	$(CPP) $(INCLUDES)  -DDINT umf_realloc.c > umf_i_realloc.c
umf_i_report_perm.c:
	$(CPP) $(INCLUDES)  -DDINT umf_report_perm.c > umf_i_report_perm.c
umf_i_singletons.c:
	$(CPP) $(INCLUDES)  -DDINT umf_singletons.c > umf_i_singletons.c
umf_l_analyze.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_analyze.c > umf_l_analyze.c
umf_l_apply_order.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_apply_order.c > umf_l_apply_order.c
umf_l_colamd.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_colamd.c > umf_l_colamd.c
umf_l_free.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_free.c > umf_l_free.c
umf_l_fsize.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_fsize.c > umf_l_fsize.c
umf_l_is_permutation.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_is_permutation.c > umf_l_is_permutation.c
umf_l_malloc.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_malloc.c > umf_l_malloc.c
umf_l_realloc.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_realloc.c > umf_l_realloc.c
umf_l_report_perm.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_report_perm.c > umf_l_report_perm.c
umf_l_singletons.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_singletons.c > umf_l_singletons.c
umf_di_lhsolve.c:
	$(CPP) $(INCLUDES)  -DDINT -DCONJUGATE_SOLVE umf_ltsolve.c > umf_di_lhsolve.c
umf_di_uhsolve.c:
	$(CPP) $(INCLUDES)  -DDINT -DCONJUGATE_SOLVE umf_utsolve.c > umf_di_uhsolve.c
umf_di_triplet_map_nox.c:
	$(CPP) $(INCLUDES)  -DDINT -DDO_MAP umf_triplet.c > umf_di_triplet_map_nox.c
umf_di_triplet_nomap_x.c:
	$(CPP) $(INCLUDES)  -DDINT -DDO_VALUES umf_triplet.c > umf_di_triplet_nomap_x.c
umf_di_triplet_nomap_nox.c:
	$(CPP) $(INCLUDES)  -DDINT umf_triplet.c > umf_di_triplet_nomap_nox.c
umf_di_triplet_map_x.c:
	$(CPP) $(INCLUDES)  -DDINT -DDO_MAP -DDO_VALUES umf_triplet.c > umf_di_triplet_map_x.c
umf_di_assemble_fixq.c:
	$(CPP) $(INCLUDES)  -DDINT -DFIXQ umf_assemble.c > umf_di_assemble_fixq.c
umf_di_store_lu_drop.c:
	$(CPP) $(INCLUDES)  -DDINT -DDROP umf_store_lu.c > umf_di_store_lu_drop.c
umf_di_assemble.c:
	$(CPP) $(INCLUDES)  -DDINT umf_assemble.c > umf_di_assemble.c
umf_di_blas3_update.c:
	$(CPP) $(INCLUDES)  -DDINT umf_blas3_update.c > umf_di_blas3_update.c
umf_di_build_tuples.c:
	$(CPP) $(INCLUDES)  -DDINT umf_build_tuples.c > umf_di_build_tuples.c
umf_di_create_element.c:
	$(CPP) $(INCLUDES)  -DDINT umf_create_element.c > umf_di_create_element.c
umf_di_dump.c:
	$(CPP) $(INCLUDES)  -DDINT umf_dump.c > umf_di_dump.c
umf_di_extend_front.c:
	$(CPP) $(INCLUDES)  -DDINT umf_extend_front.c > umf_di_extend_front.c
umf_di_garbage_collection.c:
	$(CPP) $(INCLUDES)  -DDINT umf_garbage_collection.c > umf_di_garbage_collection.c
umf_di_get_memory.c:
	$(CPP) $(INCLUDES)  -DDINT umf_get_memory.c > umf_di_get_memory.c
umf_di_init_front.c:
	$(CPP) $(INCLUDES)  -DDINT umf_init_front.c > umf_di_init_front.c
umf_di_kernel.c:
	$(CPP) $(INCLUDES)  -DDINT umf_kernel.c > umf_di_kernel.c
umf_di_kernel_init.c:
	$(CPP) $(INCLUDES)  -DDINT umf_kernel_init.c > umf_di_kernel_init.c
umf_di_kernel_wrapup.c:
	$(CPP) $(INCLUDES)  -DDINT umf_kernel_wrapup.c > umf_di_kernel_wrapup.c
umf_di_local_search.c:
	$(CPP) $(INCLUDES)  -DDINT umf_local_search.c > umf_di_local_search.c
umf_di_lsolve.c:
	$(CPP) $(INCLUDES)  -DDINT umf_lsolve.c > umf_di_lsolve.c
umf_di_ltsolve.c:
	$(CPP) $(INCLUDES)  -DDINT umf_ltsolve.c > umf_di_ltsolve.c
umf_di_mem_alloc_element.c:
	$(CPP) $(INCLUDES)  -DDINT umf_mem_alloc_element.c > umf_di_mem_alloc_element.c
umf_di_mem_alloc_head_block.c:
	$(CPP) $(INCLUDES)  -DDINT umf_mem_alloc_head_block.c > umf_di_mem_alloc_head_block.c
umf_di_mem_alloc_tail_block.c:
	$(CPP) $(INCLUDES)  -DDINT umf_mem_alloc_tail_block.c > umf_di_mem_alloc_tail_block.c
umf_di_mem_free_tail_block.c:
	$(CPP) $(INCLUDES)  -DDINT umf_mem_free_tail_block.c > umf_di_mem_free_tail_block.c
umf_di_mem_init_memoryspace.c:
	$(CPP) $(INCLUDES)  -DDINT umf_mem_init_memoryspace.c > umf_di_mem_init_memoryspace.c
umf_di_report_vector.c:
	$(CPP) $(INCLUDES)  -DDINT umf_report_vector.c > umf_di_report_vector.c
umf_di_row_search.c:
	$(CPP) $(INCLUDES)  -DDINT umf_row_search.c > umf_di_row_search.c
umf_di_scale_column.c:
	$(CPP) $(INCLUDES)  -DDINT umf_scale_column.c > umf_di_scale_column.c
umf_di_set_stats.c:
	$(CPP) $(INCLUDES)  -DDINT umf_set_stats.c > umf_di_set_stats.c
umf_di_solve.c:
	$(CPP) $(INCLUDES)  -DDINT umf_solve.c > umf_di_solve.c
umf_di_symbolic_usage.c:
	$(CPP) $(INCLUDES)  -DDINT umf_symbolic_usage.c > umf_di_symbolic_usage.c
umf_di_transpose.c:
	$(CPP) $(INCLUDES)  -DDINT umf_transpose.c > umf_di_transpose.c
umf_di_tuple_lengths.c:
	$(CPP) $(INCLUDES)  -DDINT umf_tuple_lengths.c > umf_di_tuple_lengths.c
umf_di_usolve.c:
	$(CPP) $(INCLUDES)  -DDINT umf_usolve.c > umf_di_usolve.c
umf_di_utsolve.c:
	$(CPP) $(INCLUDES)  -DDINT umf_utsolve.c > umf_di_utsolve.c
umf_di_valid_numeric.c:
	$(CPP) $(INCLUDES)  -DDINT umf_valid_numeric.c > umf_di_valid_numeric.c
umf_di_valid_symbolic.c:
	$(CPP) $(INCLUDES)  -DDINT umf_valid_symbolic.c > umf_di_valid_symbolic.c
umf_di_grow_front.c:
	$(CPP) $(INCLUDES)  -DDINT umf_grow_front.c > umf_di_grow_front.c
umf_di_start_front.c:
	$(CPP) $(INCLUDES)  -DDINT umf_start_front.c > umf_di_start_front.c
umf_di_2by2.c:
	$(CPP) $(INCLUDES)  -DDINT umf_2by2.c > umf_di_2by2.c
umf_di_store_lu.c:
	$(CPP) $(INCLUDES)  -DDINT umf_store_lu.c > umf_di_store_lu.c
umf_di_scale.c:
	$(CPP) $(INCLUDES)  -DDINT umf_scale.c > umf_di_scale.c
umfpack_di_wsolve.c:
	$(CPP) $(INCLUDES)  -DDINT -DWSOLVE umfpack_solve.c > umfpack_di_wsolve.c
umfpack_di_col_to_triplet.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_col_to_triplet.c > umfpack_di_col_to_triplet.c
umfpack_di_defaults.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_defaults.c > umfpack_di_defaults.c
umfpack_di_free_numeric.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_free_numeric.c > umfpack_di_free_numeric.c
umfpack_di_free_symbolic.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_free_symbolic.c > umfpack_di_free_symbolic.c
umfpack_di_get_numeric.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_get_numeric.c > umfpack_di_get_numeric.c
umfpack_di_get_lunz.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_get_lunz.c > umfpack_di_get_lunz.c
umfpack_di_get_symbolic.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_get_symbolic.c > umfpack_di_get_symbolic.c
umfpack_di_get_determinant.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_get_determinant.c > umfpack_di_get_determinant.c
umfpack_di_numeric.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_numeric.c > umfpack_di_numeric.c
umfpack_di_qsymbolic.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_qsymbolic.c > umfpack_di_qsymbolic.c
umfpack_di_report_control.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_report_control.c > umfpack_di_report_control.c
umfpack_di_report_info.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_report_info.c > umfpack_di_report_info.c
umfpack_di_report_matrix.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_report_matrix.c > umfpack_di_report_matrix.c
umfpack_di_report_numeric.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_report_numeric.c > umfpack_di_report_numeric.c
umfpack_di_report_perm.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_report_perm.c > umfpack_di_report_perm.c
umfpack_di_report_status.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_report_status.c > umfpack_di_report_status.c
umfpack_di_report_symbolic.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_report_symbolic.c > umfpack_di_report_symbolic.c
umfpack_di_report_triplet.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_report_triplet.c > umfpack_di_report_triplet.c
umfpack_di_report_vector.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_report_vector.c > umfpack_di_report_vector.c
umfpack_di_solve.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_solve.c > umfpack_di_solve.c
umfpack_di_symbolic.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_symbolic.c > umfpack_di_symbolic.c
umfpack_di_transpose.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_transpose.c > umfpack_di_transpose.c
umfpack_di_triplet_to_col.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_triplet_to_col.c > umfpack_di_triplet_to_col.c
umfpack_di_scale.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_scale.c > umfpack_di_scale.c
umfpack_di_load_numeric.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_load_numeric.c > umfpack_di_load_numeric.c
umfpack_di_save_numeric.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_save_numeric.c > umfpack_di_save_numeric.c
umfpack_di_load_symbolic.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_load_symbolic.c > umfpack_di_load_symbolic.c
umfpack_di_save_symbolic.c:
	$(CPP) $(INCLUDES)  -DDINT umfpack_save_symbolic.c > umfpack_di_save_symbolic.c
umf_dl_lhsolve.c:
	$(CPP) $(INCLUDES)  -DDLONG -DCONJUGATE_SOLVE umf_ltsolve.c > umf_dl_lhsolve.c
umf_dl_uhsolve.c:
	$(CPP) $(INCLUDES)  -DDLONG -DCONJUGATE_SOLVE umf_utsolve.c > umf_dl_uhsolve.c
umf_dl_triplet_map_nox.c:
	$(CPP) $(INCLUDES)  -DDLONG -DDO_MAP umf_triplet.c > umf_dl_triplet_map_nox.c
umf_dl_triplet_nomap_x.c:
	$(CPP) $(INCLUDES)  -DDLONG -DDO_VALUES umf_triplet.c > umf_dl_triplet_nomap_x.c
umf_dl_triplet_nomap_nox.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_triplet.c > umf_dl_triplet_nomap_nox.c
umf_dl_triplet_map_x.c:
	$(CPP) $(INCLUDES)  -DDLONG -DDO_MAP -DDO_VALUES umf_triplet.c > umf_dl_triplet_map_x.c
umf_dl_assemble_fixq.c:
	$(CPP) $(INCLUDES)  -DDLONG -DFIXQ umf_assemble.c > umf_dl_assemble_fixq.c
umf_dl_store_lu_drop.c:
	$(CPP) $(INCLUDES)  -DDLONG -DDROP umf_store_lu.c > umf_dl_store_lu_drop.c
umf_dl_assemble.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_assemble.c > umf_dl_assemble.c
umf_dl_blas3_update.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_blas3_update.c > umf_dl_blas3_update.c
umf_dl_build_tuples.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_build_tuples.c > umf_dl_build_tuples.c
umf_dl_create_element.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_create_element.c > umf_dl_create_element.c
umf_dl_dump.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_dump.c > umf_dl_dump.c
umf_dl_extend_front.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_extend_front.c > umf_dl_extend_front.c
umf_dl_garbage_collection.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_garbage_collection.c > umf_dl_garbage_collection.c
umf_dl_get_memory.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_get_memory.c > umf_dl_get_memory.c
umf_dl_init_front.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_init_front.c > umf_dl_init_front.c
umf_dl_kernel.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_kernel.c > umf_dl_kernel.c
umf_dl_kernel_init.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_kernel_init.c > umf_dl_kernel_init.c
umf_dl_kernel_wrapup.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_kernel_wrapup.c > umf_dl_kernel_wrapup.c
umf_dl_local_search.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_local_search.c > umf_dl_local_search.c
umf_dl_lsolve.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_lsolve.c > umf_dl_lsolve.c
umf_dl_ltsolve.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_ltsolve.c > umf_dl_ltsolve.c
umf_dl_mem_alloc_element.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_mem_alloc_element.c > umf_dl_mem_alloc_element.c
umf_dl_mem_alloc_head_block.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_mem_alloc_head_block.c > umf_dl_mem_alloc_head_block.c
umf_dl_mem_alloc_tail_block.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_mem_alloc_tail_block.c > umf_dl_mem_alloc_tail_block.c
umf_dl_mem_free_tail_block.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_mem_free_tail_block.c > umf_dl_mem_free_tail_block.c
umf_dl_mem_init_memoryspace.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_mem_init_memoryspace.c > umf_dl_mem_init_memoryspace.c
umf_dl_report_vector.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_report_vector.c > umf_dl_report_vector.c
umf_dl_row_search.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_row_search.c > umf_dl_row_search.c
umf_dl_scale_column.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_scale_column.c > umf_dl_scale_column.c
umf_dl_set_stats.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_set_stats.c > umf_dl_set_stats.c
umf_dl_solve.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_solve.c > umf_dl_solve.c
umf_dl_symbolic_usage.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_symbolic_usage.c > umf_dl_symbolic_usage.c
umf_dl_transpose.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_transpose.c > umf_dl_transpose.c
umf_dl_tuple_lengths.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_tuple_lengths.c > umf_dl_tuple_lengths.c
umf_dl_usolve.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_usolve.c > umf_dl_usolve.c
umf_dl_utsolve.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_utsolve.c > umf_dl_utsolve.c
umf_dl_valid_numeric.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_valid_numeric.c > umf_dl_valid_numeric.c
umf_dl_valid_symbolic.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_valid_symbolic.c > umf_dl_valid_symbolic.c
umf_dl_grow_front.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_grow_front.c > umf_dl_grow_front.c
umf_dl_start_front.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_start_front.c > umf_dl_start_front.c
umf_dl_2by2.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_2by2.c > umf_dl_2by2.c
umf_dl_store_lu.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_store_lu.c > umf_dl_store_lu.c
umf_dl_scale.c:
	$(CPP) $(INCLUDES)  -DDLONG umf_scale.c > umf_dl_scale.c
umfpack_dl_wsolve.c:
	$(CPP) $(INCLUDES)  -DDLONG -DWSOLVE umfpack_solve.c > umfpack_dl_wsolve.c
umfpack_dl_col_to_triplet.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_col_to_triplet.c > umfpack_dl_col_to_triplet.c
umfpack_dl_defaults.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_defaults.c > umfpack_dl_defaults.c
umfpack_dl_free_numeric.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_free_numeric.c > umfpack_dl_free_numeric.c
umfpack_dl_free_symbolic.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_free_symbolic.c > umfpack_dl_free_symbolic.c
umfpack_dl_get_numeric.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_get_numeric.c > umfpack_dl_get_numeric.c
umfpack_dl_get_lunz.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_get_lunz.c > umfpack_dl_get_lunz.c
umfpack_dl_get_symbolic.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_get_symbolic.c > umfpack_dl_get_symbolic.c
umfpack_dl_get_determinant.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_get_determinant.c > umfpack_dl_get_determinant.c
umfpack_dl_numeric.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_numeric.c > umfpack_dl_numeric.c
umfpack_dl_qsymbolic.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_qsymbolic.c > umfpack_dl_qsymbolic.c
umfpack_dl_report_control.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_report_control.c > umfpack_dl_report_control.c
umfpack_dl_report_info.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_report_info.c > umfpack_dl_report_info.c
umfpack_dl_report_matrix.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_report_matrix.c > umfpack_dl_report_matrix.c
umfpack_dl_report_numeric.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_report_numeric.c > umfpack_dl_report_numeric.c
umfpack_dl_report_perm.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_report_perm.c > umfpack_dl_report_perm.c
umfpack_dl_report_status.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_report_status.c > umfpack_dl_report_status.c
umfpack_dl_report_symbolic.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_report_symbolic.c > umfpack_dl_report_symbolic.c
umfpack_dl_report_triplet.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_report_triplet.c > umfpack_dl_report_triplet.c
umfpack_dl_report_vector.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_report_vector.c > umfpack_dl_report_vector.c
umfpack_dl_solve.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_solve.c > umfpack_dl_solve.c
umfpack_dl_symbolic.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_symbolic.c > umfpack_dl_symbolic.c
umfpack_dl_transpose.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_transpose.c > umfpack_dl_transpose.c
umfpack_dl_triplet_to_col.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_triplet_to_col.c > umfpack_dl_triplet_to_col.c
umfpack_dl_scale.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_scale.c > umfpack_dl_scale.c
umfpack_dl_load_numeric.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_load_numeric.c > umfpack_dl_load_numeric.c
umfpack_dl_save_numeric.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_save_numeric.c > umfpack_dl_save_numeric.c
umfpack_dl_load_symbolic.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_load_symbolic.c > umfpack_dl_load_symbolic.c
umfpack_dl_save_symbolic.c:
	$(CPP) $(INCLUDES)  -DDLONG umfpack_save_symbolic.c > umfpack_dl_save_symbolic.c
umf_zi_lhsolve.c:
	$(CPP) $(INCLUDES)  -DZINT -DCONJUGATE_SOLVE umf_ltsolve.c > umf_zi_lhsolve.c
umf_zi_uhsolve.c:
	$(CPP) $(INCLUDES)  -DZINT -DCONJUGATE_SOLVE umf_utsolve.c > umf_zi_uhsolve.c
umf_zi_triplet_map_nox.c:
	$(CPP) $(INCLUDES)  -DZINT -DDO_MAP umf_triplet.c > umf_zi_triplet_map_nox.c
umf_zi_triplet_nomap_x.c:
	$(CPP) $(INCLUDES)  -DZINT -DDO_VALUES umf_triplet.c > umf_zi_triplet_nomap_x.c
umf_zi_triplet_nomap_nox.c:
	$(CPP) $(INCLUDES)  -DZINT umf_triplet.c > umf_zi_triplet_nomap_nox.c
umf_zi_triplet_map_x.c:
	$(CPP) $(INCLUDES)  -DZINT -DDO_MAP -DDO_VALUES umf_triplet.c > umf_zi_triplet_map_x.c
umf_zi_assemble_fixq.c:
	$(CPP) $(INCLUDES)  -DZINT -DFIXQ umf_assemble.c > umf_zi_assemble_fixq.c
umf_zi_store_lu_drop.c:
	$(CPP) $(INCLUDES)  -DZINT -DDROP umf_store_lu.c > umf_zi_store_lu_drop.c
umf_zi_assemble.c:
	$(CPP) $(INCLUDES)  -DZINT umf_assemble.c > umf_zi_assemble.c
umf_zi_blas3_update.c:
	$(CPP) $(INCLUDES)  -DZINT umf_blas3_update.c > umf_zi_blas3_update.c
umf_zi_build_tuples.c:
	$(CPP) $(INCLUDES)  -DZINT umf_build_tuples.c > umf_zi_build_tuples.c
umf_zi_create_element.c:
	$(CPP) $(INCLUDES)  -DZINT umf_create_element.c > umf_zi_create_element.c
umf_zi_dump.c:
	$(CPP) $(INCLUDES)  -DZINT umf_dump.c > umf_zi_dump.c
umf_zi_extend_front.c:
	$(CPP) $(INCLUDES)  -DZINT umf_extend_front.c > umf_zi_extend_front.c
umf_zi_garbage_collection.c:
	$(CPP) $(INCLUDES)  -DZINT umf_garbage_collection.c > umf_zi_garbage_collection.c
umf_zi_get_memory.c:
	$(CPP) $(INCLUDES)  -DZINT umf_get_memory.c > umf_zi_get_memory.c
umf_zi_init_front.c:
	$(CPP) $(INCLUDES)  -DZINT umf_init_front.c > umf_zi_init_front.c
umf_zi_kernel.c:
	$(CPP) $(INCLUDES)  -DZINT umf_kernel.c > umf_zi_kernel.c
umf_zi_kernel_init.c:
	$(CPP) $(INCLUDES)  -DZINT umf_kernel_init.c > umf_zi_kernel_init.c
umf_zi_kernel_wrapup.c:
	$(CPP) $(INCLUDES)  -DZINT umf_kernel_wrapup.c > umf_zi_kernel_wrapup.c
umf_zi_local_search.c:
	$(CPP) $(INCLUDES)  -DZINT umf_local_search.c > umf_zi_local_search.c
umf_zi_lsolve.c:
	$(CPP) $(INCLUDES)  -DZINT umf_lsolve.c > umf_zi_lsolve.c
umf_zi_ltsolve.c:
	$(CPP) $(INCLUDES)  -DZINT umf_ltsolve.c > umf_zi_ltsolve.c
umf_zi_mem_alloc_element.c:
	$(CPP) $(INCLUDES)  -DZINT umf_mem_alloc_element.c > umf_zi_mem_alloc_element.c
umf_zi_mem_alloc_head_block.c:
	$(CPP) $(INCLUDES)  -DZINT umf_mem_alloc_head_block.c > umf_zi_mem_alloc_head_block.c
umf_zi_mem_alloc_tail_block.c:
	$(CPP) $(INCLUDES)  -DZINT umf_mem_alloc_tail_block.c > umf_zi_mem_alloc_tail_block.c
umf_zi_mem_free_tail_block.c:
	$(CPP) $(INCLUDES)  -DZINT umf_mem_free_tail_block.c > umf_zi_mem_free_tail_block.c
umf_zi_mem_init_memoryspace.c:
	$(CPP) $(INCLUDES)  -DZINT umf_mem_init_memoryspace.c > umf_zi_mem_init_memoryspace.c
umf_zi_report_vector.c:
	$(CPP) $(INCLUDES)  -DZINT umf_report_vector.c > umf_zi_report_vector.c
umf_zi_row_search.c:
	$(CPP) $(INCLUDES)  -DZINT umf_row_search.c > umf_zi_row_search.c
umf_zi_scale_column.c:
	$(CPP) $(INCLUDES)  -DZINT umf_scale_column.c > umf_zi_scale_column.c
umf_zi_set_stats.c:
	$(CPP) $(INCLUDES)  -DZINT umf_set_stats.c > umf_zi_set_stats.c
umf_zi_solve.c:
	$(CPP) $(INCLUDES)  -DZINT umf_solve.c > umf_zi_solve.c
umf_zi_symbolic_usage.c:
	$(CPP) $(INCLUDES)  -DZINT umf_symbolic_usage.c > umf_zi_symbolic_usage.c
umf_zi_transpose.c:
	$(CPP) $(INCLUDES)  -DZINT umf_transpose.c > umf_zi_transpose.c
umf_zi_tuple_lengths.c:
	$(CPP) $(INCLUDES)  -DZINT umf_tuple_lengths.c > umf_zi_tuple_lengths.c
umf_zi_usolve.c:
	$(CPP) $(INCLUDES)  -DZINT umf_usolve.c > umf_zi_usolve.c
umf_zi_utsolve.c:
	$(CPP) $(INCLUDES)  -DZINT umf_utsolve.c > umf_zi_utsolve.c
umf_zi_valid_numeric.c:
	$(CPP) $(INCLUDES)  -DZINT umf_valid_numeric.c > umf_zi_valid_numeric.c
umf_zi_valid_symbolic.c:
	$(CPP) $(INCLUDES)  -DZINT umf_valid_symbolic.c > umf_zi_valid_symbolic.c
umf_zi_grow_front.c:
	$(CPP) $(INCLUDES)  -DZINT umf_grow_front.c > umf_zi_grow_front.c
umf_zi_start_front.c:
	$(CPP) $(INCLUDES)  -DZINT umf_start_front.c > umf_zi_start_front.c
umf_zi_2by2.c:
	$(CPP) $(INCLUDES)  -DZINT umf_2by2.c > umf_zi_2by2.c
umf_zi_store_lu.c:
	$(CPP) $(INCLUDES)  -DZINT umf_store_lu.c > umf_zi_store_lu.c
umf_zi_scale.c:
	$(CPP) $(INCLUDES)  -DZINT umf_scale.c > umf_zi_scale.c
umfpack_zi_wsolve.c:
	$(CPP) $(INCLUDES)  -DZINT -DWSOLVE umfpack_solve.c > umfpack_zi_wsolve.c
umfpack_zi_col_to_triplet.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_col_to_triplet.c > umfpack_zi_col_to_triplet.c
umfpack_zi_defaults.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_defaults.c > umfpack_zi_defaults.c
umfpack_zi_free_numeric.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_free_numeric.c > umfpack_zi_free_numeric.c
umfpack_zi_free_symbolic.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_free_symbolic.c > umfpack_zi_free_symbolic.c
umfpack_zi_get_numeric.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_get_numeric.c > umfpack_zi_get_numeric.c
umfpack_zi_get_lunz.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_get_lunz.c > umfpack_zi_get_lunz.c
umfpack_zi_get_symbolic.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_get_symbolic.c > umfpack_zi_get_symbolic.c
umfpack_zi_get_determinant.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_get_determinant.c > umfpack_zi_get_determinant.c
umfpack_zi_numeric.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_numeric.c > umfpack_zi_numeric.c
umfpack_zi_qsymbolic.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_qsymbolic.c > umfpack_zi_qsymbolic.c
umfpack_zi_report_control.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_report_control.c > umfpack_zi_report_control.c
umfpack_zi_report_info.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_report_info.c > umfpack_zi_report_info.c
umfpack_zi_report_matrix.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_report_matrix.c > umfpack_zi_report_matrix.c
umfpack_zi_report_numeric.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_report_numeric.c > umfpack_zi_report_numeric.c
umfpack_zi_report_perm.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_report_perm.c > umfpack_zi_report_perm.c
umfpack_zi_report_status.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_report_status.c > umfpack_zi_report_status.c
umfpack_zi_report_symbolic.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_report_symbolic.c > umfpack_zi_report_symbolic.c
umfpack_zi_report_triplet.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_report_triplet.c > umfpack_zi_report_triplet.c
umfpack_zi_report_vector.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_report_vector.c > umfpack_zi_report_vector.c
umfpack_zi_solve.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_solve.c > umfpack_zi_solve.c
umfpack_zi_symbolic.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_symbolic.c > umfpack_zi_symbolic.c
umfpack_zi_transpose.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_transpose.c > umfpack_zi_transpose.c
umfpack_zi_triplet_to_col.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_triplet_to_col.c > umfpack_zi_triplet_to_col.c
umfpack_zi_scale.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_scale.c > umfpack_zi_scale.c
umfpack_zi_load_numeric.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_load_numeric.c > umfpack_zi_load_numeric.c
umfpack_zi_save_numeric.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_save_numeric.c > umfpack_zi_save_numeric.c
umfpack_zi_load_symbolic.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_load_symbolic.c > umfpack_zi_load_symbolic.c
umfpack_zi_save_symbolic.c:
	$(CPP) $(INCLUDES)  -DZINT umfpack_save_symbolic.c > umfpack_zi_save_symbolic.c
umf_zl_lhsolve.c:
	$(CPP) $(INCLUDES)  -DZLONG -DCONJUGATE_SOLVE umf_ltsolve.c > umf_zl_lhsolve.c
umf_zl_uhsolve.c:
	$(CPP) $(INCLUDES)  -DZLONG -DCONJUGATE_SOLVE umf_utsolve.c > umf_zl_uhsolve.c
umf_zl_triplet_map_nox.c:
	$(CPP) $(INCLUDES)  -DZLONG -DDO_MAP umf_triplet.c > umf_zl_triplet_map_nox.c
umf_zl_triplet_nomap_x.c:
	$(CPP) $(INCLUDES)  -DZLONG -DDO_VALUES umf_triplet.c > umf_zl_triplet_nomap_x.c
umf_zl_triplet_nomap_nox.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_triplet.c > umf_zl_triplet_nomap_nox.c
umf_zl_triplet_map_x.c:
	$(CPP) $(INCLUDES)  -DZLONG -DDO_MAP -DDO_VALUES umf_triplet.c > umf_zl_triplet_map_x.c
umf_zl_assemble_fixq.c:
	$(CPP) $(INCLUDES)  -DZLONG -DFIXQ umf_assemble.c > umf_zl_assemble_fixq.c
umf_zl_store_lu_drop.c:
	$(CPP) $(INCLUDES)  -DZLONG -DDROP umf_store_lu.c > umf_zl_store_lu_drop.c
umf_zl_assemble.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_assemble.c > umf_zl_assemble.c
umf_zl_blas3_update.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_blas3_update.c > umf_zl_blas3_update.c
umf_zl_build_tuples.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_build_tuples.c > umf_zl_build_tuples.c
umf_zl_create_element.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_create_element.c > umf_zl_create_element.c
umf_zl_dump.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_dump.c > umf_zl_dump.c
umf_zl_extend_front.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_extend_front.c > umf_zl_extend_front.c
umf_zl_garbage_collection.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_garbage_collection.c > umf_zl_garbage_collection.c
umf_zl_get_memory.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_get_memory.c > umf_zl_get_memory.c
umf_zl_init_front.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_init_front.c > umf_zl_init_front.c
umf_zl_kernel.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_kernel.c > umf_zl_kernel.c
umf_zl_kernel_init.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_kernel_init.c > umf_zl_kernel_init.c
umf_zl_kernel_wrapup.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_kernel_wrapup.c > umf_zl_kernel_wrapup.c
umf_zl_local_search.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_local_search.c > umf_zl_local_search.c
umf_zl_lsolve.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_lsolve.c > umf_zl_lsolve.c
umf_zl_ltsolve.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_ltsolve.c > umf_zl_ltsolve.c
umf_zl_mem_alloc_element.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_mem_alloc_element.c > umf_zl_mem_alloc_element.c
umf_zl_mem_alloc_head_block.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_mem_alloc_head_block.c > umf_zl_mem_alloc_head_block.c
umf_zl_mem_alloc_tail_block.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_mem_alloc_tail_block.c > umf_zl_mem_alloc_tail_block.c
umf_zl_mem_free_tail_block.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_mem_free_tail_block.c > umf_zl_mem_free_tail_block.c
umf_zl_mem_init_memoryspace.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_mem_init_memoryspace.c > umf_zl_mem_init_memoryspace.c
umf_zl_report_vector.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_report_vector.c > umf_zl_report_vector.c
umf_zl_row_search.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_row_search.c > umf_zl_row_search.c
umf_zl_scale_column.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_scale_column.c > umf_zl_scale_column.c
umf_zl_set_stats.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_set_stats.c > umf_zl_set_stats.c
umf_zl_solve.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_solve.c > umf_zl_solve.c
umf_zl_symbolic_usage.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_symbolic_usage.c > umf_zl_symbolic_usage.c
umf_zl_transpose.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_transpose.c > umf_zl_transpose.c
umf_zl_tuple_lengths.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_tuple_lengths.c > umf_zl_tuple_lengths.c
umf_zl_usolve.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_usolve.c > umf_zl_usolve.c
umf_zl_utsolve.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_utsolve.c > umf_zl_utsolve.c
umf_zl_valid_numeric.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_valid_numeric.c > umf_zl_valid_numeric.c
umf_zl_valid_symbolic.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_valid_symbolic.c > umf_zl_valid_symbolic.c
umf_zl_grow_front.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_grow_front.c > umf_zl_grow_front.c
umf_zl_start_front.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_start_front.c > umf_zl_start_front.c
umf_zl_2by2.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_2by2.c > umf_zl_2by2.c
umf_zl_store_lu.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_store_lu.c > umf_zl_store_lu.c
umf_zl_scale.c:
	$(CPP) $(INCLUDES)  -DZLONG umf_scale.c > umf_zl_scale.c
umfpack_zl_wsolve.c:
	$(CPP) $(INCLUDES)  -DZLONG -DWSOLVE umfpack_solve.c > umfpack_zl_wsolve.c
umfpack_zl_col_to_triplet.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_col_to_triplet.c > umfpack_zl_col_to_triplet.c
umfpack_zl_defaults.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_defaults.c > umfpack_zl_defaults.c
umfpack_zl_free_numeric.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_free_numeric.c > umfpack_zl_free_numeric.c
umfpack_zl_free_symbolic.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_free_symbolic.c > umfpack_zl_free_symbolic.c
umfpack_zl_get_numeric.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_get_numeric.c > umfpack_zl_get_numeric.c
umfpack_zl_get_lunz.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_get_lunz.c > umfpack_zl_get_lunz.c
umfpack_zl_get_symbolic.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_get_symbolic.c > umfpack_zl_get_symbolic.c
umfpack_zl_get_determinant.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_get_determinant.c > umfpack_zl_get_determinant.c
umfpack_zl_numeric.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_numeric.c > umfpack_zl_numeric.c
umfpack_zl_qsymbolic.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_qsymbolic.c > umfpack_zl_qsymbolic.c
umfpack_zl_report_control.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_report_control.c > umfpack_zl_report_control.c
umfpack_zl_report_info.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_report_info.c > umfpack_zl_report_info.c
umfpack_zl_report_matrix.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_report_matrix.c > umfpack_zl_report_matrix.c
umfpack_zl_report_numeric.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_report_numeric.c > umfpack_zl_report_numeric.c
umfpack_zl_report_perm.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_report_perm.c > umfpack_zl_report_perm.c
umfpack_zl_report_status.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_report_status.c > umfpack_zl_report_status.c
umfpack_zl_report_symbolic.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_report_symbolic.c > umfpack_zl_report_symbolic.c
umfpack_zl_report_triplet.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_report_triplet.c > umfpack_zl_report_triplet.c
umfpack_zl_report_vector.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_report_vector.c > umfpack_zl_report_vector.c
umfpack_zl_solve.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_solve.c > umfpack_zl_solve.c
umfpack_zl_symbolic.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_symbolic.c > umfpack_zl_symbolic.c
umfpack_zl_transpose.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_transpose.c > umfpack_zl_transpose.c
umfpack_zl_triplet_to_col.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_triplet_to_col.c > umfpack_zl_triplet_to_col.c
umfpack_zl_scale.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_scale.c > umfpack_zl_scale.c
umfpack_zl_load_numeric.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_load_numeric.c > umfpack_zl_load_numeric.c
umfpack_zl_save_numeric.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_save_numeric.c > umfpack_zl_save_numeric.c
umfpack_zl_load_symbolic.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_load_symbolic.c > umfpack_zl_load_symbolic.c
umfpack_zl_save_symbolic.c:
	$(CPP) $(INCLUDES)  -DZLONG umfpack_save_symbolic.c > umfpack_zl_save_symbolic.c

clean-local:
	-rm -f $(UMFPACK_CPP_SOURCES)

#
# umfpack fortran wrappers
#

#umf4_f_f77wrapper.c: umf4_f77wrapper.c
#	$(CPP) $(INCLUDES) umf4_f77wrapper.c > umf4_f_f77wrapper.c

#umf4_f_f77zwrapper.c: umf4_f77zwrapper.c
#	$(CPP) $(INCLUDES) umf4_f77zwrapper.c > umf4_f_f77zwrapper.c

umf4_f_f77wrapper.c: umf4_f77wrapper.c
	$(CPP) $(INCLUDES) -DLONG umf4_f77wrapper.c > umf4_f_f77wrapper.c

umf4_f_f77zwrapper.c: umf4_f77zwrapper.c
	$(CPP) $(INCLUDES) -DLONG umf4_f77zwrapper.c > umf4_f_f77zwrapper.c
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
