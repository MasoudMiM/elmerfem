
Starting program Elmergrid
****************** Elmergrid ************************
This program can create simple 2D structured meshes consisting of
linear, quadratic or cubic rectangles or triangles. The meshes may
also be extruded and revolved to create 3D forms. In addition many
mesh formats may be imported into Elmer software. Some options have
not been properly tested. Contact the author if you face problems.

The program has two operation modes
A) Command file mode which has the command file as the only argument
   'ElmerGrid commandfile.eg'

B) Inline mode which expects at least three input parameters
   'ElmerGrid 1 3 test'

The first parameter defines the input file format:
1)  .grd      : Elmergrid file format
2)  .mesh.*   : Elmer input format
3)  .ep       : Elmer output format
4)  .ansys    : Ansys input format
5)  .inp      : Abaqus input format by Ideas
6)  .fil      : Abaqus output format
7)  .FDNEUT   : Gambit (Fidap) neutral file
8)  .d        : Easymesh input format
9)  .mphtxt   : Comsol Multiphysics mesh format
10) .dat      : Fieldview format
11) .node,.ele: Triangle 2D mesh format
12) .mesh     : Medit mesh format
13) .msh      : GID mesh format
14) .msh      : Gmsh mesh format
15) .ep.i     : Partitioned ElmerPost format

The second parameter defines the output file format:
1)  .grd      : ElmerGrid file format
2)  .mesh.*   : ElmerSolver format (also partitioned .part format)
3)  .ep       : ElmerPost format

The third parameter is the name of the input file.
If the file does not exist, an example with the same name is created.
The default output file name is the same with a different suffix.

There are several additional in-line parameters that are
taken into account only when applicable to the given format.
-out str             : name of the output file
-in str              : name of a secondary input file
-decimals            : number of decimals in the saved mesh (eg. 8)
-triangles           : rectangles will be divided to triangles
-merge real          : merges nodes that are close to each other
-order real[3]       : reorder elements and nodes using c1*x+c2*y+c3*z
-scale real[3]       : scale the coordinates with vector real[3]
-translate real[3]   : translate the nodes with vector real[3]
-rotate real[3]      : rotate around the main axis with angles real[3]
-clone int[3]        : make ideantilcal copies of the mesh
-clonesize real[3]   : the size of the mesh to be cloned if larger to the original
-mirror int[3]       : copy the mesh around the origin in coordinate directions
-unite               : the meshes will be united
-polar real          : map 2D mesh to a cylindrical shell with given radius
-cylinder            : map 2D/3D cylindrical mesh to a cartesian mesh
-reduce int[2]       : reduce element order at material interval [int1 int2]
-increase            : increase element order from one to two
-partition int[3]    : the mesh will be partitioned in main directions
-partorder real[3]   : in the above method, the direction of the ordering
-metis int           : the mesh will be partitioned with Metis
-periodic int[3]     : decleare the periodic coordinate directions
-bcoffset int        : add an offset to the boundary conditions
-discont int         : make the boundary to have secondary nodes
-removelowdim        : remove boundaries that are two ranks lower than highest dim
-bulkorder           : renumber materials types from 1 so that every number is used
-boundorder          : renumber boundary types from 1 so that every number is used
-autoclean           : this performs the united action of the three above
-bulkbound int[3]    : set the union of materials [int1 int2] to be boundary int3
-boundbound int[3]   : set the union of boundaries [int1 int2] to be boundary int3
-bulktype int[3]     : set material types in interval [int1 int2] to type int3
-boundtype int[3]    : set sidetypes in interval [int1 int2] to type int3
-layer int[2] real[2]: make a boundary layer for given boundary
-layermove int       : apply Jacobi filter int times to move the layered mesh
-3d / -2d / -1d      : mesh is 3, 2 or 1-dimensional (applies to examples)
-isoparam            : ensure that higher order elements are convex
-nobound             : disable saving of boundary elements in ElmerPost format

Thank you for using Elmergrid!
Send bug reports and feature wishes to peter.raback@csc.fi
